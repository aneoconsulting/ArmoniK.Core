name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  versionning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.snapshot.outputs.version }}
      release: ${{ steps.release.outputs.version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0

    - name: Remove tag locally
    # This is done so that codacy/git-version can compute the version of the images deployed on docker hub
      run: |
        git tag -d ${{ github.ref_name }}

    - name: Compute branch for codacy
    # This is the branch to give to codacy to compute the snapshot version
      id: rev
      run: |
        export CURRENT_BRANCH=$(git describe --tags)
        echo "current-branch=$CURRENT_BRANCH" >> $GITHUB_OUTPUT

    - name: Generate Snapshot Version
      id: snapshot
      uses: codacy/git-version@2.7.1
      with:
        minor-identifier: "feat:"
        release-branch: ${{ github.ref_name }}-pre
        dev-branch: ${{ steps.rev.outputs.current-branch }}

    - name: Generate Release Version
      id: release
      uses: codacy/git-version@2.7.1
      with:
        minor-identifier: "feat:"
        release-branch: ${{ steps.rev.outputs.current-branch }}
        dev-branch: main

    - name: Put versions in step summary
      run: |
        echo SNAPSHOT => ${{ steps.snapshot.outputs.version }} >> $GITHUB_STEP_SUMMARY
        echo RELASE   => ${{ steps.release.outputs.version }} >> $GITHUB_STEP_SUMMARY

    - name: Validate tag
      run : test ${{ steps.release.outputs.version }} == ${{ github.ref_name }}

    - name: Delete tag if invalid
      if: failure() || cancelled()
      run : git push origin -d ${{ github.ref_name }}


  tagImagesRelease:
    runs-on: ubuntu-latest
    needs:
      - versionning
    env:
      VERSION: ${{ needs.versionning.outputs.version }}
      RELEASE: ${{ needs.versionning.outputs.release }}
    strategy:
      fail-fast: true
      matrix:
        image:
        - dockerhubaneo/armonik_pollingagent
        - dockerhubaneo/armonik_control_metrics
        - dockerhubaneo/armonik_control_partition_metrics
        - dockerhubaneo/armonik_control
        - dockerhubaneo/armonik_control_dependency_checker
        - dockerhubaneo/armonik_core_stream_test_worker
        - dockerhubaneo/armonik_core_stream_test_client
        - dockerhubaneo/armonik_core_htcmock_test_worker
        - dockerhubaneo/armonik_core_htcmock_test_client
        - dockerhubaneo/armonik_core_bench_test_worker
        - dockerhubaneo/armonik_core_bench_test_client
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.ref }}
        submodules: true

    - name: login
      run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_LOGIN }} --password-stdin

    - name: ReTag release
      run: docker buildx imagetools create ${{ matrix.image }}:${VERSION} --tag ${{ matrix.image }}:${RELEASE}

    - name: ReTag latest
      run: docker buildx imagetools create ${{ matrix.image }}:${VERSION} --tag ${{ matrix.image }}:latest


  update-changelog:
    runs-on: ubuntu-latest
    needs:
      - versionning
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: npx changelogithub
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}