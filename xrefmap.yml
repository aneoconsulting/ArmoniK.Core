### YamlMime:XRefMap
sorted: true
references:
- uid: ArmoniK.Api.gRPC.V1
  name: ArmoniK.Api.gRPC.V1
  href: api/ArmoniK.Api.gRPC.V1.html
  commentId: N:ArmoniK.Api.gRPC.V1
  fullName: ArmoniK.Api.gRPC.V1
  nameWithType: ArmoniK.Api.gRPC.V1
- uid: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest
  name: CreateLargeTaskRequest
  href: api/ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.html
  commentId: T:ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest
  fullName: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest
  nameWithType: CreateLargeTaskRequest
- uid: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitRequest(ILogger,System.String)
  name: GetInitRequest(ILogger, String)
  href: api/ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.html#ArmoniK_Api_gRPC_V1_CreateLargeTaskRequest_GetInitRequest_ILogger_System_String_
  commentId: M:ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitRequest(ILogger,System.String)
  fullName: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitRequest(ILogger, System.String)
  nameWithType: CreateLargeTaskRequest.GetInitRequest(ILogger, String)
- uid: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitRequest*
  name: GetInitRequest
  href: api/ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.html#ArmoniK_Api_gRPC_V1_CreateLargeTaskRequest_GetInitRequest_
  commentId: Overload:ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitRequest
  isSpec: "True"
  fullName: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitRequest
  nameWithType: CreateLargeTaskRequest.GetInitRequest
- uid: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitTask(ILogger,System.String)
  name: GetInitTask(ILogger, String)
  href: api/ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.html#ArmoniK_Api_gRPC_V1_CreateLargeTaskRequest_GetInitTask_ILogger_System_String_
  commentId: M:ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitTask(ILogger,System.String)
  fullName: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitTask(ILogger, System.String)
  nameWithType: CreateLargeTaskRequest.GetInitTask(ILogger, String)
- uid: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitTask*
  name: GetInitTask
  href: api/ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.html#ArmoniK_Api_gRPC_V1_CreateLargeTaskRequest_GetInitTask_
  commentId: Overload:ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitTask
  isSpec: "True"
  fullName: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetInitTask
  nameWithType: CreateLargeTaskRequest.GetInitTask
- uid: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetTaskPayload(ILogger,System.String)
  name: GetTaskPayload(ILogger, String)
  href: api/ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.html#ArmoniK_Api_gRPC_V1_CreateLargeTaskRequest_GetTaskPayload_ILogger_System_String_
  commentId: M:ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetTaskPayload(ILogger,System.String)
  fullName: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetTaskPayload(ILogger, System.String)
  nameWithType: CreateLargeTaskRequest.GetTaskPayload(ILogger, String)
- uid: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetTaskPayload*
  name: GetTaskPayload
  href: api/ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.html#ArmoniK_Api_gRPC_V1_CreateLargeTaskRequest_GetTaskPayload_
  commentId: Overload:ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetTaskPayload
  isSpec: "True"
  fullName: ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest.GetTaskPayload
  nameWithType: CreateLargeTaskRequest.GetTaskPayload
- uid: ArmoniK.Api.gRPC.V1.PayloadConfiguration
  name: PayloadConfiguration
  href: api/ArmoniK.Api.gRPC.V1.PayloadConfiguration.html
  commentId: T:ArmoniK.Api.gRPC.V1.PayloadConfiguration
  fullName: ArmoniK.Api.gRPC.V1.PayloadConfiguration
  nameWithType: PayloadConfiguration
- uid: ArmoniK.Api.gRPC.V1.PayloadConfiguration.MaxChunkSize
  name: MaxChunkSize
  href: api/ArmoniK.Api.gRPC.V1.PayloadConfiguration.html#ArmoniK_Api_gRPC_V1_PayloadConfiguration_MaxChunkSize
  commentId: F:ArmoniK.Api.gRPC.V1.PayloadConfiguration.MaxChunkSize
  fullName: ArmoniK.Api.gRPC.V1.PayloadConfiguration.MaxChunkSize
  nameWithType: PayloadConfiguration.MaxChunkSize
- uid: ArmoniK.Core.Adapters.Amqp
  name: ArmoniK.Core.Adapters.Amqp
  href: api/ArmoniK.Core.Adapters.Amqp.html
  commentId: N:ArmoniK.Core.Adapters.Amqp
  fullName: ArmoniK.Core.Adapters.Amqp
  nameWithType: ArmoniK.Core.Adapters.Amqp
- uid: ArmoniK.Core.Adapters.Amqp.Options
  name: ArmoniK.Core.Adapters.Amqp.Options
  href: api/ArmoniK.Core.Adapters.Amqp.Options.html
  commentId: N:ArmoniK.Core.Adapters.Amqp.Options
  fullName: ArmoniK.Core.Adapters.Amqp.Options
  nameWithType: ArmoniK.Core.Adapters.Amqp.Options
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp
  name: Amqp
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html
  commentId: T:ArmoniK.Core.Adapters.Amqp.Options.Amqp
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp
  nameWithType: Amqp
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.AllowHostMismatch
  name: AllowHostMismatch
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_AllowHostMismatch
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.AllowHostMismatch
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.AllowHostMismatch
  nameWithType: Amqp.AllowHostMismatch
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.AllowHostMismatch*
  name: AllowHostMismatch
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_AllowHostMismatch_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.AllowHostMismatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.AllowHostMismatch
  nameWithType: Amqp.AllowHostMismatch
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.CaPath
  name: CaPath
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_CaPath
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.CaPath
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.CaPath
  nameWithType: Amqp.CaPath
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.CaPath*
  name: CaPath
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_CaPath_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.CaPath
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.CaPath
  nameWithType: Amqp.CaPath
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.CredentialsPath
  name: CredentialsPath
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_CredentialsPath
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.CredentialsPath
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.CredentialsPath
  nameWithType: Amqp.CredentialsPath
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.CredentialsPath*
  name: CredentialsPath
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_CredentialsPath_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.CredentialsPath
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.CredentialsPath
  nameWithType: Amqp.CredentialsPath
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Host
  name: Host
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_Host
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.Host
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Host
  nameWithType: Amqp.Host
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Host*
  name: Host
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_Host_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.Host
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Host
  nameWithType: Amqp.Host
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.MaxPriority
  name: MaxPriority
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_MaxPriority
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.MaxPriority
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.MaxPriority
  nameWithType: Amqp.MaxPriority
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.MaxPriority*
  name: MaxPriority
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_MaxPriority_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.MaxPriority
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.MaxPriority
  nameWithType: Amqp.MaxPriority
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Password
  name: Password
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_Password
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.Password
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Password
  nameWithType: Amqp.Password
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Password*
  name: Password
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_Password_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.Password
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Password
  nameWithType: Amqp.Password
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Port
  name: Port
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_Port
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.Port
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Port
  nameWithType: Amqp.Port
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Port*
  name: Port
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_Port_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.Port
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Port
  nameWithType: Amqp.Port
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Scheme
  name: Scheme
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_Scheme
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.Scheme
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Scheme
  nameWithType: Amqp.Scheme
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Scheme*
  name: Scheme
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_Scheme_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.Scheme
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.Scheme
  nameWithType: Amqp.Scheme
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_SettingSection
  commentId: F:ArmoniK.Core.Adapters.Amqp.Options.Amqp.SettingSection
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.SettingSection
  nameWithType: Amqp.SettingSection
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.User
  name: User
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_User
  commentId: P:ArmoniK.Core.Adapters.Amqp.Options.Amqp.User
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.User
  nameWithType: Amqp.User
- uid: ArmoniK.Core.Adapters.Amqp.Options.Amqp.User*
  name: User
  href: api/ArmoniK.Core.Adapters.Amqp.Options.Amqp.html#ArmoniK_Core_Adapters_Amqp_Options_Amqp_User_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.Options.Amqp.User
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.Options.Amqp.User
  nameWithType: Amqp.User
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler
  name: QueueMessageHandler
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html
  commentId: T:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler
  nameWithType: QueueMessageHandler
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.#ctor(Message,ISenderLink,IReceiverLink,System.String,ILogger,CancellationToken)
  name: QueueMessageHandler(Message, ISenderLink, IReceiverLink, String, ILogger, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler__ctor_Message_ISenderLink_IReceiverLink_System_String_ILogger_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.#ctor(Message,ISenderLink,IReceiverLink,System.String,ILogger,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.QueueMessageHandler(Message, ISenderLink, IReceiverLink, System.String, ILogger, CancellationToken)
  nameWithType: QueueMessageHandler.QueueMessageHandler(Message, ISenderLink, IReceiverLink, String, ILogger, CancellationToken)
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.#ctor*
  name: QueueMessageHandler
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.QueueMessageHandler
  nameWithType: QueueMessageHandler.QueueMessageHandler
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.CancellationToken
  name: CancellationToken
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_CancellationToken
  commentId: P:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.CancellationToken
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.CancellationToken
  nameWithType: QueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.CancellationToken*
  name: CancellationToken
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_CancellationToken_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.CancellationToken
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.CancellationToken
  nameWithType: QueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.DisposeAsync
  name: DisposeAsync()
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_DisposeAsync
  commentId: M:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.DisposeAsync
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.DisposeAsync()
  nameWithType: QueueMessageHandler.DisposeAsync()
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.DisposeAsync*
  name: DisposeAsync
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_DisposeAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.DisposeAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.DisposeAsync
  nameWithType: QueueMessageHandler.DisposeAsync
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.MessageId
  name: MessageId
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_MessageId
  commentId: P:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.MessageId
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.MessageId
  nameWithType: QueueMessageHandler.MessageId
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.MessageId*
  name: MessageId
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_MessageId_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.MessageId
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.MessageId
  nameWithType: QueueMessageHandler.MessageId
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.Status
  name: Status
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_Status
  commentId: P:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.Status
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.Status
  nameWithType: QueueMessageHandler.Status
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.Status*
  name: Status
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_Status_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.Status
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.Status
  nameWithType: QueueMessageHandler.Status
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.TaskId
  name: TaskId
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_TaskId
  commentId: P:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.TaskId
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.TaskId
  nameWithType: QueueMessageHandler.TaskId
- uid: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.TaskId*
  name: TaskId
  href: api/ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.html#ArmoniK_Core_Adapters_Amqp_QueueMessageHandler_TaskId_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.TaskId
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueMessageHandler.TaskId
  nameWithType: QueueMessageHandler.TaskId
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage
  name: QueueStorage
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html
  commentId: T:ArmoniK.Core.Adapters.Amqp.QueueStorage
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage
  nameWithType: QueueStorage
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.#ctor(ArmoniK.Core.Adapters.Amqp.Options.Amqp,ArmoniK.Core.Adapters.Amqp.SessionProvider,ILogger{ArmoniK.Core.Adapters.Amqp.QueueStorage})
  name: QueueStorage(Amqp, SessionProvider, ILogger<QueueStorage>)
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage__ctor_ArmoniK_Core_Adapters_Amqp_Options_Amqp_ArmoniK_Core_Adapters_Amqp_SessionProvider_ILogger_ArmoniK_Core_Adapters_Amqp_QueueStorage__
  commentId: M:ArmoniK.Core.Adapters.Amqp.QueueStorage.#ctor(ArmoniK.Core.Adapters.Amqp.Options.Amqp,ArmoniK.Core.Adapters.Amqp.SessionProvider,ILogger{ArmoniK.Core.Adapters.Amqp.QueueStorage})
  name.vb: QueueStorage(Amqp, SessionProvider, ILogger(Of QueueStorage))
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.QueueStorage(ArmoniK.Core.Adapters.Amqp.Options.Amqp, ArmoniK.Core.Adapters.Amqp.SessionProvider, ILogger<ArmoniK.Core.Adapters.Amqp.QueueStorage>)
  fullName.vb: ArmoniK.Core.Adapters.Amqp.QueueStorage.QueueStorage(ArmoniK.Core.Adapters.Amqp.Options.Amqp, ArmoniK.Core.Adapters.Amqp.SessionProvider, ILogger(Of ArmoniK.Core.Adapters.Amqp.QueueStorage))
  nameWithType: QueueStorage.QueueStorage(Amqp, SessionProvider, ILogger<QueueStorage>)
  nameWithType.vb: QueueStorage.QueueStorage(Amqp, SessionProvider, ILogger(Of QueueStorage))
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.#ctor*
  name: QueueStorage
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueStorage.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.QueueStorage
  nameWithType: QueueStorage.QueueStorage
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.Amqp.QueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: QueueStorage.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_Check_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueStorage.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.Check
  nameWithType: QueueStorage.Check
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name: EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_EnqueueMessagesAsync_IEnumerable_System_String__System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Amqp.QueueStorage.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name.vb: EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.EnqueueMessagesAsync(IEnumerable<System.String>, System.Int32, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Amqp.QueueStorage.EnqueueMessagesAsync(IEnumerable(Of System.String), System.Int32, CancellationToken)
  nameWithType: QueueStorage.EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  nameWithType.vb: QueueStorage.EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.EnqueueMessagesAsync*
  name: EnqueueMessagesAsync
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_EnqueueMessagesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueStorage.EnqueueMessagesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.EnqueueMessagesAsync
  nameWithType: QueueStorage.EnqueueMessagesAsync
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Amqp.QueueStorage.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.Init(CancellationToken)
  nameWithType: QueueStorage.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_Init_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueStorage.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.Init
  nameWithType: QueueStorage.Init
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.MaxPriority
  name: MaxPriority
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_MaxPriority
  commentId: P:ArmoniK.Core.Adapters.Amqp.QueueStorage.MaxPriority
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.MaxPriority
  nameWithType: QueueStorage.MaxPriority
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.MaxPriority*
  name: MaxPriority
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_MaxPriority_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueStorage.MaxPriority
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.MaxPriority
  nameWithType: QueueStorage.MaxPriority
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.PullAsync(System.Int32,CancellationToken)
  name: PullAsync(Int32, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_PullAsync_System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Amqp.QueueStorage.PullAsync(System.Int32,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.PullAsync(System.Int32, CancellationToken)
  nameWithType: QueueStorage.PullAsync(Int32, CancellationToken)
- uid: ArmoniK.Core.Adapters.Amqp.QueueStorage.PullAsync*
  name: PullAsync
  href: api/ArmoniK.Core.Adapters.Amqp.QueueStorage.html#ArmoniK_Core_Adapters_Amqp_QueueStorage_PullAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.QueueStorage.PullAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.QueueStorage.PullAsync
  nameWithType: QueueStorage.PullAsync
- uid: ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt
  name: ServiceCollectionExt
  href: api/ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.html
  commentId: T:ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt
  fullName: ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt
  nameWithType: ServiceCollectionExt
- uid: ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.AddAmqp(IServiceCollection,ConfigurationManager,ILogger)
  name: AddAmqp(IServiceCollection, ConfigurationManager, ILogger)
  href: api/ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.html#ArmoniK_Core_Adapters_Amqp_ServiceCollectionExt_AddAmqp_IServiceCollection_ConfigurationManager_ILogger_
  commentId: M:ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.AddAmqp(IServiceCollection,ConfigurationManager,ILogger)
  fullName: ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.AddAmqp(IServiceCollection, ConfigurationManager, ILogger)
  nameWithType: ServiceCollectionExt.AddAmqp(IServiceCollection, ConfigurationManager, ILogger)
- uid: ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.AddAmqp*
  name: AddAmqp
  href: api/ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.html#ArmoniK_Core_Adapters_Amqp_ServiceCollectionExt_AddAmqp_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.AddAmqp
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.ServiceCollectionExt.AddAmqp
  nameWithType: ServiceCollectionExt.AddAmqp
- uid: ArmoniK.Core.Adapters.Amqp.SessionProvider
  name: SessionProvider
  href: api/ArmoniK.Core.Adapters.Amqp.SessionProvider.html
  commentId: T:ArmoniK.Core.Adapters.Amqp.SessionProvider
  fullName: ArmoniK.Core.Adapters.Amqp.SessionProvider
  nameWithType: SessionProvider
- uid: ArmoniK.Core.Adapters.Amqp.SessionProvider.#ctor(ArmoniK.Core.Adapters.Amqp.Options.Amqp,ILogger)
  name: SessionProvider(Amqp, ILogger)
  href: api/ArmoniK.Core.Adapters.Amqp.SessionProvider.html#ArmoniK_Core_Adapters_Amqp_SessionProvider__ctor_ArmoniK_Core_Adapters_Amqp_Options_Amqp_ILogger_
  commentId: M:ArmoniK.Core.Adapters.Amqp.SessionProvider.#ctor(ArmoniK.Core.Adapters.Amqp.Options.Amqp,ILogger)
  fullName: ArmoniK.Core.Adapters.Amqp.SessionProvider.SessionProvider(ArmoniK.Core.Adapters.Amqp.Options.Amqp, ILogger)
  nameWithType: SessionProvider.SessionProvider(Amqp, ILogger)
- uid: ArmoniK.Core.Adapters.Amqp.SessionProvider.#ctor*
  name: SessionProvider
  href: api/ArmoniK.Core.Adapters.Amqp.SessionProvider.html#ArmoniK_Core_Adapters_Amqp_SessionProvider__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Amqp.SessionProvider.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Amqp.SessionProvider.SessionProvider
  nameWithType: SessionProvider.SessionProvider
- uid: ArmoniK.Core.Adapters.Memory
  name: ArmoniK.Core.Adapters.Memory
  href: api/ArmoniK.Core.Adapters.Memory.html
  commentId: N:ArmoniK.Core.Adapters.Memory
  fullName: ArmoniK.Core.Adapters.Memory
  nameWithType: ArmoniK.Core.Adapters.Memory
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable
  name: DispatchTable
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html
  commentId: T:ArmoniK.Core.Adapters.Memory.DispatchTable
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable
  nameWithType: DispatchTable
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.#ctor(ConcurrentDictionary{System.String,Dispatch},ConcurrentDictionary{System.String,Dispatch},ILogger{ArmoniK.Core.Adapters.Memory.DispatchTable})
  name: DispatchTable(ConcurrentDictionary<String, Dispatch>, ConcurrentDictionary<String, Dispatch>, ILogger<DispatchTable>)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable__ctor_ConcurrentDictionary_System_String_Dispatch__ConcurrentDictionary_System_String_Dispatch__ILogger_ArmoniK_Core_Adapters_Memory_DispatchTable__
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.#ctor(ConcurrentDictionary{System.String,Dispatch},ConcurrentDictionary{System.String,Dispatch},ILogger{ArmoniK.Core.Adapters.Memory.DispatchTable})
  name.vb: DispatchTable(ConcurrentDictionary(Of String, Dispatch), ConcurrentDictionary(Of String, Dispatch), ILogger(Of DispatchTable))
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTable(ConcurrentDictionary<System.String, Dispatch>, ConcurrentDictionary<System.String, Dispatch>, ILogger<ArmoniK.Core.Adapters.Memory.DispatchTable>)
  fullName.vb: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTable(ConcurrentDictionary(Of System.String, Dispatch), ConcurrentDictionary(Of System.String, Dispatch), ILogger(Of ArmoniK.Core.Adapters.Memory.DispatchTable))
  nameWithType: DispatchTable.DispatchTable(ConcurrentDictionary<String, Dispatch>, ConcurrentDictionary<String, Dispatch>, ILogger<DispatchTable>)
  nameWithType.vb: DispatchTable.DispatchTable(ConcurrentDictionary(Of String, Dispatch), ConcurrentDictionary(Of String, Dispatch), ILogger(Of DispatchTable))
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.#ctor*
  name: DispatchTable
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTable
  nameWithType: DispatchTable.DispatchTable
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.AddStatusToDispatch(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: AddStatusToDispatch(String, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_AddStatusToDispatch_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.AddStatusToDispatch(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.AddStatusToDispatch(System.String, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: DispatchTable.AddStatusToDispatch(String, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.AddStatusToDispatch*
  name: AddStatusToDispatch
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_AddStatusToDispatch_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.AddStatusToDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.AddStatusToDispatch
  nameWithType: DispatchTable.AddStatusToDispatch
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: DispatchTable.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_Check_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.Check
  nameWithType: DispatchTable.Check
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatch(System.String,CancellationToken)
  name: DeleteDispatch(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_DeleteDispatch_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatch(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatch(System.String, CancellationToken)
  nameWithType: DispatchTable.DeleteDispatch(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatch*
  name: DeleteDispatch
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_DeleteDispatch_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatch
  nameWithType: DispatchTable.DeleteDispatch
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatchFromTaskIdAsync(System.String,CancellationToken)
  name: DeleteDispatchFromTaskIdAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_DeleteDispatchFromTaskIdAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatchFromTaskIdAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatchFromTaskIdAsync(System.String, CancellationToken)
  nameWithType: DispatchTable.DeleteDispatchFromTaskIdAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatchFromTaskIdAsync*
  name: DeleteDispatchFromTaskIdAsync
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_DeleteDispatchFromTaskIdAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatchFromTaskIdAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DeleteDispatchFromTaskIdAsync
  nameWithType: DispatchTable.DeleteDispatchFromTaskIdAsync
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchRefreshPeriod
  name: DispatchRefreshPeriod
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_DispatchRefreshPeriod
  commentId: P:ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchRefreshPeriod
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchRefreshPeriod
  nameWithType: DispatchTable.DispatchRefreshPeriod
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchRefreshPeriod*
  name: DispatchRefreshPeriod
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_DispatchRefreshPeriod_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchRefreshPeriod
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchRefreshPeriod
  nameWithType: DispatchTable.DispatchRefreshPeriod
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTimeToLiveDuration
  name: DispatchTimeToLiveDuration
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_DispatchTimeToLiveDuration
  commentId: P:ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTimeToLiveDuration
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTimeToLiveDuration
  nameWithType: DispatchTable.DispatchTimeToLiveDuration
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTimeToLiveDuration*
  name: DispatchTimeToLiveDuration
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_DispatchTimeToLiveDuration_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTimeToLiveDuration
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.DispatchTimeToLiveDuration
  nameWithType: DispatchTable.DispatchTimeToLiveDuration
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.ExtendDispatchTtl(System.String,CancellationToken)
  name: ExtendDispatchTtl(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_ExtendDispatchTtl_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.ExtendDispatchTtl(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.ExtendDispatchTtl(System.String, CancellationToken)
  nameWithType: DispatchTable.ExtendDispatchTtl(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.ExtendDispatchTtl*
  name: ExtendDispatchTtl
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_ExtendDispatchTtl_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.ExtendDispatchTtl
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.ExtendDispatchTtl
  nameWithType: DispatchTable.ExtendDispatchTtl
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.GetDispatchAsync(System.String,CancellationToken)
  name: GetDispatchAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_GetDispatchAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.GetDispatchAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.GetDispatchAsync(System.String, CancellationToken)
  nameWithType: DispatchTable.GetDispatchAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.GetDispatchAsync*
  name: GetDispatchAsync
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_GetDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.GetDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.GetDispatchAsync
  nameWithType: DispatchTable.GetDispatchAsync
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.Init(CancellationToken)
  nameWithType: DispatchTable.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_Init_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.Init
  nameWithType: DispatchTable.Init
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.InitDispatchForTesting(System.String,System.String,System.String,System.Int32)
  name: InitDispatchForTesting(String, String, String, Int32)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_InitDispatchForTesting_System_String_System_String_System_String_System_Int32_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.InitDispatchForTesting(System.String,System.String,System.String,System.Int32)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.InitDispatchForTesting(System.String, System.String, System.String, System.Int32)
  nameWithType: DispatchTable.InitDispatchForTesting(String, String, String, Int32)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.InitDispatchForTesting*
  name: InitDispatchForTesting
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_InitDispatchForTesting_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.InitDispatchForTesting
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.InitDispatchForTesting
  nameWithType: DispatchTable.InitDispatchForTesting
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.ListDispatchAsync(System.String,CancellationToken)
  name: ListDispatchAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_ListDispatchAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.ListDispatchAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.ListDispatchAsync(System.String, CancellationToken)
  nameWithType: DispatchTable.ListDispatchAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.ListDispatchAsync*
  name: ListDispatchAsync
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_ListDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.ListDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.ListDispatchAsync
  nameWithType: DispatchTable.ListDispatchAsync
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_Logger
  commentId: P:ArmoniK.Core.Adapters.Memory.DispatchTable.Logger
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.Logger
  nameWithType: DispatchTable.Logger
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_Logger_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.Logger
  nameWithType: DispatchTable.Logger
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.TryAcquireDispatchAsync(System.String,System.String,System.String,IDictionary{System.String,System.String},CancellationToken)
  name: TryAcquireDispatchAsync(String, String, String, IDictionary<String, String>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_TryAcquireDispatchAsync_System_String_System_String_System_String_IDictionary_System_String_System_String__CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.DispatchTable.TryAcquireDispatchAsync(System.String,System.String,System.String,IDictionary{System.String,System.String},CancellationToken)
  name.vb: TryAcquireDispatchAsync(String, String, String, IDictionary(Of String, String), CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.TryAcquireDispatchAsync(System.String, System.String, System.String, IDictionary<System.String, System.String>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Memory.DispatchTable.TryAcquireDispatchAsync(System.String, System.String, System.String, IDictionary(Of System.String, System.String), CancellationToken)
  nameWithType: DispatchTable.TryAcquireDispatchAsync(String, String, String, IDictionary<String, String>, CancellationToken)
  nameWithType.vb: DispatchTable.TryAcquireDispatchAsync(String, String, String, IDictionary(Of String, String), CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.DispatchTable.TryAcquireDispatchAsync*
  name: TryAcquireDispatchAsync
  href: api/ArmoniK.Core.Adapters.Memory.DispatchTable.html#ArmoniK_Core_Adapters_Memory_DispatchTable_TryAcquireDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.DispatchTable.TryAcquireDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.DispatchTable.TryAcquireDispatchAsync
  nameWithType: DispatchTable.TryAcquireDispatchAsync
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage
  name: LockedQueueStorage
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html
  commentId: T:ArmoniK.Core.Adapters.Memory.LockedQueueStorage
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage
  nameWithType: LockedQueueStorage
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.AreMessagesUnique
  name: AreMessagesUnique
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_AreMessagesUnique
  commentId: P:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.AreMessagesUnique
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.AreMessagesUnique
  nameWithType: LockedQueueStorage.AreMessagesUnique
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.AreMessagesUnique*
  name: AreMessagesUnique
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_AreMessagesUnique_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.AreMessagesUnique
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.AreMessagesUnique
  nameWithType: LockedQueueStorage.AreMessagesUnique
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: LockedQueueStorage.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_Check_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Check
  nameWithType: LockedQueueStorage.Check
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name: EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_EnqueueMessagesAsync_IEnumerable_System_String__System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name.vb: EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.EnqueueMessagesAsync(IEnumerable<System.String>, System.Int32, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.EnqueueMessagesAsync(IEnumerable(Of System.String), System.Int32, CancellationToken)
  nameWithType: LockedQueueStorage.EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  nameWithType.vb: LockedQueueStorage.EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.EnqueueMessagesAsync*
  name: EnqueueMessagesAsync
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_EnqueueMessagesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.EnqueueMessagesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.EnqueueMessagesAsync
  nameWithType: LockedQueueStorage.EnqueueMessagesAsync
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Init(CancellationToken)
  nameWithType: LockedQueueStorage.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_Init_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.Init
  nameWithType: LockedQueueStorage.Init
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshExtension
  name: LockRefreshExtension
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_LockRefreshExtension
  commentId: P:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshExtension
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshExtension
  nameWithType: LockedQueueStorage.LockRefreshExtension
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshExtension*
  name: LockRefreshExtension
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_LockRefreshExtension_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshExtension
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshExtension
  nameWithType: LockedQueueStorage.LockRefreshExtension
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshPeriodicity
  name: LockRefreshPeriodicity
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_LockRefreshPeriodicity
  commentId: P:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshPeriodicity
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshPeriodicity
  nameWithType: LockedQueueStorage.LockRefreshPeriodicity
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshPeriodicity*
  name: LockRefreshPeriodicity
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_LockRefreshPeriodicity_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshPeriodicity
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.LockRefreshPeriodicity
  nameWithType: LockedQueueStorage.LockRefreshPeriodicity
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MaxPriority
  name: MaxPriority
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_MaxPriority
  commentId: P:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MaxPriority
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MaxPriority
  nameWithType: LockedQueueStorage.MaxPriority
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MaxPriority*
  name: MaxPriority
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_MaxPriority_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MaxPriority
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MaxPriority
  nameWithType: LockedQueueStorage.MaxPriority
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageProcessedAsync(System.String,CancellationToken)
  name: MessageProcessedAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_MessageProcessedAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageProcessedAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageProcessedAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.MessageProcessedAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageProcessedAsync*
  name: MessageProcessedAsync
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_MessageProcessedAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageProcessedAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageProcessedAsync
  nameWithType: LockedQueueStorage.MessageProcessedAsync
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageRejectedAsync(System.String,CancellationToken)
  name: MessageRejectedAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_MessageRejectedAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageRejectedAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageRejectedAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.MessageRejectedAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageRejectedAsync*
  name: MessageRejectedAsync
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_MessageRejectedAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageRejectedAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.MessageRejectedAsync
  nameWithType: LockedQueueStorage.MessageRejectedAsync
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.PullAsync(System.Int32,CancellationToken)
  name: PullAsync(Int32, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_PullAsync_System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.PullAsync(System.Int32,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.PullAsync(System.Int32, CancellationToken)
  nameWithType: LockedQueueStorage.PullAsync(Int32, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.PullAsync*
  name: PullAsync
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_PullAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.PullAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.PullAsync
  nameWithType: LockedQueueStorage.PullAsync
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.ReleaseMessageAsync(System.String,CancellationToken)
  name: ReleaseMessageAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_ReleaseMessageAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.ReleaseMessageAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.ReleaseMessageAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.ReleaseMessageAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.ReleaseMessageAsync*
  name: ReleaseMessageAsync
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_ReleaseMessageAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.ReleaseMessageAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.ReleaseMessageAsync
  nameWithType: LockedQueueStorage.ReleaseMessageAsync
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RenewDeadlineAsync(System.String,CancellationToken)
  name: RenewDeadlineAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_RenewDeadlineAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RenewDeadlineAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RenewDeadlineAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.RenewDeadlineAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RenewDeadlineAsync*
  name: RenewDeadlineAsync
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_RenewDeadlineAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RenewDeadlineAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RenewDeadlineAsync
  nameWithType: LockedQueueStorage.RenewDeadlineAsync
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RequeueMessageAsync(System.String,CancellationToken)
  name: RequeueMessageAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_RequeueMessageAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RequeueMessageAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RequeueMessageAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.RequeueMessageAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RequeueMessageAsync*
  name: RequeueMessageAsync
  href: api/ArmoniK.Core.Adapters.Memory.LockedQueueStorage.html#ArmoniK_Core_Adapters_Memory_LockedQueueStorage_RequeueMessageAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RequeueMessageAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.LockedQueueStorage.RequeueMessageAsync
  nameWithType: LockedQueueStorage.RequeueMessageAsync
- uid: ArmoniK.Core.Adapters.Memory.ResultTable
  name: ResultTable
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html
  commentId: T:ArmoniK.Core.Adapters.Memory.ResultTable
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable
  nameWithType: ResultTable
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.#ctor(ConcurrentDictionary{System.String,ConcurrentDictionary{System.String,Result}},ILogger{ArmoniK.Core.Adapters.Memory.ResultTable})
  name: ResultTable(ConcurrentDictionary<String, ConcurrentDictionary<String, Result>>, ILogger<ResultTable>)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable__ctor_ConcurrentDictionary_System_String_ConcurrentDictionary_System_String_Result___ILogger_ArmoniK_Core_Adapters_Memory_ResultTable__
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.#ctor(ConcurrentDictionary{System.String,ConcurrentDictionary{System.String,Result}},ILogger{ArmoniK.Core.Adapters.Memory.ResultTable})
  name.vb: ResultTable(ConcurrentDictionary(Of String, ConcurrentDictionary(Of String, Result)), ILogger(Of ResultTable))
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.ResultTable(ConcurrentDictionary<System.String, ConcurrentDictionary<System.String, Result>>, ILogger<ArmoniK.Core.Adapters.Memory.ResultTable>)
  fullName.vb: ArmoniK.Core.Adapters.Memory.ResultTable.ResultTable(ConcurrentDictionary(Of System.String, ConcurrentDictionary(Of System.String, Result)), ILogger(Of ArmoniK.Core.Adapters.Memory.ResultTable))
  nameWithType: ResultTable.ResultTable(ConcurrentDictionary<String, ConcurrentDictionary<String, Result>>, ILogger<ResultTable>)
  nameWithType.vb: ResultTable.ResultTable(ConcurrentDictionary(Of String, ConcurrentDictionary(Of String, Result)), ILogger(Of ResultTable))
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.#ctor*
  name: ResultTable
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.ResultTable
  nameWithType: ResultTable.ResultTable
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.AreResultsAvailableAsync(System.String,IEnumerable{System.String},CancellationToken)
  name: AreResultsAvailableAsync(String, IEnumerable<String>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_AreResultsAvailableAsync_System_String_IEnumerable_System_String__CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.AreResultsAvailableAsync(System.String,IEnumerable{System.String},CancellationToken)
  name.vb: AreResultsAvailableAsync(String, IEnumerable(Of String), CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.AreResultsAvailableAsync(System.String, IEnumerable<System.String>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Memory.ResultTable.AreResultsAvailableAsync(System.String, IEnumerable(Of System.String), CancellationToken)
  nameWithType: ResultTable.AreResultsAvailableAsync(String, IEnumerable<String>, CancellationToken)
  nameWithType.vb: ResultTable.AreResultsAvailableAsync(String, IEnumerable(Of String), CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.AreResultsAvailableAsync*
  name: AreResultsAvailableAsync
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_AreResultsAvailableAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.AreResultsAvailableAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.AreResultsAvailableAsync
  nameWithType: ResultTable.AreResultsAvailableAsync
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultDispatch(System.String,System.String,System.String,CancellationToken)
  name: ChangeResultDispatch(String, String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_ChangeResultDispatch_System_String_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultDispatch(System.String,System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultDispatch(System.String, System.String, System.String, CancellationToken)
  nameWithType: ResultTable.ChangeResultDispatch(String, String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultDispatch*
  name: ChangeResultDispatch
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_ChangeResultDispatch_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultDispatch
  nameWithType: ResultTable.ChangeResultDispatch
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultOwnership(System.String,IEnumerable{System.String},System.String,System.String,CancellationToken)
  name: ChangeResultOwnership(String, IEnumerable<String>, String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_ChangeResultOwnership_System_String_IEnumerable_System_String__System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultOwnership(System.String,IEnumerable{System.String},System.String,System.String,CancellationToken)
  name.vb: ChangeResultOwnership(String, IEnumerable(Of String), String, String, CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultOwnership(System.String, IEnumerable<System.String>, System.String, System.String, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultOwnership(System.String, IEnumerable(Of System.String), System.String, System.String, CancellationToken)
  nameWithType: ResultTable.ChangeResultOwnership(String, IEnumerable<String>, String, String, CancellationToken)
  nameWithType.vb: ResultTable.ChangeResultOwnership(String, IEnumerable(Of String), String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultOwnership*
  name: ChangeResultOwnership
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_ChangeResultOwnership_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultOwnership
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.ChangeResultOwnership
  nameWithType: ResultTable.ChangeResultOwnership
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: ResultTable.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_Check_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.Check
  nameWithType: ResultTable.Check
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.Create(IEnumerable{Result},CancellationToken)
  name: Create(IEnumerable<Result>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_Create_IEnumerable_Result__CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.Create(IEnumerable{Result},CancellationToken)
  name.vb: Create(IEnumerable(Of Result), CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.Create(IEnumerable<Result>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Memory.ResultTable.Create(IEnumerable(Of Result), CancellationToken)
  nameWithType: ResultTable.Create(IEnumerable<Result>, CancellationToken)
  nameWithType.vb: ResultTable.Create(IEnumerable(Of Result), CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.Create*
  name: Create
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_Create_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.Create
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.Create
  nameWithType: ResultTable.Create
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResult(System.String,System.String,CancellationToken)
  name: DeleteResult(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_DeleteResult_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResult(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResult(System.String, System.String, CancellationToken)
  nameWithType: ResultTable.DeleteResult(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResult*
  name: DeleteResult
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_DeleteResult_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResult
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResult
  nameWithType: ResultTable.DeleteResult
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResults(System.String,CancellationToken)
  name: DeleteResults(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_DeleteResults_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResults(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResults(System.String, CancellationToken)
  nameWithType: ResultTable.DeleteResults(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResults*
  name: DeleteResults
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_DeleteResults_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResults
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.DeleteResults
  nameWithType: ResultTable.DeleteResults
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.GetResult(System.String,System.String,CancellationToken)
  name: GetResult(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_GetResult_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.GetResult(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.GetResult(System.String, System.String, CancellationToken)
  nameWithType: ResultTable.GetResult(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.GetResult*
  name: GetResult
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_GetResult_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.GetResult
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.GetResult
  nameWithType: ResultTable.GetResult
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.Init(CancellationToken)
  nameWithType: ResultTable.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_Init_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.Init
  nameWithType: ResultTable.Init
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.ListResultsAsync(System.String,CancellationToken)
  name: ListResultsAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_ListResultsAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.ListResultsAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.ListResultsAsync(System.String, CancellationToken)
  nameWithType: ResultTable.ListResultsAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.ListResultsAsync*
  name: ListResultsAsync
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_ListResultsAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.ListResultsAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.ListResultsAsync
  nameWithType: ResultTable.ListResultsAsync
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_Logger
  commentId: P:ArmoniK.Core.Adapters.Memory.ResultTable.Logger
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.Logger
  nameWithType: ResultTable.Logger
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_Logger_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.Logger
  nameWithType: ResultTable.Logger
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.SetResult(System.String,System.String,System.String,CancellationToken)
  name: SetResult(String, String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_SetResult_System_String_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.SetResult(System.String,System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.SetResult(System.String, System.String, System.String, CancellationToken)
  nameWithType: ResultTable.SetResult(String, String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.SetResult(System.String,System.String,System.String,System.Byte[],CancellationToken)
  name: SetResult(String, String, String, Byte[], CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_SetResult_System_String_System_String_System_String_System_Byte___CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.ResultTable.SetResult(System.String,System.String,System.String,System.Byte[],CancellationToken)
  name.vb: SetResult(String, String, String, Byte(), CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.SetResult(System.String, System.String, System.String, System.Byte[], CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Memory.ResultTable.SetResult(System.String, System.String, System.String, System.Byte(), CancellationToken)
  nameWithType: ResultTable.SetResult(String, String, String, Byte[], CancellationToken)
  nameWithType.vb: ResultTable.SetResult(String, String, String, Byte(), CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.ResultTable.SetResult*
  name: SetResult
  href: api/ArmoniK.Core.Adapters.Memory.ResultTable.html#ArmoniK_Core_Adapters_Memory_ResultTable_SetResult_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ResultTable.SetResult
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ResultTable.SetResult
  nameWithType: ResultTable.SetResult
- uid: ArmoniK.Core.Adapters.Memory.ServiceCollectionExt
  name: ServiceCollectionExt
  href: api/ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.html
  commentId: T:ArmoniK.Core.Adapters.Memory.ServiceCollectionExt
  fullName: ArmoniK.Core.Adapters.Memory.ServiceCollectionExt
  nameWithType: ServiceCollectionExt
- uid: ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.AddMongoComponents(IServiceCollection,ConfigurationManager,ILogger)
  name: AddMongoComponents(IServiceCollection, ConfigurationManager, ILogger)
  href: api/ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.html#ArmoniK_Core_Adapters_Memory_ServiceCollectionExt_AddMongoComponents_IServiceCollection_ConfigurationManager_ILogger_
  commentId: M:ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.AddMongoComponents(IServiceCollection,ConfigurationManager,ILogger)
  fullName: ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.AddMongoComponents(IServiceCollection, ConfigurationManager, ILogger)
  nameWithType: ServiceCollectionExt.AddMongoComponents(IServiceCollection, ConfigurationManager, ILogger)
- uid: ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.AddMongoComponents*
  name: AddMongoComponents
  href: api/ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.html#ArmoniK_Core_Adapters_Memory_ServiceCollectionExt_AddMongoComponents_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.AddMongoComponents
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.ServiceCollectionExt.AddMongoComponents
  nameWithType: ServiceCollectionExt.AddMongoComponents
- uid: ArmoniK.Core.Adapters.Memory.SessionTable
  name: SessionTable
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html
  commentId: T:ArmoniK.Core.Adapters.Memory.SessionTable
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable
  nameWithType: SessionTable
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.#ctor(ConcurrentDictionary{System.String,SessionData},ConcurrentDictionary{System.String,ConcurrentDictionary{System.String,System.String}},ILogger{ArmoniK.Core.Adapters.Memory.SessionTable})
  name: SessionTable(ConcurrentDictionary<String, SessionData>, ConcurrentDictionary<String, ConcurrentDictionary<String, String>>, ILogger<SessionTable>)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable__ctor_ConcurrentDictionary_System_String_SessionData__ConcurrentDictionary_System_String_ConcurrentDictionary_System_String_System_String___ILogger_ArmoniK_Core_Adapters_Memory_SessionTable__
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.#ctor(ConcurrentDictionary{System.String,SessionData},ConcurrentDictionary{System.String,ConcurrentDictionary{System.String,System.String}},ILogger{ArmoniK.Core.Adapters.Memory.SessionTable})
  name.vb: SessionTable(ConcurrentDictionary(Of String, SessionData), ConcurrentDictionary(Of String, ConcurrentDictionary(Of String, String)), ILogger(Of SessionTable))
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.SessionTable(ConcurrentDictionary<System.String, SessionData>, ConcurrentDictionary<System.String, ConcurrentDictionary<System.String, System.String>>, ILogger<ArmoniK.Core.Adapters.Memory.SessionTable>)
  fullName.vb: ArmoniK.Core.Adapters.Memory.SessionTable.SessionTable(ConcurrentDictionary(Of System.String, SessionData), ConcurrentDictionary(Of System.String, ConcurrentDictionary(Of System.String, System.String)), ILogger(Of ArmoniK.Core.Adapters.Memory.SessionTable))
  nameWithType: SessionTable.SessionTable(ConcurrentDictionary<String, SessionData>, ConcurrentDictionary<String, ConcurrentDictionary<String, String>>, ILogger<SessionTable>)
  nameWithType.vb: SessionTable.SessionTable(ConcurrentDictionary(Of String, SessionData), ConcurrentDictionary(Of String, ConcurrentDictionary(Of String, String)), ILogger(Of SessionTable))
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.#ctor*
  name: SessionTable
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.SessionTable
  nameWithType: SessionTable.SessionTable
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  name: CancelDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_CancelDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.CancelDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: SessionTable.CancelDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.CancelDispatchAsync*
  name: CancelDispatchAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_CancelDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.CancelDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.CancelDispatchAsync
  nameWithType: SessionTable.CancelDispatchAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.CancelSessionAsync(System.String,CancellationToken)
  name: CancelSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_CancelSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.CancelSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.CancelSessionAsync(System.String, CancellationToken)
  nameWithType: SessionTable.CancelSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.CancelSessionAsync*
  name: CancelSessionAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_CancelSessionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.CancelSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.CancelSessionAsync
  nameWithType: SessionTable.CancelSessionAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: SessionTable.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_Check_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.Check
  nameWithType: SessionTable.Check
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.CreateSessionDataAsync(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  name: CreateSessionDataAsync(String, String, String, TaskOptions, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_CreateSessionDataAsync_System_String_System_String_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.CreateSessionDataAsync(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.CreateSessionDataAsync(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, CancellationToken)
  nameWithType: SessionTable.CreateSessionDataAsync(String, String, String, TaskOptions, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.CreateSessionDataAsync*
  name: CreateSessionDataAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_CreateSessionDataAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.CreateSessionDataAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.CreateSessionDataAsync
  nameWithType: SessionTable.CreateSessionDataAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.DeleteDispatchAsync(System.String,System.String,CancellationToken)
  name: DeleteDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_DeleteDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.DeleteDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.DeleteDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: SessionTable.DeleteDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.DeleteDispatchAsync*
  name: DeleteDispatchAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_DeleteDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.DeleteDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.DeleteDispatchAsync
  nameWithType: SessionTable.DeleteDispatchAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.DeleteSessionAsync(System.String,CancellationToken)
  name: DeleteSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_DeleteSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.DeleteSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.DeleteSessionAsync(System.String, CancellationToken)
  nameWithType: SessionTable.DeleteSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.DeleteSessionAsync*
  name: DeleteSessionAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_DeleteSessionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.DeleteSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.DeleteSessionAsync
  nameWithType: SessionTable.DeleteSessionAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.GetDefaultTaskOptionAsync(System.String,CancellationToken)
  name: GetDefaultTaskOptionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_GetDefaultTaskOptionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.GetDefaultTaskOptionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.GetDefaultTaskOptionAsync(System.String, CancellationToken)
  nameWithType: SessionTable.GetDefaultTaskOptionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.GetDefaultTaskOptionAsync*
  name: GetDefaultTaskOptionAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_GetDefaultTaskOptionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.GetDefaultTaskOptionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.GetDefaultTaskOptionAsync
  nameWithType: SessionTable.GetDefaultTaskOptionAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.GetSessionAsync(System.String,CancellationToken)
  name: GetSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_GetSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.GetSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.GetSessionAsync(System.String, CancellationToken)
  nameWithType: SessionTable.GetSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.GetSessionAsync*
  name: GetSessionAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_GetSessionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.GetSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.GetSessionAsync
  nameWithType: SessionTable.GetSessionAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.Init(CancellationToken)
  nameWithType: SessionTable.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_Init_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.Init
  nameWithType: SessionTable.Init
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.IsDispatchCancelledAsync(System.String,System.String,CancellationToken)
  name: IsDispatchCancelledAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_IsDispatchCancelledAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.IsDispatchCancelledAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.IsDispatchCancelledAsync(System.String, System.String, CancellationToken)
  nameWithType: SessionTable.IsDispatchCancelledAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.IsDispatchCancelledAsync*
  name: IsDispatchCancelledAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_IsDispatchCancelledAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.IsDispatchCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.IsDispatchCancelledAsync
  nameWithType: SessionTable.IsDispatchCancelledAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.IsSessionCancelledAsync(System.String,CancellationToken)
  name: IsSessionCancelledAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_IsSessionCancelledAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.IsSessionCancelledAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.IsSessionCancelledAsync(System.String, CancellationToken)
  nameWithType: SessionTable.IsSessionCancelledAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.IsSessionCancelledAsync*
  name: IsSessionCancelledAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_IsSessionCancelledAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.IsSessionCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.IsSessionCancelledAsync
  nameWithType: SessionTable.IsSessionCancelledAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.ListDispatchesAsync(System.String,CancellationToken)
  name: ListDispatchesAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_ListDispatchesAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.ListDispatchesAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.ListDispatchesAsync(System.String, CancellationToken)
  nameWithType: SessionTable.ListDispatchesAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.ListDispatchesAsync*
  name: ListDispatchesAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_ListDispatchesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.ListDispatchesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.ListDispatchesAsync
  nameWithType: SessionTable.ListDispatchesAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.ListSessionsAsync(CancellationToken)
  name: ListSessionsAsync(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_ListSessionsAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.SessionTable.ListSessionsAsync(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.ListSessionsAsync(CancellationToken)
  nameWithType: SessionTable.ListSessionsAsync(CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.ListSessionsAsync*
  name: ListSessionsAsync
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_ListSessionsAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.ListSessionsAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.ListSessionsAsync
  nameWithType: SessionTable.ListSessionsAsync
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_Logger
  commentId: P:ArmoniK.Core.Adapters.Memory.SessionTable.Logger
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.Logger
  nameWithType: SessionTable.Logger
- uid: ArmoniK.Core.Adapters.Memory.SessionTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Adapters.Memory.SessionTable.html#ArmoniK_Core_Adapters_Memory_SessionTable_Logger_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.SessionTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.SessionTable.Logger
  nameWithType: SessionTable.Logger
- uid: ArmoniK.Core.Adapters.Memory.TaskTable
  name: TaskTable
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html
  commentId: T:ArmoniK.Core.Adapters.Memory.TaskTable
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable
  nameWithType: TaskTable
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.#ctor(ConcurrentDictionary{System.String,TaskData},ConcurrentDictionary{System.String,ConcurrentQueue{System.String}},ConcurrentDictionary{System.String,ConcurrentQueue{System.String}},ILogger{ArmoniK.Core.Adapters.Memory.TaskTable})
  name: TaskTable(ConcurrentDictionary<String, TaskData>, ConcurrentDictionary<String, ConcurrentQueue<String>>, ConcurrentDictionary<String, ConcurrentQueue<String>>, ILogger<TaskTable>)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable__ctor_ConcurrentDictionary_System_String_TaskData__ConcurrentDictionary_System_String_ConcurrentQueue_System_String___ConcurrentDictionary_System_String_ConcurrentQueue_System_String___ILogger_ArmoniK_Core_Adapters_Memory_TaskTable__
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.#ctor(ConcurrentDictionary{System.String,TaskData},ConcurrentDictionary{System.String,ConcurrentQueue{System.String}},ConcurrentDictionary{System.String,ConcurrentQueue{System.String}},ILogger{ArmoniK.Core.Adapters.Memory.TaskTable})
  name.vb: TaskTable(ConcurrentDictionary(Of String, TaskData), ConcurrentDictionary(Of String, ConcurrentQueue(Of String)), ConcurrentDictionary(Of String, ConcurrentQueue(Of String)), ILogger(Of TaskTable))
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.TaskTable(ConcurrentDictionary<System.String, TaskData>, ConcurrentDictionary<System.String, ConcurrentQueue<System.String>>, ConcurrentDictionary<System.String, ConcurrentQueue<System.String>>, ILogger<ArmoniK.Core.Adapters.Memory.TaskTable>)
  fullName.vb: ArmoniK.Core.Adapters.Memory.TaskTable.TaskTable(ConcurrentDictionary(Of System.String, TaskData), ConcurrentDictionary(Of System.String, ConcurrentQueue(Of System.String)), ConcurrentDictionary(Of System.String, ConcurrentQueue(Of System.String)), ILogger(Of ArmoniK.Core.Adapters.Memory.TaskTable))
  nameWithType: TaskTable.TaskTable(ConcurrentDictionary<String, TaskData>, ConcurrentDictionary<String, ConcurrentQueue<String>>, ConcurrentDictionary<String, ConcurrentQueue<String>>, ILogger<TaskTable>)
  nameWithType.vb: TaskTable.TaskTable(ConcurrentDictionary(Of String, TaskData), ConcurrentDictionary(Of String, ConcurrentQueue(Of String)), ConcurrentDictionary(Of String, ConcurrentQueue(Of String)), ILogger(Of TaskTable))
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.#ctor*
  name: TaskTable
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.TaskTable
  nameWithType: TaskTable.TaskTable
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  name: CancelDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CancelDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CancelDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: TaskTable.CancelDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CancelDispatchAsync*
  name: CancelDispatchAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CancelDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.CancelDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CancelDispatchAsync
  nameWithType: TaskTable.CancelDispatchAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CancelSessionAsync(System.String,CancellationToken)
  name: CancelSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CancelSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.CancelSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CancelSessionAsync(System.String, CancellationToken)
  nameWithType: TaskTable.CancelSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CancelSessionAsync*
  name: CancelSessionAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CancelSessionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.CancelSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CancelSessionAsync
  nameWithType: TaskTable.CancelSessionAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.ChangeTaskDispatch(System.String,System.String,CancellationToken)
  name: ChangeTaskDispatch(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_ChangeTaskDispatch_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.ChangeTaskDispatch(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.ChangeTaskDispatch(System.String, System.String, CancellationToken)
  nameWithType: TaskTable.ChangeTaskDispatch(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.ChangeTaskDispatch*
  name: ChangeTaskDispatch
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_ChangeTaskDispatch_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.ChangeTaskDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.ChangeTaskDispatch
  nameWithType: TaskTable.ChangeTaskDispatch
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: TaskTable.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_Check_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.Check
  nameWithType: TaskTable.Check
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: CountAllTasksAsync(TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CountAllTasksAsync_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: TaskTable.CountAllTasksAsync(TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CountAllTasksAsync*
  name: CountAllTasksAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CountAllTasksAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.CountAllTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CountAllTasksAsync
  nameWithType: TaskTable.CountAllTasksAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CountTasksAsync(TaskFilter,CancellationToken)
  name: CountTasksAsync(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CountTasksAsync_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.CountTasksAsync(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CountTasksAsync(TaskFilter, CancellationToken)
  nameWithType: TaskTable.CountTasksAsync(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CountTasksAsync*
  name: CountTasksAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CountTasksAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.CountTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CountTasksAsync
  nameWithType: TaskTable.CountTasksAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CreateTasks(IEnumerable{TaskData},CancellationToken)
  name: CreateTasks(IEnumerable<TaskData>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CreateTasks_IEnumerable_TaskData__CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.CreateTasks(IEnumerable{TaskData},CancellationToken)
  name.vb: CreateTasks(IEnumerable(Of TaskData), CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CreateTasks(IEnumerable<TaskData>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Memory.TaskTable.CreateTasks(IEnumerable(Of TaskData), CancellationToken)
  nameWithType: TaskTable.CreateTasks(IEnumerable<TaskData>, CancellationToken)
  nameWithType.vb: TaskTable.CreateTasks(IEnumerable(Of TaskData), CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.CreateTasks*
  name: CreateTasks
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_CreateTasks_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.CreateTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.CreateTasks
  nameWithType: TaskTable.CreateTasks
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.DeleteTaskAsync(System.String,CancellationToken)
  name: DeleteTaskAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_DeleteTaskAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.DeleteTaskAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.DeleteTaskAsync(System.String, CancellationToken)
  nameWithType: TaskTable.DeleteTaskAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.DeleteTaskAsync*
  name: DeleteTaskAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_DeleteTaskAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.DeleteTaskAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.DeleteTaskAsync
  nameWithType: TaskTable.DeleteTaskAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskAncestorDispatchIds(System.String,CancellationToken)
  name: GetTaskAncestorDispatchIds(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskAncestorDispatchIds_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskAncestorDispatchIds(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskAncestorDispatchIds(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskAncestorDispatchIds(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskAncestorDispatchIds*
  name: GetTaskAncestorDispatchIds
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskAncestorDispatchIds_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskAncestorDispatchIds
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskAncestorDispatchIds
  nameWithType: TaskTable.GetTaskAncestorDispatchIds
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskDispatchId(System.String,CancellationToken)
  name: GetTaskDispatchId(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskDispatchId_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskDispatchId(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskDispatchId(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskDispatchId(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskDispatchId*
  name: GetTaskDispatchId
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskDispatchId_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskDispatchId
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskDispatchId
  nameWithType: TaskTable.GetTaskDispatchId
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskExpectedOutputKeys(System.String,CancellationToken)
  name: GetTaskExpectedOutputKeys(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskExpectedOutputKeys_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskExpectedOutputKeys(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskExpectedOutputKeys(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskExpectedOutputKeys(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskExpectedOutputKeys*
  name: GetTaskExpectedOutputKeys
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskExpectedOutputKeys_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskExpectedOutputKeys
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskExpectedOutputKeys
  nameWithType: TaskTable.GetTaskExpectedOutputKeys
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskOutput(System.String,CancellationToken)
  name: GetTaskOutput(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskOutput_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskOutput(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskOutput(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskOutput(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskOutput*
  name: GetTaskOutput
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskOutput_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskOutput
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskOutput
  nameWithType: TaskTable.GetTaskOutput
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskStatus(System.String,CancellationToken)
  name: GetTaskStatus(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskStatus_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskStatus(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskStatus(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskStatus(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskStatus*
  name: GetTaskStatus
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_GetTaskStatus_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskStatus
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.GetTaskStatus
  nameWithType: TaskTable.GetTaskStatus
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.Init(CancellationToken)
  nameWithType: TaskTable.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_Init_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.Init
  nameWithType: TaskTable.Init
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.IsTaskCancelledAsync(System.String,CancellationToken)
  name: IsTaskCancelledAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_IsTaskCancelledAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.IsTaskCancelledAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.IsTaskCancelledAsync(System.String, CancellationToken)
  nameWithType: TaskTable.IsTaskCancelledAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.IsTaskCancelledAsync*
  name: IsTaskCancelledAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_IsTaskCancelledAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.IsTaskCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.IsTaskCancelledAsync
  nameWithType: TaskTable.IsTaskCancelledAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.ListTasksAsync(TaskFilter,CancellationToken)
  name: ListTasksAsync(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_ListTasksAsync_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.ListTasksAsync(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.ListTasksAsync(TaskFilter, CancellationToken)
  nameWithType: TaskTable.ListTasksAsync(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.ListTasksAsync*
  name: ListTasksAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_ListTasksAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.ListTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.ListTasksAsync
  nameWithType: TaskTable.ListTasksAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_Logger
  commentId: P:ArmoniK.Core.Adapters.Memory.TaskTable.Logger
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.Logger
  nameWithType: TaskTable.Logger
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_Logger_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.Logger
  nameWithType: TaskTable.Logger
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMax
  name: PollingDelayMax
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_PollingDelayMax
  commentId: P:ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMax
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMax
  nameWithType: TaskTable.PollingDelayMax
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMax*
  name: PollingDelayMax
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_PollingDelayMax_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMax
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMax
  nameWithType: TaskTable.PollingDelayMax
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMin
  name: PollingDelayMin
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_PollingDelayMin
  commentId: P:ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMin
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMin
  nameWithType: TaskTable.PollingDelayMin
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMin*
  name: PollingDelayMin
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_PollingDelayMin_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMin
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.PollingDelayMin
  nameWithType: TaskTable.PollingDelayMin
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.ReadTaskAsync(System.String,CancellationToken)
  name: ReadTaskAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_ReadTaskAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.ReadTaskAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.ReadTaskAsync(System.String, CancellationToken)
  nameWithType: TaskTable.ReadTaskAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.ReadTaskAsync*
  name: ReadTaskAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_ReadTaskAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.ReadTaskAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.ReadTaskAsync
  nameWithType: TaskTable.ReadTaskAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskErrorAsync(System.String,System.String,CancellationToken)
  name: SetTaskErrorAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_SetTaskErrorAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskErrorAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskErrorAsync(System.String, System.String, CancellationToken)
  nameWithType: TaskTable.SetTaskErrorAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskErrorAsync*
  name: SetTaskErrorAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_SetTaskErrorAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskErrorAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskErrorAsync
  nameWithType: TaskTable.SetTaskErrorAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskSuccessAsync(System.String,CancellationToken)
  name: SetTaskSuccessAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_SetTaskSuccessAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskSuccessAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskSuccessAsync(System.String, CancellationToken)
  nameWithType: TaskTable.SetTaskSuccessAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskSuccessAsync*
  name: SetTaskSuccessAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_SetTaskSuccessAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskSuccessAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.SetTaskSuccessAsync
  nameWithType: TaskTable.SetTaskSuccessAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAllTaskStatusAsync(TaskFilter,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: UpdateAllTaskStatusAsync(TaskFilter, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_UpdateAllTaskStatusAsync_TaskFilter_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAllTaskStatusAsync(TaskFilter,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAllTaskStatusAsync(TaskFilter, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: TaskTable.UpdateAllTaskStatusAsync(TaskFilter, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAllTaskStatusAsync*
  name: UpdateAllTaskStatusAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_UpdateAllTaskStatusAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAllTaskStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAllTaskStatusAsync
  nameWithType: TaskTable.UpdateAllTaskStatusAsync
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAndCheckTaskStatus(System.String,ArmoniK.Api.gRPC.V1.TaskStatus)
  name: UpdateAndCheckTaskStatus(String, TaskStatus)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_UpdateAndCheckTaskStatus_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAndCheckTaskStatus(System.String,ArmoniK.Api.gRPC.V1.TaskStatus)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAndCheckTaskStatus(System.String, ArmoniK.Api.gRPC.V1.TaskStatus)
  nameWithType: TaskTable.UpdateAndCheckTaskStatus(String, TaskStatus)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAndCheckTaskStatus*
  name: UpdateAndCheckTaskStatus
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_UpdateAndCheckTaskStatus_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAndCheckTaskStatus
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateAndCheckTaskStatus
  nameWithType: TaskTable.UpdateAndCheckTaskStatus
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_UpdateTaskStatusAsync_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Memory.TaskTable.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateTaskStatusAsync(System.String, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: TaskTable.UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateTaskStatusAsync*
  name: UpdateTaskStatusAsync
  href: api/ArmoniK.Core.Adapters.Memory.TaskTable.html#ArmoniK_Core_Adapters_Memory_TaskTable_UpdateTaskStatusAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.TaskTable.UpdateTaskStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.TaskTable.UpdateTaskStatusAsync
  nameWithType: TaskTable.UpdateTaskStatusAsync
- uid: ArmoniK.Core.Adapters.Memory.Tests
  name: ArmoniK.Core.Adapters.Memory.Tests
  href: api/ArmoniK.Core.Adapters.Memory.Tests.html
  commentId: N:ArmoniK.Core.Adapters.Memory.Tests
  fullName: ArmoniK.Core.Adapters.Memory.Tests
  nameWithType: ArmoniK.Core.Adapters.Memory.Tests
- uid: ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests
  name: DispatchTableTests
  href: api/ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.html
  commentId: T:ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests
  fullName: ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests
  nameWithType: DispatchTableTests
- uid: ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.GetDispatchTableInstance
  name: GetDispatchTableInstance()
  href: api/ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.html#ArmoniK_Core_Adapters_Memory_Tests_DispatchTableTests_GetDispatchTableInstance
  commentId: M:ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.GetDispatchTableInstance
  fullName: ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.GetDispatchTableInstance()
  nameWithType: DispatchTableTests.GetDispatchTableInstance()
- uid: ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.GetDispatchTableInstance*
  name: GetDispatchTableInstance
  href: api/ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.html#ArmoniK_Core_Adapters_Memory_Tests_DispatchTableTests_GetDispatchTableInstance_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.GetDispatchTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.Tests.DispatchTableTests.GetDispatchTableInstance
  nameWithType: DispatchTableTests.GetDispatchTableInstance
- uid: ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests
  name: ResultTableTests
  href: api/ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.html
  commentId: T:ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests
  fullName: ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests
  nameWithType: ResultTableTests
- uid: ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.GetResultTableInstance
  name: GetResultTableInstance()
  href: api/ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.html#ArmoniK_Core_Adapters_Memory_Tests_ResultTableTests_GetResultTableInstance
  commentId: M:ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.GetResultTableInstance
  fullName: ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.GetResultTableInstance()
  nameWithType: ResultTableTests.GetResultTableInstance()
- uid: ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.GetResultTableInstance*
  name: GetResultTableInstance
  href: api/ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.html#ArmoniK_Core_Adapters_Memory_Tests_ResultTableTests_GetResultTableInstance_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.GetResultTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.Tests.ResultTableTests.GetResultTableInstance
  nameWithType: ResultTableTests.GetResultTableInstance
- uid: ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests
  name: SessionTableTests
  href: api/ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.html
  commentId: T:ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests
  fullName: ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests
  nameWithType: SessionTableTests
- uid: ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.GetSessionTableInstance
  name: GetSessionTableInstance()
  href: api/ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.html#ArmoniK_Core_Adapters_Memory_Tests_SessionTableTests_GetSessionTableInstance
  commentId: M:ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.GetSessionTableInstance
  fullName: ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.GetSessionTableInstance()
  nameWithType: SessionTableTests.GetSessionTableInstance()
- uid: ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.GetSessionTableInstance*
  name: GetSessionTableInstance
  href: api/ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.html#ArmoniK_Core_Adapters_Memory_Tests_SessionTableTests_GetSessionTableInstance_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.GetSessionTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.Tests.SessionTableTests.GetSessionTableInstance
  nameWithType: SessionTableTests.GetSessionTableInstance
- uid: ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests
  name: TaskTableTests
  href: api/ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.html
  commentId: T:ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests
  fullName: ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests
  nameWithType: TaskTableTests
- uid: ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.GetTaskTableInstance
  name: GetTaskTableInstance()
  href: api/ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.html#ArmoniK_Core_Adapters_Memory_Tests_TaskTableTests_GetTaskTableInstance
  commentId: M:ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.GetTaskTableInstance
  fullName: ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.GetTaskTableInstance()
  nameWithType: TaskTableTests.GetTaskTableInstance()
- uid: ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.GetTaskTableInstance*
  name: GetTaskTableInstance
  href: api/ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.html#ArmoniK_Core_Adapters_Memory_Tests_TaskTableTests_GetTaskTableInstance_
  commentId: Overload:ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.GetTaskTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Memory.Tests.TaskTableTests.GetTaskTableInstance
  nameWithType: TaskTableTests.GetTaskTableInstance
- uid: ArmoniK.Core.Adapters.MongoDB
  name: ArmoniK.Core.Adapters.MongoDB
  href: api/ArmoniK.Core.Adapters.MongoDB.html
  commentId: N:ArmoniK.Core.Adapters.MongoDB
  fullName: ArmoniK.Core.Adapters.MongoDB
  nameWithType: ArmoniK.Core.Adapters.MongoDB
- uid: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1
  name: BsonProtoSerializer<T>
  href: api/ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer-1.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1
  name.vb: BsonProtoSerializer(Of T)
  fullName: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer<T>
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer(Of T)
  nameWithType: BsonProtoSerializer<T>
  nameWithType.vb: BsonProtoSerializer(Of T)
- uid: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Deserialize(BsonDeserializationContext,BsonDeserializationArgs)
  name: Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  href: api/ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer-1.html#ArmoniK_Core_Adapters_MongoDB_BsonProtoSerializer_1_Deserialize_BsonDeserializationContext_BsonDeserializationArgs_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Deserialize(BsonDeserializationContext,BsonDeserializationArgs)
  fullName: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer<T>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer(Of T).Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType: BsonProtoSerializer<T>.Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
  nameWithType.vb: BsonProtoSerializer(Of T).Deserialize(BsonDeserializationContext, BsonDeserializationArgs)
- uid: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Deserialize*
  name: Deserialize
  href: api/ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer-1.html#ArmoniK_Core_Adapters_MongoDB_BsonProtoSerializer_1_Deserialize_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Deserialize
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer<T>.Deserialize
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer(Of T).Deserialize
  nameWithType: BsonProtoSerializer<T>.Deserialize
  nameWithType.vb: BsonProtoSerializer(Of T).Deserialize
- uid: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Serialize(BsonSerializationContext,BsonSerializationArgs,`0)
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, T)
  href: api/ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer-1.html#ArmoniK_Core_Adapters_MongoDB_BsonProtoSerializer_1_Serialize_BsonSerializationContext_BsonSerializationArgs__0_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Serialize(BsonSerializationContext,BsonSerializationArgs,`0)
  fullName: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer<T>.Serialize(BsonSerializationContext, BsonSerializationArgs, T)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer(Of T).Serialize(BsonSerializationContext, BsonSerializationArgs, T)
  nameWithType: BsonProtoSerializer<T>.Serialize(BsonSerializationContext, BsonSerializationArgs, T)
  nameWithType.vb: BsonProtoSerializer(Of T).Serialize(BsonSerializationContext, BsonSerializationArgs, T)
- uid: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Serialize(BsonSerializationContext,BsonSerializationArgs,System.Object)
  name: Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  href: api/ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer-1.html#ArmoniK_Core_Adapters_MongoDB_BsonProtoSerializer_1_Serialize_BsonSerializationContext_BsonSerializationArgs_System_Object_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Serialize(BsonSerializationContext,BsonSerializationArgs,System.Object)
  fullName: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer<T>.Serialize(BsonSerializationContext, BsonSerializationArgs, System.Object)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer(Of T).Serialize(BsonSerializationContext, BsonSerializationArgs, System.Object)
  nameWithType: BsonProtoSerializer<T>.Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
  nameWithType.vb: BsonProtoSerializer(Of T).Serialize(BsonSerializationContext, BsonSerializationArgs, Object)
- uid: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Serialize*
  name: Serialize
  href: api/ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer-1.html#ArmoniK_Core_Adapters_MongoDB_BsonProtoSerializer_1_Serialize_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.Serialize
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer<T>.Serialize
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer(Of T).Serialize
  nameWithType: BsonProtoSerializer<T>.Serialize
  nameWithType.vb: BsonProtoSerializer(Of T).Serialize
- uid: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.ValueType
  name: ValueType
  href: api/ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer-1.html#ArmoniK_Core_Adapters_MongoDB_BsonProtoSerializer_1_ValueType
  commentId: P:ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.ValueType
  fullName: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer<T>.ValueType
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer(Of T).ValueType
  nameWithType: BsonProtoSerializer<T>.ValueType
  nameWithType.vb: BsonProtoSerializer(Of T).ValueType
- uid: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.ValueType*
  name: ValueType
  href: api/ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer-1.html#ArmoniK_Core_Adapters_MongoDB_BsonProtoSerializer_1_ValueType_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer`1.ValueType
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer<T>.ValueType
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.BsonProtoSerializer(Of T).ValueType
  nameWithType: BsonProtoSerializer<T>.ValueType
  nameWithType.vb: BsonProtoSerializer(Of T).ValueType
- uid: ArmoniK.Core.Adapters.MongoDB.Common
  name: ArmoniK.Core.Adapters.MongoDB.Common
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.html
  commentId: N:ArmoniK.Core.Adapters.MongoDB.Common
  fullName: ArmoniK.Core.Adapters.MongoDB.Common
  nameWithType: ArmoniK.Core.Adapters.MongoDB.Common
- uid: ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt
  name: AsyncCursorSourceExt
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt
  nameWithType: AsyncCursorSourceExt
- uid: ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.AsAsyncEnumerable*
  name: AsAsyncEnumerable
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.html#ArmoniK_Core_Adapters_MongoDB_Common_AsyncCursorSourceExt_AsAsyncEnumerable_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.AsAsyncEnumerable
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.AsAsyncEnumerable
  nameWithType: AsyncCursorSourceExt.AsAsyncEnumerable
- uid: ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.AsAsyncEnumerable``1(IAsyncCursorSource{``0})
  name: AsAsyncEnumerable<T>(IAsyncCursorSource<T>)
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.html#ArmoniK_Core_Adapters_MongoDB_Common_AsyncCursorSourceExt_AsAsyncEnumerable__1_IAsyncCursorSource___0__
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.AsAsyncEnumerable``1(IAsyncCursorSource{``0})
  name.vb: AsAsyncEnumerable(Of T)(IAsyncCursorSource(Of T))
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.AsAsyncEnumerable<T>(IAsyncCursorSource<T>)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.AsyncCursorSourceExt.AsAsyncEnumerable(Of T)(IAsyncCursorSource(Of T))
  nameWithType: AsyncCursorSourceExt.AsAsyncEnumerable<T>(IAsyncCursorSource<T>)
  nameWithType.vb: AsyncCursorSourceExt.AsAsyncEnumerable(Of T)(IAsyncCursorSource(Of T))
- uid: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1
  name: IMongoDataModelMapping<T>
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping-1.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1
  name.vb: IMongoDataModelMapping(Of T)
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping<T>
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping(Of T)
  nameWithType: IMongoDataModelMapping<T>
  nameWithType.vb: IMongoDataModelMapping(Of T)
- uid: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1.CollectionName
  name: CollectionName
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping-1.html#ArmoniK_Core_Adapters_MongoDB_Common_IMongoDataModelMapping_1_CollectionName
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1.CollectionName
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping<T>.CollectionName
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping(Of T).CollectionName
  nameWithType: IMongoDataModelMapping<T>.CollectionName
  nameWithType.vb: IMongoDataModelMapping(Of T).CollectionName
- uid: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1.CollectionName*
  name: CollectionName
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping-1.html#ArmoniK_Core_Adapters_MongoDB_Common_IMongoDataModelMapping_1_CollectionName_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1.CollectionName
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping<T>.CollectionName
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping(Of T).CollectionName
  nameWithType: IMongoDataModelMapping<T>.CollectionName
  nameWithType.vb: IMongoDataModelMapping(Of T).CollectionName
- uid: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1.InitializeIndexesAsync(IClientSessionHandle,IMongoCollection{`0})
  name: InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<T>)
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping-1.html#ArmoniK_Core_Adapters_MongoDB_Common_IMongoDataModelMapping_1_InitializeIndexesAsync_IClientSessionHandle_IMongoCollection__0__
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1.InitializeIndexesAsync(IClientSessionHandle,IMongoCollection{`0})
  name.vb: InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of T))
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping<T>.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<T>)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping(Of T).InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of T))
  nameWithType: IMongoDataModelMapping<T>.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<T>)
  nameWithType.vb: IMongoDataModelMapping(Of T).InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of T))
- uid: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1.InitializeIndexesAsync*
  name: InitializeIndexesAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping-1.html#ArmoniK_Core_Adapters_MongoDB_Common_IMongoDataModelMapping_1_InitializeIndexesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping`1.InitializeIndexesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping<T>.InitializeIndexesAsync
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.IMongoDataModelMapping(Of T).InitializeIndexesAsync
  nameWithType: IMongoDataModelMapping<T>.InitializeIndexesAsync
  nameWithType.vb: IMongoDataModelMapping(Of T).InitializeIndexesAsync
- uid: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider`2
  name: MongoCollectionProvider<TData, TModelMapping>
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider-2.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider`2
  name.vb: MongoCollectionProvider(Of TData, TModelMapping)
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<TData, TModelMapping>
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of TData, TModelMapping)
  nameWithType: MongoCollectionProvider<TData, TModelMapping>
  nameWithType.vb: MongoCollectionProvider(Of TData, TModelMapping)
- uid: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider`2.#ctor(ArmoniK.Core.Adapters.MongoDB.Options.MongoDB,ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,IMongoDatabase,CancellationToken)
  name: MongoCollectionProvider(MongoDB, SessionProvider, IMongoDatabase, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider-2.html#ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_2__ctor_ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider_IMongoDatabase_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider`2.#ctor(ArmoniK.Core.Adapters.MongoDB.Options.MongoDB,ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,IMongoDatabase,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<TData, TModelMapping>.MongoCollectionProvider(ArmoniK.Core.Adapters.MongoDB.Options.MongoDB, ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, IMongoDatabase, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of TData, TModelMapping).MongoCollectionProvider(ArmoniK.Core.Adapters.MongoDB.Options.MongoDB, ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, IMongoDatabase, CancellationToken)
  nameWithType: MongoCollectionProvider<TData, TModelMapping>.MongoCollectionProvider(MongoDB, SessionProvider, IMongoDatabase, CancellationToken)
  nameWithType.vb: MongoCollectionProvider(Of TData, TModelMapping).MongoCollectionProvider(MongoDB, SessionProvider, IMongoDatabase, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider`2.#ctor*
  name: MongoCollectionProvider
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider-2.html#ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_2__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider`2.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<TData, TModelMapping>.MongoCollectionProvider
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of TData, TModelMapping).MongoCollectionProvider
  nameWithType: MongoCollectionProvider<TData, TModelMapping>.MongoCollectionProvider
  nameWithType.vb: MongoCollectionProvider(Of TData, TModelMapping).MongoCollectionProvider
- uid: ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider
  name: SessionProvider
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider
  nameWithType: SessionProvider
- uid: ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.#ctor(IMongoClient)
  name: SessionProvider(IMongoClient)
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.html#ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider__ctor_IMongoClient_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.#ctor(IMongoClient)
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.SessionProvider(IMongoClient)
  nameWithType: SessionProvider.SessionProvider(IMongoClient)
- uid: ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.#ctor*
  name: SessionProvider
  href: api/ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.html#ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider.SessionProvider
  nameWithType: SessionProvider.SessionProvider
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable
  name: DispatchTable
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.DispatchTable
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable
  nameWithType: DispatchTable
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{Dispatch,DispatchDataModelMapping},ArmoniK.Core.Adapters.MongoDB.Options.TableStorage,ActivitySource,ILogger{ArmoniK.Core.Adapters.MongoDB.DispatchTable})
  name: DispatchTable(SessionProvider, MongoCollectionProvider<Dispatch, DispatchDataModelMapping>, TableStorage, ActivitySource, ILogger<DispatchTable>)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable__ctor_ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider_ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_Dispatch_DispatchDataModelMapping__ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_ActivitySource_ILogger_ArmoniK_Core_Adapters_MongoDB_DispatchTable__
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{Dispatch,DispatchDataModelMapping},ArmoniK.Core.Adapters.MongoDB.Options.TableStorage,ActivitySource,ILogger{ArmoniK.Core.Adapters.MongoDB.DispatchTable})
  name.vb: DispatchTable(SessionProvider, MongoCollectionProvider(Of Dispatch, DispatchDataModelMapping), TableStorage, ActivitySource, ILogger(Of DispatchTable))
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTable(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<Dispatch, DispatchDataModelMapping>, ArmoniK.Core.Adapters.MongoDB.Options.TableStorage, ActivitySource, ILogger<ArmoniK.Core.Adapters.MongoDB.DispatchTable>)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTable(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of Dispatch, DispatchDataModelMapping), ArmoniK.Core.Adapters.MongoDB.Options.TableStorage, ActivitySource, ILogger(Of ArmoniK.Core.Adapters.MongoDB.DispatchTable))
  nameWithType: DispatchTable.DispatchTable(SessionProvider, MongoCollectionProvider<Dispatch, DispatchDataModelMapping>, TableStorage, ActivitySource, ILogger<DispatchTable>)
  nameWithType.vb: DispatchTable.DispatchTable(SessionProvider, MongoCollectionProvider(Of Dispatch, DispatchDataModelMapping), TableStorage, ActivitySource, ILogger(Of DispatchTable))
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.#ctor*
  name: DispatchTable
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTable
  nameWithType: DispatchTable.DispatchTable
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.AddStatusToDispatch(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: AddStatusToDispatch(String, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_AddStatusToDispatch_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.AddStatusToDispatch(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.AddStatusToDispatch(System.String, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: DispatchTable.AddStatusToDispatch(String, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.AddStatusToDispatch*
  name: AddStatusToDispatch
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_AddStatusToDispatch_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.AddStatusToDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.AddStatusToDispatch
  nameWithType: DispatchTable.AddStatusToDispatch
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: DispatchTable.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_Check_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Check
  nameWithType: DispatchTable.Check
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatch(System.String,CancellationToken)
  name: DeleteDispatch(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_DeleteDispatch_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatch(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatch(System.String, CancellationToken)
  nameWithType: DispatchTable.DeleteDispatch(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatch*
  name: DeleteDispatch
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_DeleteDispatch_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatch
  nameWithType: DispatchTable.DeleteDispatch
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatchFromTaskIdAsync(System.String,CancellationToken)
  name: DeleteDispatchFromTaskIdAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_DeleteDispatchFromTaskIdAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatchFromTaskIdAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatchFromTaskIdAsync(System.String, CancellationToken)
  nameWithType: DispatchTable.DeleteDispatchFromTaskIdAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatchFromTaskIdAsync*
  name: DeleteDispatchFromTaskIdAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_DeleteDispatchFromTaskIdAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatchFromTaskIdAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DeleteDispatchFromTaskIdAsync
  nameWithType: DispatchTable.DeleteDispatchFromTaskIdAsync
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchRefreshPeriod
  name: DispatchRefreshPeriod
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_DispatchRefreshPeriod
  commentId: P:ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchRefreshPeriod
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchRefreshPeriod
  nameWithType: DispatchTable.DispatchRefreshPeriod
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchRefreshPeriod*
  name: DispatchRefreshPeriod
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_DispatchRefreshPeriod_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchRefreshPeriod
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchRefreshPeriod
  nameWithType: DispatchTable.DispatchRefreshPeriod
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTimeToLiveDuration
  name: DispatchTimeToLiveDuration
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_DispatchTimeToLiveDuration
  commentId: P:ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTimeToLiveDuration
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTimeToLiveDuration
  nameWithType: DispatchTable.DispatchTimeToLiveDuration
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTimeToLiveDuration*
  name: DispatchTimeToLiveDuration
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_DispatchTimeToLiveDuration_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTimeToLiveDuration
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.DispatchTimeToLiveDuration
  nameWithType: DispatchTable.DispatchTimeToLiveDuration
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.ExtendDispatchTtl(System.String,CancellationToken)
  name: ExtendDispatchTtl(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_ExtendDispatchTtl_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.ExtendDispatchTtl(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.ExtendDispatchTtl(System.String, CancellationToken)
  nameWithType: DispatchTable.ExtendDispatchTtl(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.ExtendDispatchTtl*
  name: ExtendDispatchTtl
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_ExtendDispatchTtl_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.ExtendDispatchTtl
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.ExtendDispatchTtl
  nameWithType: DispatchTable.ExtendDispatchTtl
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.GetDispatchAsync(System.String,CancellationToken)
  name: GetDispatchAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_GetDispatchAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.GetDispatchAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.GetDispatchAsync(System.String, CancellationToken)
  nameWithType: DispatchTable.GetDispatchAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.GetDispatchAsync*
  name: GetDispatchAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_GetDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.GetDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.GetDispatchAsync
  nameWithType: DispatchTable.GetDispatchAsync
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Init(CancellationToken)
  nameWithType: DispatchTable.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_Init_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Init
  nameWithType: DispatchTable.Init
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.ListDispatchAsync(System.String,CancellationToken)
  name: ListDispatchAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_ListDispatchAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.ListDispatchAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.ListDispatchAsync(System.String, CancellationToken)
  nameWithType: DispatchTable.ListDispatchAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.ListDispatchAsync*
  name: ListDispatchAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_ListDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.ListDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.ListDispatchAsync
  nameWithType: DispatchTable.ListDispatchAsync
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_Logger
  commentId: P:ArmoniK.Core.Adapters.MongoDB.DispatchTable.Logger
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Logger
  nameWithType: DispatchTable.Logger
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_Logger_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.Logger
  nameWithType: DispatchTable.Logger
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.TryAcquireDispatchAsync(System.String,System.String,System.String,IDictionary{System.String,System.String},CancellationToken)
  name: TryAcquireDispatchAsync(String, String, String, IDictionary<String, String>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_TryAcquireDispatchAsync_System_String_System_String_System_String_IDictionary_System_String_System_String__CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.DispatchTable.TryAcquireDispatchAsync(System.String,System.String,System.String,IDictionary{System.String,System.String},CancellationToken)
  name.vb: TryAcquireDispatchAsync(String, String, String, IDictionary(Of String, String), CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.TryAcquireDispatchAsync(System.String, System.String, System.String, IDictionary<System.String, System.String>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.DispatchTable.TryAcquireDispatchAsync(System.String, System.String, System.String, IDictionary(Of System.String, System.String), CancellationToken)
  nameWithType: DispatchTable.TryAcquireDispatchAsync(String, String, String, IDictionary<String, String>, CancellationToken)
  nameWithType.vb: DispatchTable.TryAcquireDispatchAsync(String, String, String, IDictionary(Of String, String), CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.DispatchTable.TryAcquireDispatchAsync*
  name: TryAcquireDispatchAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.DispatchTable.html#ArmoniK_Core_Adapters_MongoDB_DispatchTable_TryAcquireDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.DispatchTable.TryAcquireDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.DispatchTable.TryAcquireDispatchAsync
  nameWithType: DispatchTable.TryAcquireDispatchAsync
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage
  name: LockedQueueStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage
  nameWithType: LockedQueueStorage
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping,ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping},ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage,ILogger{ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage})
  name: LockedQueueStorage(MongoCollectionProvider<QueueMessageModelMapping, QueueMessageModelMapping>, QueueStorage, ILogger<LockedQueueStorage>)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage__ctor_ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping__ArmoniK_Core_Adapters_MongoDB_Options_QueueStorage_ILogger_ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage__
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping,ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping},ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage,ILogger{ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage})
  name.vb: LockedQueueStorage(MongoCollectionProvider(Of QueueMessageModelMapping, QueueMessageModelMapping), QueueStorage, ILogger(Of LockedQueueStorage))
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockedQueueStorage(ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping, ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping>, ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage, ILogger<ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage>)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockedQueueStorage(ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping, ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping), ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage, ILogger(Of ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage))
  nameWithType: LockedQueueStorage.LockedQueueStorage(MongoCollectionProvider<QueueMessageModelMapping, QueueMessageModelMapping>, QueueStorage, ILogger<LockedQueueStorage>)
  nameWithType.vb: LockedQueueStorage.LockedQueueStorage(MongoCollectionProvider(Of QueueMessageModelMapping, QueueMessageModelMapping), QueueStorage, ILogger(Of LockedQueueStorage))
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.#ctor*
  name: LockedQueueStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockedQueueStorage
  nameWithType: LockedQueueStorage.LockedQueueStorage
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.AreMessagesUnique
  name: AreMessagesUnique
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_AreMessagesUnique
  commentId: P:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.AreMessagesUnique
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.AreMessagesUnique
  nameWithType: LockedQueueStorage.AreMessagesUnique
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.AreMessagesUnique*
  name: AreMessagesUnique
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_AreMessagesUnique_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.AreMessagesUnique
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.AreMessagesUnique
  nameWithType: LockedQueueStorage.AreMessagesUnique
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: LockedQueueStorage.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_Check_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Check
  nameWithType: LockedQueueStorage.Check
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name: EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_EnqueueMessagesAsync_IEnumerable_System_String__System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name.vb: EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.EnqueueMessagesAsync(IEnumerable<System.String>, System.Int32, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.EnqueueMessagesAsync(IEnumerable(Of System.String), System.Int32, CancellationToken)
  nameWithType: LockedQueueStorage.EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  nameWithType.vb: LockedQueueStorage.EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.EnqueueMessagesAsync*
  name: EnqueueMessagesAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_EnqueueMessagesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.EnqueueMessagesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.EnqueueMessagesAsync
  nameWithType: LockedQueueStorage.EnqueueMessagesAsync
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Init(CancellationToken)
  nameWithType: LockedQueueStorage.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_Init_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.Init
  nameWithType: LockedQueueStorage.Init
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshExtension
  name: LockRefreshExtension
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_LockRefreshExtension
  commentId: P:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshExtension
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshExtension
  nameWithType: LockedQueueStorage.LockRefreshExtension
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshExtension*
  name: LockRefreshExtension
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_LockRefreshExtension_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshExtension
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshExtension
  nameWithType: LockedQueueStorage.LockRefreshExtension
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshPeriodicity
  name: LockRefreshPeriodicity
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_LockRefreshPeriodicity
  commentId: P:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshPeriodicity
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshPeriodicity
  nameWithType: LockedQueueStorage.LockRefreshPeriodicity
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshPeriodicity*
  name: LockRefreshPeriodicity
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_LockRefreshPeriodicity_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshPeriodicity
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.LockRefreshPeriodicity
  nameWithType: LockedQueueStorage.LockRefreshPeriodicity
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MaxPriority
  name: MaxPriority
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_MaxPriority
  commentId: P:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MaxPriority
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MaxPriority
  nameWithType: LockedQueueStorage.MaxPriority
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MaxPriority*
  name: MaxPriority
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_MaxPriority_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MaxPriority
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MaxPriority
  nameWithType: LockedQueueStorage.MaxPriority
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageProcessedAsync(System.String,CancellationToken)
  name: MessageProcessedAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_MessageProcessedAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageProcessedAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageProcessedAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.MessageProcessedAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageProcessedAsync*
  name: MessageProcessedAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_MessageProcessedAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageProcessedAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageProcessedAsync
  nameWithType: LockedQueueStorage.MessageProcessedAsync
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageRejectedAsync(System.String,CancellationToken)
  name: MessageRejectedAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_MessageRejectedAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageRejectedAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageRejectedAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.MessageRejectedAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageRejectedAsync*
  name: MessageRejectedAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_MessageRejectedAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageRejectedAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.MessageRejectedAsync
  nameWithType: LockedQueueStorage.MessageRejectedAsync
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PollPeriodicity
  name: PollPeriodicity
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_PollPeriodicity
  commentId: P:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PollPeriodicity
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PollPeriodicity
  nameWithType: LockedQueueStorage.PollPeriodicity
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PollPeriodicity*
  name: PollPeriodicity
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_PollPeriodicity_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PollPeriodicity
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PollPeriodicity
  nameWithType: LockedQueueStorage.PollPeriodicity
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PullAsync(System.Int32,CancellationToken)
  name: PullAsync(Int32, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_PullAsync_System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PullAsync(System.Int32,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PullAsync(System.Int32, CancellationToken)
  nameWithType: LockedQueueStorage.PullAsync(Int32, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PullAsync*
  name: PullAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_PullAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PullAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.PullAsync
  nameWithType: LockedQueueStorage.PullAsync
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.ReleaseMessageAsync(System.String,CancellationToken)
  name: ReleaseMessageAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_ReleaseMessageAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.ReleaseMessageAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.ReleaseMessageAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.ReleaseMessageAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.ReleaseMessageAsync*
  name: ReleaseMessageAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_ReleaseMessageAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.ReleaseMessageAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.ReleaseMessageAsync
  nameWithType: LockedQueueStorage.ReleaseMessageAsync
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RenewDeadlineAsync(System.String,CancellationToken)
  name: RenewDeadlineAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_RenewDeadlineAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RenewDeadlineAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RenewDeadlineAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.RenewDeadlineAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RenewDeadlineAsync*
  name: RenewDeadlineAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_RenewDeadlineAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RenewDeadlineAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RenewDeadlineAsync
  nameWithType: LockedQueueStorage.RenewDeadlineAsync
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RequeueMessageAsync(System.String,CancellationToken)
  name: RequeueMessageAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_RequeueMessageAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RequeueMessageAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RequeueMessageAsync(System.String, CancellationToken)
  nameWithType: LockedQueueStorage.RequeueMessageAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RequeueMessageAsync*
  name: RequeueMessageAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.html#ArmoniK_Core_Adapters_MongoDB_LockedQueueStorage_RequeueMessageAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RequeueMessageAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.LockedQueueStorage.RequeueMessageAsync
  nameWithType: LockedQueueStorage.RequeueMessageAsync
- uid: ArmoniK.Core.Adapters.MongoDB.Object
  name: ArmoniK.Core.Adapters.MongoDB.Object
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.html
  commentId: N:ArmoniK.Core.Adapters.MongoDB.Object
  fullName: ArmoniK.Core.Adapters.MongoDB.Object
  nameWithType: ArmoniK.Core.Adapters.MongoDB.Object
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping
  name: ObjectDataModelMapping
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping
  nameWithType: ObjectDataModelMapping
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Chunk
  name: Chunk
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_Chunk
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Chunk
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Chunk
  nameWithType: ObjectDataModelMapping.Chunk
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Chunk*
  name: Chunk
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_Chunk_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Chunk
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Chunk
  nameWithType: ObjectDataModelMapping.Chunk
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.ChunkIdx
  name: ChunkIdx
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_ChunkIdx
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.ChunkIdx
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.ChunkIdx
  nameWithType: ObjectDataModelMapping.ChunkIdx
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.ChunkIdx*
  name: ChunkIdx
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_ChunkIdx_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.ChunkIdx
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.ChunkIdx
  nameWithType: ObjectDataModelMapping.ChunkIdx
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Collection
  name: Collection
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_Collection
  commentId: F:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Collection
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Collection
  nameWithType: ObjectDataModelMapping.Collection
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.CollectionName
  name: CollectionName
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_CollectionName
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.CollectionName
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.CollectionName
  nameWithType: ObjectDataModelMapping.CollectionName
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.CollectionName*
  name: CollectionName
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_CollectionName_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.CollectionName
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.CollectionName
  nameWithType: ObjectDataModelMapping.CollectionName
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Id
  name: Id
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_Id
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Id
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Id
  nameWithType: ObjectDataModelMapping.Id
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Id*
  name: Id
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_Id_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Id
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Id
  nameWithType: ObjectDataModelMapping.Id
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.InitializeIndexesAsync(IClientSessionHandle,IMongoCollection{ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping})
  name: InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<ObjectDataModelMapping>)
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_InitializeIndexesAsync_IClientSessionHandle_IMongoCollection_ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping__
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.InitializeIndexesAsync(IClientSessionHandle,IMongoCollection{ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping})
  name.vb: InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of ObjectDataModelMapping))
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping>)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping))
  nameWithType: ObjectDataModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<ObjectDataModelMapping>)
  nameWithType.vb: ObjectDataModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of ObjectDataModelMapping))
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.InitializeIndexesAsync*
  name: InitializeIndexesAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_InitializeIndexesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.InitializeIndexesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.InitializeIndexesAsync
  nameWithType: ObjectDataModelMapping.InitializeIndexesAsync
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Key
  name: Key
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_Key
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Key
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Key
  nameWithType: ObjectDataModelMapping.Key
- uid: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Key*
  name: Key
  href: api/ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_Key_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Key
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping.Key
  nameWithType: ObjectDataModelMapping.Key
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage
  name: ObjectStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.ObjectStorage
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage
  nameWithType: ObjectStorage
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping,ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping},System.String,ILogger{ArmoniK.Core.Adapters.MongoDB.ObjectStorage},ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage)
  name: ObjectStorage(SessionProvider, MongoCollectionProvider<ObjectDataModelMapping, ObjectDataModelMapping>, String, ILogger<ObjectStorage>, ObjectStorage)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage__ctor_ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider_ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping__System_String_ILogger_ArmoniK_Core_Adapters_MongoDB_ObjectStorage__ArmoniK_Core_Adapters_MongoDB_Options_ObjectStorage_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping,ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping},System.String,ILogger{ArmoniK.Core.Adapters.MongoDB.ObjectStorage},ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage)
  name.vb: ObjectStorage(SessionProvider, MongoCollectionProvider(Of ObjectDataModelMapping, ObjectDataModelMapping), String, ILogger(Of ObjectStorage), ObjectStorage)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ObjectStorage(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping, ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping>, System.String, ILogger<ArmoniK.Core.Adapters.MongoDB.ObjectStorage>, ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ObjectStorage(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping, ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping), System.String, ILogger(Of ArmoniK.Core.Adapters.MongoDB.ObjectStorage), ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage)
  nameWithType: ObjectStorage.ObjectStorage(SessionProvider, MongoCollectionProvider<ObjectDataModelMapping, ObjectDataModelMapping>, String, ILogger<ObjectStorage>, ObjectStorage)
  nameWithType.vb: ObjectStorage.ObjectStorage(SessionProvider, MongoCollectionProvider(Of ObjectDataModelMapping, ObjectDataModelMapping), String, ILogger(Of ObjectStorage), ObjectStorage)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.#ctor*
  name: ObjectStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ObjectStorage
  nameWithType: ObjectStorage.ObjectStorage
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{ReadOnlyMemory{System.Byte}},CancellationToken)
  name: AddOrUpdateAsync(String, IAsyncEnumerable<ReadOnlyMemory<Byte>>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_AddOrUpdateAsync_System_String_IAsyncEnumerable_ReadOnlyMemory_System_Byte___CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{ReadOnlyMemory{System.Byte}},CancellationToken)
  name.vb: AddOrUpdateAsync(String, IAsyncEnumerable(Of ReadOnlyMemory(Of Byte)), CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable<ReadOnlyMemory<System.Byte>>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable(Of ReadOnlyMemory(Of System.Byte)), CancellationToken)
  nameWithType: ObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable<ReadOnlyMemory<Byte>>, CancellationToken)
  nameWithType.vb: ObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable(Of ReadOnlyMemory(Of Byte)), CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{System.Byte[]},CancellationToken)
  name: AddOrUpdateAsync(String, IAsyncEnumerable<Byte[]>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_AddOrUpdateAsync_System_String_IAsyncEnumerable_System_Byte____CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{System.Byte[]},CancellationToken)
  name.vb: AddOrUpdateAsync(String, IAsyncEnumerable(Of Byte()), CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable<System.Byte[]>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable(Of System.Byte()), CancellationToken)
  nameWithType: ObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable<Byte[]>, CancellationToken)
  nameWithType.vb: ObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable(Of Byte()), CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_AddOrUpdateAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.AddOrUpdateAsync
  nameWithType: ObjectStorage.AddOrUpdateAsync
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ChunkSize
  name: ChunkSize
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_ChunkSize
  commentId: P:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ChunkSize
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ChunkSize
  nameWithType: ObjectStorage.ChunkSize
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ChunkSize*
  name: ChunkSize
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_ChunkSize_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ChunkSize
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ChunkSize
  nameWithType: ObjectStorage.ChunkSize
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ListKeysAsync(CancellationToken)
  name: ListKeysAsync(CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_ListKeysAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ListKeysAsync(CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ListKeysAsync(CancellationToken)
  nameWithType: ObjectStorage.ListKeysAsync(CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ListKeysAsync*
  name: ListKeysAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_ListKeysAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ListKeysAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.ListKeysAsync
  nameWithType: ObjectStorage.ListKeysAsync
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.TryDeleteAsync(System.String,CancellationToken)
  name: TryDeleteAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_TryDeleteAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.TryDeleteAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.TryDeleteAsync(System.String, CancellationToken)
  nameWithType: ObjectStorage.TryDeleteAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.TryDeleteAsync*
  name: TryDeleteAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorage_TryDeleteAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorage.TryDeleteAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorage.TryDeleteAsync
  nameWithType: ObjectStorage.TryDeleteAsync
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory
  name: ObjectStorageFactory
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory
  nameWithType: ObjectStorageFactory
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.#ctor(ILoggerFactory,ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping,ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping},ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage)
  name: ObjectStorageFactory(ILoggerFactory, SessionProvider, MongoCollectionProvider<ObjectDataModelMapping, ObjectDataModelMapping>, ObjectStorage)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorageFactory__ctor_ILoggerFactory_ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider_ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping_ArmoniK_Core_Adapters_MongoDB_Object_ObjectDataModelMapping__ArmoniK_Core_Adapters_MongoDB_Options_ObjectStorage_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.#ctor(ILoggerFactory,ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping,ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping},ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage)
  name.vb: ObjectStorageFactory(ILoggerFactory, SessionProvider, MongoCollectionProvider(Of ObjectDataModelMapping, ObjectDataModelMapping), ObjectStorage)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.ObjectStorageFactory(ILoggerFactory, ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping, ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping>, ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.ObjectStorageFactory(ILoggerFactory, ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping, ArmoniK.Core.Adapters.MongoDB.Object.ObjectDataModelMapping), ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage)
  nameWithType: ObjectStorageFactory.ObjectStorageFactory(ILoggerFactory, SessionProvider, MongoCollectionProvider<ObjectDataModelMapping, ObjectDataModelMapping>, ObjectStorage)
  nameWithType.vb: ObjectStorageFactory.ObjectStorageFactory(ILoggerFactory, SessionProvider, MongoCollectionProvider(Of ObjectDataModelMapping, ObjectDataModelMapping), ObjectStorage)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.#ctor*
  name: ObjectStorageFactory
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorageFactory__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.ObjectStorageFactory
  nameWithType: ObjectStorageFactory.ObjectStorageFactory
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorageFactory_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: ObjectStorageFactory.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorageFactory_Check_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Check
  nameWithType: ObjectStorageFactory.Check
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.CreateObjectStorage(System.String)
  name: CreateObjectStorage(String)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorageFactory_CreateObjectStorage_System_String_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.CreateObjectStorage(System.String)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.CreateObjectStorage(System.String)
  nameWithType: ObjectStorageFactory.CreateObjectStorage(String)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.CreateObjectStorage*
  name: CreateObjectStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorageFactory_CreateObjectStorage_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.CreateObjectStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.CreateObjectStorage
  nameWithType: ObjectStorageFactory.CreateObjectStorage
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorageFactory_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Init(CancellationToken)
  nameWithType: ObjectStorageFactory.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.html#ArmoniK_Core_Adapters_MongoDB_ObjectStorageFactory_Init_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ObjectStorageFactory.Init
  nameWithType: ObjectStorageFactory.Init
- uid: ArmoniK.Core.Adapters.MongoDB.Options
  name: ArmoniK.Core.Adapters.MongoDB.Options
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.html
  commentId: N:ArmoniK.Core.Adapters.MongoDB.Options
  fullName: ArmoniK.Core.Adapters.MongoDB.Options
  nameWithType: ArmoniK.Core.Adapters.MongoDB.Options
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB
  name: MongoDB
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB
  nameWithType: MongoDB
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.AllowInsecureTls
  name: AllowInsecureTls
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_AllowInsecureTls
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.AllowInsecureTls
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.AllowInsecureTls
  nameWithType: MongoDB.AllowInsecureTls
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.AllowInsecureTls*
  name: AllowInsecureTls
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_AllowInsecureTls_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.AllowInsecureTls
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.AllowInsecureTls
  nameWithType: MongoDB.AllowInsecureTls
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CAFile
  name: CAFile
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_CAFile
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CAFile
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CAFile
  nameWithType: MongoDB.CAFile
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CAFile*
  name: CAFile
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_CAFile_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CAFile
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CAFile
  nameWithType: MongoDB.CAFile
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CredentialsPath
  name: CredentialsPath
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_CredentialsPath
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CredentialsPath
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CredentialsPath
  nameWithType: MongoDB.CredentialsPath
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CredentialsPath*
  name: CredentialsPath
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_CredentialsPath_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CredentialsPath
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.CredentialsPath
  nameWithType: MongoDB.CredentialsPath
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DatabaseName
  name: DatabaseName
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_DatabaseName
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DatabaseName
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DatabaseName
  nameWithType: MongoDB.DatabaseName
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DatabaseName*
  name: DatabaseName
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_DatabaseName_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DatabaseName
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DatabaseName
  nameWithType: MongoDB.DatabaseName
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DataRetention
  name: DataRetention
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_DataRetention
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DataRetention
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DataRetention
  nameWithType: MongoDB.DataRetention
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DataRetention*
  name: DataRetention
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_DataRetention_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DataRetention
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DataRetention
  nameWithType: MongoDB.DataRetention
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DirectConnection
  name: DirectConnection
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_DirectConnection
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DirectConnection
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DirectConnection
  nameWithType: MongoDB.DirectConnection
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DirectConnection*
  name: DirectConnection
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_DirectConnection_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DirectConnection
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.DirectConnection
  nameWithType: MongoDB.DirectConnection
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Host
  name: Host
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_Host
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Host
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Host
  nameWithType: MongoDB.Host
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Host*
  name: Host
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_Host_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Host
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Host
  nameWithType: MongoDB.Host
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ObjectStorage
  name: ObjectStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_ObjectStorage
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ObjectStorage
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ObjectStorage
  nameWithType: MongoDB.ObjectStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ObjectStorage*
  name: ObjectStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_ObjectStorage_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ObjectStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ObjectStorage
  nameWithType: MongoDB.ObjectStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Password
  name: Password
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_Password
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Password
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Password
  nameWithType: MongoDB.Password
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Password*
  name: Password
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_Password_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Password
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Password
  nameWithType: MongoDB.Password
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Port
  name: Port
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_Port
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Port
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Port
  nameWithType: MongoDB.Port
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Port*
  name: Port
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_Port_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Port
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Port
  nameWithType: MongoDB.Port
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.QueueStorage
  name: QueueStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_QueueStorage
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.QueueStorage
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.QueueStorage
  nameWithType: MongoDB.QueueStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.QueueStorage*
  name: QueueStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_QueueStorage_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.QueueStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.QueueStorage
  nameWithType: MongoDB.QueueStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ReplicaSet
  name: ReplicaSet
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_ReplicaSet
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ReplicaSet
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ReplicaSet
  nameWithType: MongoDB.ReplicaSet
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ReplicaSet*
  name: ReplicaSet
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_ReplicaSet_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ReplicaSet
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.ReplicaSet
  nameWithType: MongoDB.ReplicaSet
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_SettingSection
  commentId: F:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.SettingSection
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.SettingSection
  nameWithType: MongoDB.SettingSection
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.TableStorage
  name: TableStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_TableStorage
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.TableStorage
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.TableStorage
  nameWithType: MongoDB.TableStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.TableStorage*
  name: TableStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_TableStorage_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.TableStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.TableStorage
  nameWithType: MongoDB.TableStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Tls
  name: Tls
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_Tls
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Tls
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Tls
  nameWithType: MongoDB.Tls
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Tls*
  name: Tls
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_Tls_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Tls
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.Tls
  nameWithType: MongoDB.Tls
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.User
  name: User
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_User
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.User
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.User
  nameWithType: MongoDB.User
- uid: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.User*
  name: User
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.html#ArmoniK_Core_Adapters_MongoDB_Options_MongoDB_User_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.User
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.MongoDB.User
  nameWithType: MongoDB.User
- uid: ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage
  name: ObjectStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage
  nameWithType: ObjectStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.ChunkSize
  name: ChunkSize
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_ObjectStorage_ChunkSize
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.ChunkSize
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.ChunkSize
  nameWithType: ObjectStorage.ChunkSize
- uid: ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.ChunkSize*
  name: ChunkSize
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_ObjectStorage_ChunkSize_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.ChunkSize
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.ChunkSize
  nameWithType: ObjectStorage.ChunkSize
- uid: ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_ObjectStorage_SettingSection
  commentId: F:ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.SettingSection
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.ObjectStorage.SettingSection
  nameWithType: ObjectStorage.SettingSection
- uid: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage
  name: QueueStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage
  nameWithType: QueueStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshExtension
  name: LockRefreshExtension
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_QueueStorage_LockRefreshExtension
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshExtension
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshExtension
  nameWithType: QueueStorage.LockRefreshExtension
- uid: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshExtension*
  name: LockRefreshExtension
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_QueueStorage_LockRefreshExtension_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshExtension
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshExtension
  nameWithType: QueueStorage.LockRefreshExtension
- uid: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshPeriodicity
  name: LockRefreshPeriodicity
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_QueueStorage_LockRefreshPeriodicity
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshPeriodicity
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshPeriodicity
  nameWithType: QueueStorage.LockRefreshPeriodicity
- uid: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshPeriodicity*
  name: LockRefreshPeriodicity
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_QueueStorage_LockRefreshPeriodicity_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshPeriodicity
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.LockRefreshPeriodicity
  nameWithType: QueueStorage.LockRefreshPeriodicity
- uid: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.PollPeriodicity
  name: PollPeriodicity
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_QueueStorage_PollPeriodicity
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.PollPeriodicity
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.PollPeriodicity
  nameWithType: QueueStorage.PollPeriodicity
- uid: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.PollPeriodicity*
  name: PollPeriodicity
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_QueueStorage_PollPeriodicity_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.PollPeriodicity
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.PollPeriodicity
  nameWithType: QueueStorage.PollPeriodicity
- uid: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_QueueStorage_SettingSection
  commentId: F:ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.SettingSection
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.QueueStorage.SettingSection
  nameWithType: QueueStorage.SettingSection
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage
  name: TableStorage
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage
  nameWithType: TableStorage
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchRefreshPeriod
  name: DispatchRefreshPeriod
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_DispatchRefreshPeriod
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchRefreshPeriod
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchRefreshPeriod
  nameWithType: TableStorage.DispatchRefreshPeriod
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchRefreshPeriod*
  name: DispatchRefreshPeriod
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_DispatchRefreshPeriod_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchRefreshPeriod
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchRefreshPeriod
  nameWithType: TableStorage.DispatchRefreshPeriod
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchTimeToLive
  name: DispatchTimeToLive
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_DispatchTimeToLive
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchTimeToLive
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchTimeToLive
  nameWithType: TableStorage.DispatchTimeToLive
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchTimeToLive*
  name: DispatchTimeToLive
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_DispatchTimeToLive_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchTimeToLive
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.DispatchTimeToLive
  nameWithType: TableStorage.DispatchTimeToLive
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMax
  name: PollingDelayMax
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_PollingDelayMax
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMax
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMax
  nameWithType: TableStorage.PollingDelayMax
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMax*
  name: PollingDelayMax
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_PollingDelayMax_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMax
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMax
  nameWithType: TableStorage.PollingDelayMax
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMin
  name: PollingDelayMin
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_PollingDelayMin
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMin
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMin
  nameWithType: TableStorage.PollingDelayMin
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMin*
  name: PollingDelayMin
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_PollingDelayMin_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMin
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.PollingDelayMin
  nameWithType: TableStorage.PollingDelayMin
- uid: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.html#ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_SettingSection
  commentId: F:ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.SettingSection
  fullName: ArmoniK.Core.Adapters.MongoDB.Options.TableStorage.SettingSection
  nameWithType: TableStorage.SettingSection
- uid: ArmoniK.Core.Adapters.MongoDB.Queue
  name: ArmoniK.Core.Adapters.MongoDB.Queue
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.html
  commentId: N:ArmoniK.Core.Adapters.MongoDB.Queue
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue
  nameWithType: ArmoniK.Core.Adapters.MongoDB.Queue
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping
  name: QueueMessageModelMapping
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping
  nameWithType: QueueMessageModelMapping
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Collection
  name: Collection
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_Collection
  commentId: F:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Collection
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Collection
  nameWithType: QueueMessageModelMapping.Collection
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.CollectionName
  name: CollectionName
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_CollectionName
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.CollectionName
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.CollectionName
  nameWithType: QueueMessageModelMapping.CollectionName
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.CollectionName*
  name: CollectionName
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_CollectionName_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.CollectionName
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.CollectionName
  nameWithType: QueueMessageModelMapping.CollectionName
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.InitializeIndexesAsync(IClientSessionHandle,IMongoCollection{ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping})
  name: InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<QueueMessageModelMapping>)
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_InitializeIndexesAsync_IClientSessionHandle_IMongoCollection_ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping__
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.InitializeIndexesAsync(IClientSessionHandle,IMongoCollection{ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping})
  name.vb: InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of QueueMessageModelMapping))
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping>)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping))
  nameWithType: QueueMessageModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<QueueMessageModelMapping>)
  nameWithType.vb: QueueMessageModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of QueueMessageModelMapping))
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.InitializeIndexesAsync*
  name: InitializeIndexesAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_InitializeIndexesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.InitializeIndexesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.InitializeIndexesAsync
  nameWithType: QueueMessageModelMapping.InitializeIndexesAsync
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.MessageId
  name: MessageId
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_MessageId
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.MessageId
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.MessageId
  nameWithType: QueueMessageModelMapping.MessageId
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.MessageId*
  name: MessageId
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_MessageId_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.MessageId
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.MessageId
  nameWithType: QueueMessageModelMapping.MessageId
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnedUntil
  name: OwnedUntil
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_OwnedUntil
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnedUntil
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnedUntil
  nameWithType: QueueMessageModelMapping.OwnedUntil
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnedUntil*
  name: OwnedUntil
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_OwnedUntil_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnedUntil
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnedUntil
  nameWithType: QueueMessageModelMapping.OwnedUntil
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnerId
  name: OwnerId
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_OwnerId
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnerId
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnerId
  nameWithType: QueueMessageModelMapping.OwnerId
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnerId*
  name: OwnerId
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_OwnerId_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnerId
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.OwnerId
  nameWithType: QueueMessageModelMapping.OwnerId
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Priority
  name: Priority
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_Priority
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Priority
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Priority
  nameWithType: QueueMessageModelMapping.Priority
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Priority*
  name: Priority
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_Priority_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Priority
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.Priority
  nameWithType: QueueMessageModelMapping.Priority
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.SubmissionDate
  name: SubmissionDate
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_SubmissionDate
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.SubmissionDate
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.SubmissionDate
  nameWithType: QueueMessageModelMapping.SubmissionDate
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.SubmissionDate*
  name: SubmissionDate
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_SubmissionDate_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.SubmissionDate
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.SubmissionDate
  nameWithType: QueueMessageModelMapping.SubmissionDate
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.TaskId
  name: TaskId
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_TaskId
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.TaskId
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.TaskId
  nameWithType: QueueMessageModelMapping.TaskId
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.TaskId*
  name: TaskId
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Queue_QueueMessageModelMapping_TaskId_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.TaskId
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.QueueMessageModelMapping.TaskId
  nameWithType: QueueMessageModelMapping.TaskId
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator
  name: StringCombGuidGenerator
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator
  nameWithType: StringCombGuidGenerator
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId
  name: GenerateId()
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.html#ArmoniK_Core_Adapters_MongoDB_Queue_StringCombGuidGenerator_GenerateId
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId()
  nameWithType: StringCombGuidGenerator.GenerateId()
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId(System.Object,System.Object)
  name: GenerateId(Object, Object)
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.html#ArmoniK_Core_Adapters_MongoDB_Queue_StringCombGuidGenerator_GenerateId_System_Object_System_Object_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId(System.Object,System.Object)
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId(System.Object, System.Object)
  nameWithType: StringCombGuidGenerator.GenerateId(Object, Object)
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId*
  name: GenerateId
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.html#ArmoniK_Core_Adapters_MongoDB_Queue_StringCombGuidGenerator_GenerateId_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.GenerateId
  nameWithType: StringCombGuidGenerator.GenerateId
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.IsEmpty(System.Object)
  name: IsEmpty(Object)
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.html#ArmoniK_Core_Adapters_MongoDB_Queue_StringCombGuidGenerator_IsEmpty_System_Object_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.IsEmpty(System.Object)
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.IsEmpty(System.Object)
  nameWithType: StringCombGuidGenerator.IsEmpty(Object)
- uid: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.IsEmpty*
  name: IsEmpty
  href: api/ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.html#ArmoniK_Core_Adapters_MongoDB_Queue_StringCombGuidGenerator_IsEmpty_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.IsEmpty
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Queue.StringCombGuidGenerator.IsEmpty
  nameWithType: StringCombGuidGenerator.IsEmpty
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable
  name: ResultTable
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.ResultTable
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable
  nameWithType: ResultTable
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{ArmoniK.Core.Adapters.MongoDB.Table.DataModel.Result,ResultDataModelMapping},ActivitySource,ILogger{ArmoniK.Core.Adapters.MongoDB.ResultTable})
  name: ResultTable(SessionProvider, MongoCollectionProvider<Result, ResultDataModelMapping>, ActivitySource, ILogger<ResultTable>)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable__ctor_ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider_ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_ArmoniK_Core_Adapters_MongoDB_Table_DataModel_Result_ResultDataModelMapping__ActivitySource_ILogger_ArmoniK_Core_Adapters_MongoDB_ResultTable__
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{ArmoniK.Core.Adapters.MongoDB.Table.DataModel.Result,ResultDataModelMapping},ActivitySource,ILogger{ArmoniK.Core.Adapters.MongoDB.ResultTable})
  name.vb: ResultTable(SessionProvider, MongoCollectionProvider(Of Result, ResultDataModelMapping), ActivitySource, ILogger(Of ResultTable))
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.ResultTable(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<ArmoniK.Core.Adapters.MongoDB.Table.DataModel.Result, ResultDataModelMapping>, ActivitySource, ILogger<ArmoniK.Core.Adapters.MongoDB.ResultTable>)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ResultTable.ResultTable(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of ArmoniK.Core.Adapters.MongoDB.Table.DataModel.Result, ResultDataModelMapping), ActivitySource, ILogger(Of ArmoniK.Core.Adapters.MongoDB.ResultTable))
  nameWithType: ResultTable.ResultTable(SessionProvider, MongoCollectionProvider<Result, ResultDataModelMapping>, ActivitySource, ILogger<ResultTable>)
  nameWithType.vb: ResultTable.ResultTable(SessionProvider, MongoCollectionProvider(Of Result, ResultDataModelMapping), ActivitySource, ILogger(Of ResultTable))
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.#ctor*
  name: ResultTable
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.ResultTable
  nameWithType: ResultTable.ResultTable
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.AreResultsAvailableAsync(System.String,IEnumerable{System.String},CancellationToken)
  name: AreResultsAvailableAsync(String, IEnumerable<String>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_AreResultsAvailableAsync_System_String_IEnumerable_System_String__CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.AreResultsAvailableAsync(System.String,IEnumerable{System.String},CancellationToken)
  name.vb: AreResultsAvailableAsync(String, IEnumerable(Of String), CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.AreResultsAvailableAsync(System.String, IEnumerable<System.String>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ResultTable.AreResultsAvailableAsync(System.String, IEnumerable(Of System.String), CancellationToken)
  nameWithType: ResultTable.AreResultsAvailableAsync(String, IEnumerable<String>, CancellationToken)
  nameWithType.vb: ResultTable.AreResultsAvailableAsync(String, IEnumerable(Of String), CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.AreResultsAvailableAsync*
  name: AreResultsAvailableAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_AreResultsAvailableAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.AreResultsAvailableAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.AreResultsAvailableAsync
  nameWithType: ResultTable.AreResultsAvailableAsync
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultDispatch(System.String,System.String,System.String,CancellationToken)
  name: ChangeResultDispatch(String, String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_ChangeResultDispatch_System_String_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultDispatch(System.String,System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultDispatch(System.String, System.String, System.String, CancellationToken)
  nameWithType: ResultTable.ChangeResultDispatch(String, String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultDispatch*
  name: ChangeResultDispatch
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_ChangeResultDispatch_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultDispatch
  nameWithType: ResultTable.ChangeResultDispatch
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultOwnership(System.String,IEnumerable{System.String},System.String,System.String,CancellationToken)
  name: ChangeResultOwnership(String, IEnumerable<String>, String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_ChangeResultOwnership_System_String_IEnumerable_System_String__System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultOwnership(System.String,IEnumerable{System.String},System.String,System.String,CancellationToken)
  name.vb: ChangeResultOwnership(String, IEnumerable(Of String), String, String, CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultOwnership(System.String, IEnumerable<System.String>, System.String, System.String, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultOwnership(System.String, IEnumerable(Of System.String), System.String, System.String, CancellationToken)
  nameWithType: ResultTable.ChangeResultOwnership(String, IEnumerable<String>, String, String, CancellationToken)
  nameWithType.vb: ResultTable.ChangeResultOwnership(String, IEnumerable(Of String), String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultOwnership*
  name: ChangeResultOwnership
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_ChangeResultOwnership_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultOwnership
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.ChangeResultOwnership
  nameWithType: ResultTable.ChangeResultOwnership
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: ResultTable.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_Check_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.Check
  nameWithType: ResultTable.Check
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.Create(IEnumerable{ArmoniK.Core.Common.Storage.Result},CancellationToken)
  name: Create(IEnumerable<Result>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_Create_IEnumerable_ArmoniK_Core_Common_Storage_Result__CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.Create(IEnumerable{ArmoniK.Core.Common.Storage.Result},CancellationToken)
  name.vb: Create(IEnumerable(Of Result), CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.Create(IEnumerable<ArmoniK.Core.Common.Storage.Result>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ResultTable.Create(IEnumerable(Of ArmoniK.Core.Common.Storage.Result), CancellationToken)
  nameWithType: ResultTable.Create(IEnumerable<Result>, CancellationToken)
  nameWithType.vb: ResultTable.Create(IEnumerable(Of Result), CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.Create*
  name: Create
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_Create_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.Create
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.Create
  nameWithType: ResultTable.Create
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResult(System.String,System.String,CancellationToken)
  name: DeleteResult(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_DeleteResult_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResult(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResult(System.String, System.String, CancellationToken)
  nameWithType: ResultTable.DeleteResult(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResult*
  name: DeleteResult
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_DeleteResult_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResult
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResult
  nameWithType: ResultTable.DeleteResult
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResults(System.String,CancellationToken)
  name: DeleteResults(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_DeleteResults_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResults(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResults(System.String, CancellationToken)
  nameWithType: ResultTable.DeleteResults(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResults*
  name: DeleteResults
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_DeleteResults_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResults
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.DeleteResults
  nameWithType: ResultTable.DeleteResults
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.GetResult(System.String,System.String,CancellationToken)
  name: GetResult(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_GetResult_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.GetResult(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.GetResult(System.String, System.String, CancellationToken)
  nameWithType: ResultTable.GetResult(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.GetResult*
  name: GetResult
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_GetResult_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.GetResult
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.GetResult
  nameWithType: ResultTable.GetResult
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.Init(CancellationToken)
  nameWithType: ResultTable.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_Init_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.Init
  nameWithType: ResultTable.Init
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.ListResultsAsync(System.String,CancellationToken)
  name: ListResultsAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_ListResultsAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.ListResultsAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.ListResultsAsync(System.String, CancellationToken)
  nameWithType: ResultTable.ListResultsAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.ListResultsAsync*
  name: ListResultsAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_ListResultsAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.ListResultsAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.ListResultsAsync
  nameWithType: ResultTable.ListResultsAsync
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_Logger
  commentId: P:ArmoniK.Core.Adapters.MongoDB.ResultTable.Logger
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.Logger
  nameWithType: ResultTable.Logger
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_Logger_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.Logger
  nameWithType: ResultTable.Logger
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult(System.String,System.String,System.String,CancellationToken)
  name: SetResult(String, String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_SetResult_System_String_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult(System.String,System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult(System.String, System.String, System.String, CancellationToken)
  nameWithType: ResultTable.SetResult(String, String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult(System.String,System.String,System.String,System.Byte[],CancellationToken)
  name: SetResult(String, String, String, Byte[], CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_SetResult_System_String_System_String_System_String_System_Byte___CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult(System.String,System.String,System.String,System.Byte[],CancellationToken)
  name.vb: SetResult(String, String, String, Byte(), CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult(System.String, System.String, System.String, System.Byte[], CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult(System.String, System.String, System.String, System.Byte(), CancellationToken)
  nameWithType: ResultTable.SetResult(String, String, String, Byte[], CancellationToken)
  nameWithType.vb: ResultTable.SetResult(String, String, String, Byte(), CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult*
  name: SetResult
  href: api/ArmoniK.Core.Adapters.MongoDB.ResultTable.html#ArmoniK_Core_Adapters_MongoDB_ResultTable_SetResult_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ResultTable.SetResult
  nameWithType: ResultTable.SetResult
- uid: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt
  name: ServiceCollectionExt
  href: api/ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt
  fullName: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt
  nameWithType: ServiceCollectionExt
- uid: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoClient(IServiceCollection,ConfigurationManager,ILogger)
  name: AddMongoClient(IServiceCollection, ConfigurationManager, ILogger)
  href: api/ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.html#ArmoniK_Core_Adapters_MongoDB_ServiceCollectionExt_AddMongoClient_IServiceCollection_ConfigurationManager_ILogger_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoClient(IServiceCollection,ConfigurationManager,ILogger)
  fullName: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoClient(IServiceCollection, ConfigurationManager, ILogger)
  nameWithType: ServiceCollectionExt.AddMongoClient(IServiceCollection, ConfigurationManager, ILogger)
- uid: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoClient*
  name: AddMongoClient
  href: api/ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.html#ArmoniK_Core_Adapters_MongoDB_ServiceCollectionExt_AddMongoClient_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoClient
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoClient
  nameWithType: ServiceCollectionExt.AddMongoClient
- uid: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoComponents(IServiceCollection,ConfigurationManager,ILogger)
  name: AddMongoComponents(IServiceCollection, ConfigurationManager, ILogger)
  href: api/ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.html#ArmoniK_Core_Adapters_MongoDB_ServiceCollectionExt_AddMongoComponents_IServiceCollection_ConfigurationManager_ILogger_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoComponents(IServiceCollection,ConfigurationManager,ILogger)
  fullName: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoComponents(IServiceCollection, ConfigurationManager, ILogger)
  nameWithType: ServiceCollectionExt.AddMongoComponents(IServiceCollection, ConfigurationManager, ILogger)
- uid: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoComponents*
  name: AddMongoComponents
  href: api/ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.html#ArmoniK_Core_Adapters_MongoDB_ServiceCollectionExt_AddMongoComponents_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoComponents
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoComponents
  nameWithType: ServiceCollectionExt.AddMongoComponents
- uid: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoStorages(IServiceCollection,ConfigurationManager,ILogger)
  name: AddMongoStorages(IServiceCollection, ConfigurationManager, ILogger)
  href: api/ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.html#ArmoniK_Core_Adapters_MongoDB_ServiceCollectionExt_AddMongoStorages_IServiceCollection_ConfigurationManager_ILogger_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoStorages(IServiceCollection,ConfigurationManager,ILogger)
  fullName: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoStorages(IServiceCollection, ConfigurationManager, ILogger)
  nameWithType: ServiceCollectionExt.AddMongoStorages(IServiceCollection, ConfigurationManager, ILogger)
- uid: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoStorages*
  name: AddMongoStorages
  href: api/ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.html#ArmoniK_Core_Adapters_MongoDB_ServiceCollectionExt_AddMongoStorages_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoStorages
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.ServiceCollectionExt.AddMongoStorages
  nameWithType: ServiceCollectionExt.AddMongoStorages
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable
  name: SessionTable
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.SessionTable
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable
  nameWithType: SessionTable
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{SessionData,SessionDataModelMapping},ILogger{ArmoniK.Core.Adapters.MongoDB.SessionTable},ActivitySource)
  name: SessionTable(SessionProvider, MongoCollectionProvider<SessionData, SessionDataModelMapping>, ILogger<SessionTable>, ActivitySource)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable__ctor_ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider_ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_SessionData_SessionDataModelMapping__ILogger_ArmoniK_Core_Adapters_MongoDB_SessionTable__ActivitySource_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{SessionData,SessionDataModelMapping},ILogger{ArmoniK.Core.Adapters.MongoDB.SessionTable},ActivitySource)
  name.vb: SessionTable(SessionProvider, MongoCollectionProvider(Of SessionData, SessionDataModelMapping), ILogger(Of SessionTable), ActivitySource)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.SessionTable(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<SessionData, SessionDataModelMapping>, ILogger<ArmoniK.Core.Adapters.MongoDB.SessionTable>, ActivitySource)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.SessionTable.SessionTable(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of SessionData, SessionDataModelMapping), ILogger(Of ArmoniK.Core.Adapters.MongoDB.SessionTable), ActivitySource)
  nameWithType: SessionTable.SessionTable(SessionProvider, MongoCollectionProvider<SessionData, SessionDataModelMapping>, ILogger<SessionTable>, ActivitySource)
  nameWithType.vb: SessionTable.SessionTable(SessionProvider, MongoCollectionProvider(Of SessionData, SessionDataModelMapping), ILogger(Of SessionTable), ActivitySource)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.#ctor*
  name: SessionTable
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.SessionTable
  nameWithType: SessionTable.SessionTable
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  name: CancelDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_CancelDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: SessionTable.CancelDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelDispatchAsync*
  name: CancelDispatchAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_CancelDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelDispatchAsync
  nameWithType: SessionTable.CancelDispatchAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelSessionAsync(System.String,CancellationToken)
  name: CancelSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_CancelSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelSessionAsync(System.String, CancellationToken)
  nameWithType: SessionTable.CancelSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelSessionAsync*
  name: CancelSessionAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_CancelSessionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.CancelSessionAsync
  nameWithType: SessionTable.CancelSessionAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: SessionTable.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_Check_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.Check
  nameWithType: SessionTable.Check
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.CreateSessionDataAsync(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  name: CreateSessionDataAsync(String, String, String, TaskOptions, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_CreateSessionDataAsync_System_String_System_String_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.CreateSessionDataAsync(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.CreateSessionDataAsync(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, CancellationToken)
  nameWithType: SessionTable.CreateSessionDataAsync(String, String, String, TaskOptions, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.CreateSessionDataAsync*
  name: CreateSessionDataAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_CreateSessionDataAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.CreateSessionDataAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.CreateSessionDataAsync
  nameWithType: SessionTable.CreateSessionDataAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteDispatchAsync(System.String,System.String,CancellationToken)
  name: DeleteDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_DeleteDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: SessionTable.DeleteDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteDispatchAsync*
  name: DeleteDispatchAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_DeleteDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteDispatchAsync
  nameWithType: SessionTable.DeleteDispatchAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteSessionAsync(System.String,CancellationToken)
  name: DeleteSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_DeleteSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteSessionAsync(System.String, CancellationToken)
  nameWithType: SessionTable.DeleteSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteSessionAsync*
  name: DeleteSessionAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_DeleteSessionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.DeleteSessionAsync
  nameWithType: SessionTable.DeleteSessionAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.GetDefaultTaskOptionAsync(System.String,CancellationToken)
  name: GetDefaultTaskOptionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_GetDefaultTaskOptionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.GetDefaultTaskOptionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.GetDefaultTaskOptionAsync(System.String, CancellationToken)
  nameWithType: SessionTable.GetDefaultTaskOptionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.GetDefaultTaskOptionAsync*
  name: GetDefaultTaskOptionAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_GetDefaultTaskOptionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.GetDefaultTaskOptionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.GetDefaultTaskOptionAsync
  nameWithType: SessionTable.GetDefaultTaskOptionAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.GetSessionAsync(System.String,CancellationToken)
  name: GetSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_GetSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.GetSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.GetSessionAsync(System.String, CancellationToken)
  nameWithType: SessionTable.GetSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.GetSessionAsync*
  name: GetSessionAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_GetSessionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.GetSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.GetSessionAsync
  nameWithType: SessionTable.GetSessionAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.Init(CancellationToken)
  nameWithType: SessionTable.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_Init_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.Init
  nameWithType: SessionTable.Init
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.IsDispatchCancelledAsync(System.String,System.String,CancellationToken)
  name: IsDispatchCancelledAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_IsDispatchCancelledAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.IsDispatchCancelledAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.IsDispatchCancelledAsync(System.String, System.String, CancellationToken)
  nameWithType: SessionTable.IsDispatchCancelledAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.IsDispatchCancelledAsync*
  name: IsDispatchCancelledAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_IsDispatchCancelledAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.IsDispatchCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.IsDispatchCancelledAsync
  nameWithType: SessionTable.IsDispatchCancelledAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.IsSessionCancelledAsync(System.String,CancellationToken)
  name: IsSessionCancelledAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_IsSessionCancelledAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.IsSessionCancelledAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.IsSessionCancelledAsync(System.String, CancellationToken)
  nameWithType: SessionTable.IsSessionCancelledAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.IsSessionCancelledAsync*
  name: IsSessionCancelledAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_IsSessionCancelledAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.IsSessionCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.IsSessionCancelledAsync
  nameWithType: SessionTable.IsSessionCancelledAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.ListDispatchesAsync(System.String,CancellationToken)
  name: ListDispatchesAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_ListDispatchesAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.ListDispatchesAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.ListDispatchesAsync(System.String, CancellationToken)
  nameWithType: SessionTable.ListDispatchesAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.ListDispatchesAsync*
  name: ListDispatchesAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_ListDispatchesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.ListDispatchesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.ListDispatchesAsync
  nameWithType: SessionTable.ListDispatchesAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.ListSessionsAsync(CancellationToken)
  name: ListSessionsAsync(CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_ListSessionsAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.SessionTable.ListSessionsAsync(CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.ListSessionsAsync(CancellationToken)
  nameWithType: SessionTable.ListSessionsAsync(CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.ListSessionsAsync*
  name: ListSessionsAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_ListSessionsAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.ListSessionsAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.ListSessionsAsync
  nameWithType: SessionTable.ListSessionsAsync
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_Logger
  commentId: P:ArmoniK.Core.Adapters.MongoDB.SessionTable.Logger
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.Logger
  nameWithType: SessionTable.Logger
- uid: ArmoniK.Core.Adapters.MongoDB.SessionTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Adapters.MongoDB.SessionTable.html#ArmoniK_Core_Adapters_MongoDB_SessionTable_Logger_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.SessionTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.SessionTable.Logger
  nameWithType: SessionTable.Logger
- uid: ArmoniK.Core.Adapters.MongoDB.Table
  name: ArmoniK.Core.Adapters.MongoDB.Table
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.html
  commentId: N:ArmoniK.Core.Adapters.MongoDB.Table
  fullName: ArmoniK.Core.Adapters.MongoDB.Table
  nameWithType: ArmoniK.Core.Adapters.MongoDB.Table
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel
  name: ArmoniK.Core.Adapters.MongoDB.Table.DataModel
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.html
  commentId: N:ArmoniK.Core.Adapters.MongoDB.Table.DataModel
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel
  nameWithType: ArmoniK.Core.Adapters.MongoDB.Table.DataModel
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions
  name: ResultExtensions
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions
  nameWithType: ResultExtensions
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.ToResultDataModel(ArmoniK.Core.Common.Storage.Result)
  name: ToResultDataModel(Result)
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.html#ArmoniK_Core_Adapters_MongoDB_Table_DataModel_ResultExtensions_ToResultDataModel_ArmoniK_Core_Common_Storage_Result_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.ToResultDataModel(ArmoniK.Core.Common.Storage.Result)
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.ToResultDataModel(ArmoniK.Core.Common.Storage.Result)
  nameWithType: ResultExtensions.ToResultDataModel(Result)
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.ToResultDataModel*
  name: ToResultDataModel
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.html#ArmoniK_Core_Adapters_MongoDB_Table_DataModel_ResultExtensions_ToResultDataModel_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.ToResultDataModel
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.ResultExtensions.ToResultDataModel
  nameWithType: ResultExtensions.ToResultDataModel
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping
  name: TaskDataModelMapping
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping
  nameWithType: TaskDataModelMapping
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.CollectionName
  name: CollectionName
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Table_DataModel_TaskDataModelMapping_CollectionName
  commentId: P:ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.CollectionName
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.CollectionName
  nameWithType: TaskDataModelMapping.CollectionName
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.CollectionName*
  name: CollectionName
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Table_DataModel_TaskDataModelMapping_CollectionName_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.CollectionName
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.CollectionName
  nameWithType: TaskDataModelMapping.CollectionName
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.InitializeIndexesAsync(IClientSessionHandle,IMongoCollection{TaskData})
  name: InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<TaskData>)
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Table_DataModel_TaskDataModelMapping_InitializeIndexesAsync_IClientSessionHandle_IMongoCollection_TaskData__
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.InitializeIndexesAsync(IClientSessionHandle,IMongoCollection{TaskData})
  name.vb: InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of TaskData))
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<TaskData>)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of TaskData))
  nameWithType: TaskDataModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection<TaskData>)
  nameWithType.vb: TaskDataModelMapping.InitializeIndexesAsync(IClientSessionHandle, IMongoCollection(Of TaskData))
- uid: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.InitializeIndexesAsync*
  name: InitializeIndexesAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.html#ArmoniK_Core_Adapters_MongoDB_Table_DataModel_TaskDataModelMapping_InitializeIndexesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.InitializeIndexesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping.InitializeIndexesAsync
  nameWithType: TaskDataModelMapping.InitializeIndexesAsync
- uid: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders
  name: ExpressionsBuilders
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders
  nameWithType: ExpressionsBuilders
- uid: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterExpression*
  name: FieldFilterExpression
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.html#ArmoniK_Core_Adapters_MongoDB_Table_ExpressionsBuilders_FieldFilterExpression_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterExpression
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterExpression
  nameWithType: ExpressionsBuilders.FieldFilterExpression
- uid: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterExpression``1(Expression{Func{TaskData,``0}},IList{``0},System.Boolean)
  name: FieldFilterExpression<TField>(Expression<Func<TaskData, TField>>, IList<TField>, Boolean)
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.html#ArmoniK_Core_Adapters_MongoDB_Table_ExpressionsBuilders_FieldFilterExpression__1_Expression_Func_TaskData___0___IList___0__System_Boolean_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterExpression``1(Expression{Func{TaskData,``0}},IList{``0},System.Boolean)
  name.vb: FieldFilterExpression(Of TField)(Expression(Of Func(Of TaskData, TField)), IList(Of TField), Boolean)
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterExpression<TField>(Expression<Func<TaskData, TField>>, IList<TField>, System.Boolean)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterExpression(Of TField)(Expression(Of Func(Of TaskData, TField)), IList(Of TField), System.Boolean)
  nameWithType: ExpressionsBuilders.FieldFilterExpression<TField>(Expression<Func<TaskData, TField>>, IList<TField>, Boolean)
  nameWithType.vb: ExpressionsBuilders.FieldFilterExpression(Of TField)(Expression(Of Func(Of TaskData, TField)), IList(Of TField), Boolean)
- uid: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal*
  name: FieldFilterInternal
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.html#ArmoniK_Core_Adapters_MongoDB_Table_ExpressionsBuilders_FieldFilterInternal_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal
  nameWithType: ExpressionsBuilders.FieldFilterInternal
- uid: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal``1(Expression{Func{TaskData,``0}},IList{``0},System.Boolean,Expression)
  name: FieldFilterInternal<TField>(Expression<Func<TaskData, TField>>, IList<TField>, Boolean, Expression)
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.html#ArmoniK_Core_Adapters_MongoDB_Table_ExpressionsBuilders_FieldFilterInternal__1_Expression_Func_TaskData___0___IList___0__System_Boolean_Expression_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal``1(Expression{Func{TaskData,``0}},IList{``0},System.Boolean,Expression)
  name.vb: FieldFilterInternal(Of TField)(Expression(Of Func(Of TaskData, TField)), IList(Of TField), Boolean, Expression)
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal<TField>(Expression<Func<TaskData, TField>>, IList<TField>, System.Boolean, Expression)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal(Of TField)(Expression(Of Func(Of TaskData, TField)), IList(Of TField), System.Boolean, Expression)
  nameWithType: ExpressionsBuilders.FieldFilterInternal<TField>(Expression<Func<TaskData, TField>>, IList<TField>, Boolean, Expression)
  nameWithType.vb: ExpressionsBuilders.FieldFilterInternal(Of TField)(Expression(Of Func(Of TaskData, TField)), IList(Of TField), Boolean, Expression)
- uid: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal``1(Expression{Func{TaskData,IEnumerable{``0}}},IList{``0},System.Boolean,Expression)
  name: FieldFilterInternal<TField>(Expression<Func<TaskData, IEnumerable<TField>>>, IList<TField>, Boolean, Expression)
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.html#ArmoniK_Core_Adapters_MongoDB_Table_ExpressionsBuilders_FieldFilterInternal__1_Expression_Func_TaskData_IEnumerable___0____IList___0__System_Boolean_Expression_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal``1(Expression{Func{TaskData,IEnumerable{``0}}},IList{``0},System.Boolean,Expression)
  name.vb: FieldFilterInternal(Of TField)(Expression(Of Func(Of TaskData, IEnumerable(Of TField))), IList(Of TField), Boolean, Expression)
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal<TField>(Expression<Func<TaskData, IEnumerable<TField>>>, IList<TField>, System.Boolean, Expression)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Table.ExpressionsBuilders.FieldFilterInternal(Of TField)(Expression(Of Func(Of TaskData, IEnumerable(Of TField))), IList(Of TField), System.Boolean, Expression)
  nameWithType: ExpressionsBuilders.FieldFilterInternal<TField>(Expression<Func<TaskData, IEnumerable<TField>>>, IList<TField>, Boolean, Expression)
  nameWithType.vb: ExpressionsBuilders.FieldFilterInternal(Of TField)(Expression(Of Func(Of TaskData, IEnumerable(Of TField))), IList(Of TField), Boolean, Expression)
- uid: ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt
  name: MongoQueryableExt
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt
  nameWithType: MongoQueryableExt
- uid: ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.FilterQuery(IMongoQueryable{TaskData},TaskFilter)
  name: FilterQuery(IMongoQueryable<TaskData>, TaskFilter)
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.html#ArmoniK_Core_Adapters_MongoDB_Table_MongoQueryableExt_FilterQuery_IMongoQueryable_TaskData__TaskFilter_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.FilterQuery(IMongoQueryable{TaskData},TaskFilter)
  name.vb: FilterQuery(IMongoQueryable(Of TaskData), TaskFilter)
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.FilterQuery(IMongoQueryable<TaskData>, TaskFilter)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.FilterQuery(IMongoQueryable(Of TaskData), TaskFilter)
  nameWithType: MongoQueryableExt.FilterQuery(IMongoQueryable<TaskData>, TaskFilter)
  nameWithType.vb: MongoQueryableExt.FilterQuery(IMongoQueryable(Of TaskData), TaskFilter)
- uid: ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.FilterQuery*
  name: FilterQuery
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.html#ArmoniK_Core_Adapters_MongoDB_Table_MongoQueryableExt_FilterQuery_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.FilterQuery
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.MongoQueryableExt.FilterQuery
  nameWithType: MongoQueryableExt.FilterQuery
- uid: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt
  name: TaskFilterExt
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt
  nameWithType: TaskFilterExt
- uid: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.FilterQuery(IQueryable{TaskData},TaskFilter)
  name: FilterQuery(IQueryable<TaskData>, TaskFilter)
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.html#ArmoniK_Core_Adapters_MongoDB_Table_TaskFilterExt_FilterQuery_IQueryable_TaskData__TaskFilter_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.FilterQuery(IQueryable{TaskData},TaskFilter)
  name.vb: FilterQuery(IQueryable(Of TaskData), TaskFilter)
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.FilterQuery(IQueryable<TaskData>, TaskFilter)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.FilterQuery(IQueryable(Of TaskData), TaskFilter)
  nameWithType: TaskFilterExt.FilterQuery(IQueryable<TaskData>, TaskFilter)
  nameWithType.vb: TaskFilterExt.FilterQuery(IQueryable(Of TaskData), TaskFilter)
- uid: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.FilterQuery*
  name: FilterQuery
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.html#ArmoniK_Core_Adapters_MongoDB_Table_TaskFilterExt_FilterQuery_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.FilterQuery
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.FilterQuery
  nameWithType: TaskFilterExt.FilterQuery
- uid: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.ToFilterExpression(TaskFilter)
  name: ToFilterExpression(TaskFilter)
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.html#ArmoniK_Core_Adapters_MongoDB_Table_TaskFilterExt_ToFilterExpression_TaskFilter_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.ToFilterExpression(TaskFilter)
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.ToFilterExpression(TaskFilter)
  nameWithType: TaskFilterExt.ToFilterExpression(TaskFilter)
- uid: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.ToFilterExpression*
  name: ToFilterExpression
  href: api/ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.html#ArmoniK_Core_Adapters_MongoDB_Table_TaskFilterExt_ToFilterExpression_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.ToFilterExpression
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Table.TaskFilterExt.ToFilterExpression
  nameWithType: TaskFilterExt.ToFilterExpression
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable
  name: TaskTable
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.TaskTable
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable
  nameWithType: TaskTable
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{TaskData,ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping},ILogger{ArmoniK.Core.Adapters.MongoDB.TaskTable},ActivitySource,ArmoniK.Core.Adapters.MongoDB.Options.TableStorage)
  name: TaskTable(SessionProvider, MongoCollectionProvider<TaskData, TaskDataModelMapping>, ILogger<TaskTable>, ActivitySource, TableStorage)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable__ctor_ArmoniK_Core_Adapters_MongoDB_Common_SessionProvider_ArmoniK_Core_Adapters_MongoDB_Common_MongoCollectionProvider_TaskData_ArmoniK_Core_Adapters_MongoDB_Table_DataModel_TaskDataModelMapping__ILogger_ArmoniK_Core_Adapters_MongoDB_TaskTable__ActivitySource_ArmoniK_Core_Adapters_MongoDB_Options_TableStorage_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.#ctor(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider,ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider{TaskData,ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping},ILogger{ArmoniK.Core.Adapters.MongoDB.TaskTable},ActivitySource,ArmoniK.Core.Adapters.MongoDB.Options.TableStorage)
  name.vb: TaskTable(SessionProvider, MongoCollectionProvider(Of TaskData, TaskDataModelMapping), ILogger(Of TaskTable), ActivitySource, TableStorage)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.TaskTable(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider<TaskData, ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping>, ILogger<ArmoniK.Core.Adapters.MongoDB.TaskTable>, ActivitySource, ArmoniK.Core.Adapters.MongoDB.Options.TableStorage)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.TaskTable.TaskTable(ArmoniK.Core.Adapters.MongoDB.Common.SessionProvider, ArmoniK.Core.Adapters.MongoDB.Common.MongoCollectionProvider(Of TaskData, ArmoniK.Core.Adapters.MongoDB.Table.DataModel.TaskDataModelMapping), ILogger(Of ArmoniK.Core.Adapters.MongoDB.TaskTable), ActivitySource, ArmoniK.Core.Adapters.MongoDB.Options.TableStorage)
  nameWithType: TaskTable.TaskTable(SessionProvider, MongoCollectionProvider<TaskData, TaskDataModelMapping>, ILogger<TaskTable>, ActivitySource, TableStorage)
  nameWithType.vb: TaskTable.TaskTable(SessionProvider, MongoCollectionProvider(Of TaskData, TaskDataModelMapping), ILogger(Of TaskTable), ActivitySource, TableStorage)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.#ctor*
  name: TaskTable
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.TaskTable
  nameWithType: TaskTable.TaskTable
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  name: CancelDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CancelDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: TaskTable.CancelDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelDispatchAsync*
  name: CancelDispatchAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CancelDispatchAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelDispatchAsync
  nameWithType: TaskTable.CancelDispatchAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelSessionAsync(System.String,CancellationToken)
  name: CancelSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CancelSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelSessionAsync(System.String, CancellationToken)
  nameWithType: TaskTable.CancelSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelSessionAsync*
  name: CancelSessionAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CancelSessionAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CancelSessionAsync
  nameWithType: TaskTable.CancelSessionAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.ChangeTaskDispatch(System.String,System.String,CancellationToken)
  name: ChangeTaskDispatch(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_ChangeTaskDispatch_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.ChangeTaskDispatch(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.ChangeTaskDispatch(System.String, System.String, CancellationToken)
  nameWithType: TaskTable.ChangeTaskDispatch(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.ChangeTaskDispatch*
  name: ChangeTaskDispatch
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_ChangeTaskDispatch_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.ChangeTaskDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.ChangeTaskDispatch
  nameWithType: TaskTable.ChangeTaskDispatch
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: TaskTable.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_Check_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.Check
  nameWithType: TaskTable.Check
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: CountAllTasksAsync(TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CountAllTasksAsync_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: TaskTable.CountAllTasksAsync(TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CountAllTasksAsync*
  name: CountAllTasksAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CountAllTasksAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.CountAllTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CountAllTasksAsync
  nameWithType: TaskTable.CountAllTasksAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CountTasksAsync(TaskFilter,CancellationToken)
  name: CountTasksAsync(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CountTasksAsync_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.CountTasksAsync(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CountTasksAsync(TaskFilter, CancellationToken)
  nameWithType: TaskTable.CountTasksAsync(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CountTasksAsync*
  name: CountTasksAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CountTasksAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.CountTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CountTasksAsync
  nameWithType: TaskTable.CountTasksAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CreateTasks(IEnumerable{TaskData},CancellationToken)
  name: CreateTasks(IEnumerable<TaskData>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CreateTasks_IEnumerable_TaskData__CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.CreateTasks(IEnumerable{TaskData},CancellationToken)
  name.vb: CreateTasks(IEnumerable(Of TaskData), CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CreateTasks(IEnumerable<TaskData>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.MongoDB.TaskTable.CreateTasks(IEnumerable(Of TaskData), CancellationToken)
  nameWithType: TaskTable.CreateTasks(IEnumerable<TaskData>, CancellationToken)
  nameWithType.vb: TaskTable.CreateTasks(IEnumerable(Of TaskData), CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.CreateTasks*
  name: CreateTasks
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_CreateTasks_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.CreateTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.CreateTasks
  nameWithType: TaskTable.CreateTasks
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.DeleteTaskAsync(System.String,CancellationToken)
  name: DeleteTaskAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_DeleteTaskAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.DeleteTaskAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.DeleteTaskAsync(System.String, CancellationToken)
  nameWithType: TaskTable.DeleteTaskAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.DeleteTaskAsync*
  name: DeleteTaskAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_DeleteTaskAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.DeleteTaskAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.DeleteTaskAsync
  nameWithType: TaskTable.DeleteTaskAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskAncestorDispatchIds(System.String,CancellationToken)
  name: GetTaskAncestorDispatchIds(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskAncestorDispatchIds_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskAncestorDispatchIds(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskAncestorDispatchIds(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskAncestorDispatchIds(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskAncestorDispatchIds*
  name: GetTaskAncestorDispatchIds
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskAncestorDispatchIds_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskAncestorDispatchIds
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskAncestorDispatchIds
  nameWithType: TaskTable.GetTaskAncestorDispatchIds
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskDispatchId(System.String,CancellationToken)
  name: GetTaskDispatchId(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskDispatchId_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskDispatchId(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskDispatchId(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskDispatchId(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskDispatchId*
  name: GetTaskDispatchId
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskDispatchId_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskDispatchId
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskDispatchId
  nameWithType: TaskTable.GetTaskDispatchId
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskExpectedOutputKeys(System.String,CancellationToken)
  name: GetTaskExpectedOutputKeys(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskExpectedOutputKeys_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskExpectedOutputKeys(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskExpectedOutputKeys(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskExpectedOutputKeys(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskExpectedOutputKeys*
  name: GetTaskExpectedOutputKeys
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskExpectedOutputKeys_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskExpectedOutputKeys
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskExpectedOutputKeys
  nameWithType: TaskTable.GetTaskExpectedOutputKeys
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskOutput(System.String,CancellationToken)
  name: GetTaskOutput(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskOutput_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskOutput(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskOutput(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskOutput(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskOutput*
  name: GetTaskOutput
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskOutput_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskOutput
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskOutput
  nameWithType: TaskTable.GetTaskOutput
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskStatus(System.String,CancellationToken)
  name: GetTaskStatus(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskStatus_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskStatus(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskStatus(System.String, CancellationToken)
  nameWithType: TaskTable.GetTaskStatus(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskStatus*
  name: GetTaskStatus
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_GetTaskStatus_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskStatus
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.GetTaskStatus
  nameWithType: TaskTable.GetTaskStatus
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.Init(CancellationToken)
  nameWithType: TaskTable.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_Init_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.Init
  nameWithType: TaskTable.Init
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.IsTaskCancelledAsync(System.String,CancellationToken)
  name: IsTaskCancelledAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_IsTaskCancelledAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.IsTaskCancelledAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.IsTaskCancelledAsync(System.String, CancellationToken)
  nameWithType: TaskTable.IsTaskCancelledAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.IsTaskCancelledAsync*
  name: IsTaskCancelledAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_IsTaskCancelledAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.IsTaskCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.IsTaskCancelledAsync
  nameWithType: TaskTable.IsTaskCancelledAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.ListTasksAsync(TaskFilter,CancellationToken)
  name: ListTasksAsync(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_ListTasksAsync_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.ListTasksAsync(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.ListTasksAsync(TaskFilter, CancellationToken)
  nameWithType: TaskTable.ListTasksAsync(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.ListTasksAsync*
  name: ListTasksAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_ListTasksAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.ListTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.ListTasksAsync
  nameWithType: TaskTable.ListTasksAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_Logger
  commentId: P:ArmoniK.Core.Adapters.MongoDB.TaskTable.Logger
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.Logger
  nameWithType: TaskTable.Logger
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_Logger_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.Logger
  nameWithType: TaskTable.Logger
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMax
  name: PollingDelayMax
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_PollingDelayMax
  commentId: P:ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMax
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMax
  nameWithType: TaskTable.PollingDelayMax
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMax*
  name: PollingDelayMax
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_PollingDelayMax_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMax
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMax
  nameWithType: TaskTable.PollingDelayMax
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMin
  name: PollingDelayMin
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_PollingDelayMin
  commentId: P:ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMin
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMin
  nameWithType: TaskTable.PollingDelayMin
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMin*
  name: PollingDelayMin
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_PollingDelayMin_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMin
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.PollingDelayMin
  nameWithType: TaskTable.PollingDelayMin
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.ReadTaskAsync(System.String,CancellationToken)
  name: ReadTaskAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_ReadTaskAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.ReadTaskAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.ReadTaskAsync(System.String, CancellationToken)
  nameWithType: TaskTable.ReadTaskAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.ReadTaskAsync*
  name: ReadTaskAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_ReadTaskAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.ReadTaskAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.ReadTaskAsync
  nameWithType: TaskTable.ReadTaskAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskErrorAsync(System.String,System.String,CancellationToken)
  name: SetTaskErrorAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_SetTaskErrorAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskErrorAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskErrorAsync(System.String, System.String, CancellationToken)
  nameWithType: TaskTable.SetTaskErrorAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskErrorAsync*
  name: SetTaskErrorAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_SetTaskErrorAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskErrorAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskErrorAsync
  nameWithType: TaskTable.SetTaskErrorAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskSuccessAsync(System.String,CancellationToken)
  name: SetTaskSuccessAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_SetTaskSuccessAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskSuccessAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskSuccessAsync(System.String, CancellationToken)
  nameWithType: TaskTable.SetTaskSuccessAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskSuccessAsync*
  name: SetTaskSuccessAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_SetTaskSuccessAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskSuccessAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.SetTaskSuccessAsync
  nameWithType: TaskTable.SetTaskSuccessAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateAllTaskStatusAsync(TaskFilter,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: UpdateAllTaskStatusAsync(TaskFilter, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_UpdateAllTaskStatusAsync_TaskFilter_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateAllTaskStatusAsync(TaskFilter,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateAllTaskStatusAsync(TaskFilter, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: TaskTable.UpdateAllTaskStatusAsync(TaskFilter, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateAllTaskStatusAsync*
  name: UpdateAllTaskStatusAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_UpdateAllTaskStatusAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateAllTaskStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateAllTaskStatusAsync
  nameWithType: TaskTable.UpdateAllTaskStatusAsync
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_UpdateTaskStatusAsync_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateTaskStatusAsync(System.String, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: TaskTable.UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateTaskStatusAsync*
  name: UpdateTaskStatusAsync
  href: api/ArmoniK.Core.Adapters.MongoDB.TaskTable.html#ArmoniK_Core_Adapters_MongoDB_TaskTable_UpdateTaskStatusAsync_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateTaskStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.TaskTable.UpdateTaskStatusAsync
  nameWithType: TaskTable.UpdateTaskStatusAsync
- uid: ArmoniK.Core.Adapters.MongoDB.Tests
  name: ArmoniK.Core.Adapters.MongoDB.Tests
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.html
  commentId: N:ArmoniK.Core.Adapters.MongoDB.Tests
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests
  nameWithType: ArmoniK.Core.Adapters.MongoDB.Tests
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests
  name: DispatchTableTests
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests
  nameWithType: DispatchTableTests
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.GetDispatchTableInstance
  name: GetDispatchTableInstance()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_DispatchTableTests_GetDispatchTableInstance
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.GetDispatchTableInstance
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.GetDispatchTableInstance()
  nameWithType: DispatchTableTests.GetDispatchTableInstance()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.GetDispatchTableInstance*
  name: GetDispatchTableInstance
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_DispatchTableTests_GetDispatchTableInstance_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.GetDispatchTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.GetDispatchTableInstance
  nameWithType: DispatchTableTests.GetDispatchTableInstance
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_DispatchTableTests_TearDown
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.TearDown
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.TearDown()
  nameWithType: DispatchTableTests.TearDown()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_DispatchTableTests_TearDown_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.DispatchTableTests.TearDown
  nameWithType: DispatchTableTests.TearDown
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests
  name: ObjectStorageTests
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests
  nameWithType: ObjectStorageTests
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.GetObjectStorageInstance
  name: GetObjectStorageInstance()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_ObjectStorageTests_GetObjectStorageInstance
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.GetObjectStorageInstance
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.GetObjectStorageInstance()
  nameWithType: ObjectStorageTests.GetObjectStorageInstance()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.GetObjectStorageInstance*
  name: GetObjectStorageInstance
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_ObjectStorageTests_GetObjectStorageInstance_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.GetObjectStorageInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.GetObjectStorageInstance
  nameWithType: ObjectStorageTests.GetObjectStorageInstance
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_ObjectStorageTests_TearDown
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.TearDown
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.TearDown()
  nameWithType: ObjectStorageTests.TearDown()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_ObjectStorageTests_TearDown_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ObjectStorageTests.TearDown
  nameWithType: ObjectStorageTests.TearDown
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests
  name: ResultTableTests
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests
  nameWithType: ResultTableTests
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.GetResultTableInstance
  name: GetResultTableInstance()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_ResultTableTests_GetResultTableInstance
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.GetResultTableInstance
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.GetResultTableInstance()
  nameWithType: ResultTableTests.GetResultTableInstance()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.GetResultTableInstance*
  name: GetResultTableInstance
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_ResultTableTests_GetResultTableInstance_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.GetResultTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.GetResultTableInstance
  nameWithType: ResultTableTests.GetResultTableInstance
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_ResultTableTests_TearDown
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.TearDown
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.TearDown()
  nameWithType: ResultTableTests.TearDown()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_ResultTableTests_TearDown_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.ResultTableTests.TearDown
  nameWithType: ResultTableTests.TearDown
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests
  name: SessionTableTests
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests
  nameWithType: SessionTableTests
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.GetSessionTableInstance
  name: GetSessionTableInstance()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_SessionTableTests_GetSessionTableInstance
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.GetSessionTableInstance
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.GetSessionTableInstance()
  nameWithType: SessionTableTests.GetSessionTableInstance()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.GetSessionTableInstance*
  name: GetSessionTableInstance
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_SessionTableTests_GetSessionTableInstance_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.GetSessionTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.GetSessionTableInstance
  nameWithType: SessionTableTests.GetSessionTableInstance
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_SessionTableTests_TearDown
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.TearDown
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.TearDown()
  nameWithType: SessionTableTests.TearDown()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_SessionTableTests_TearDown_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.SessionTableTests.TearDown
  nameWithType: SessionTableTests.TearDown
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests
  name: TaskTableTests
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.html
  commentId: T:ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests
  nameWithType: TaskTableTests
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.GetTaskTableInstance
  name: GetTaskTableInstance()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_TaskTableTests_GetTaskTableInstance
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.GetTaskTableInstance
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.GetTaskTableInstance()
  nameWithType: TaskTableTests.GetTaskTableInstance()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.GetTaskTableInstance*
  name: GetTaskTableInstance
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_TaskTableTests_GetTaskTableInstance_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.GetTaskTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.GetTaskTableInstance
  nameWithType: TaskTableTests.GetTaskTableInstance
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_TaskTableTests_TearDown
  commentId: M:ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.TearDown
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.TearDown()
  nameWithType: TaskTableTests.TearDown()
- uid: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.html#ArmoniK_Core_Adapters_MongoDB_Tests_TaskTableTests_TearDown_
  commentId: Overload:ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.MongoDB.Tests.TaskTableTests.TearDown
  nameWithType: TaskTableTests.TearDown
- uid: ArmoniK.Core.Adapters.Redis
  name: ArmoniK.Core.Adapters.Redis
  href: api/ArmoniK.Core.Adapters.Redis.html
  commentId: N:ArmoniK.Core.Adapters.Redis
  fullName: ArmoniK.Core.Adapters.Redis
  nameWithType: ArmoniK.Core.Adapters.Redis
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage
  name: ObjectStorage
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html
  commentId: T:ArmoniK.Core.Adapters.Redis.ObjectStorage
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage
  nameWithType: ObjectStorage
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.#ctor(IDatabaseAsync,System.String,ILogger{ArmoniK.Core.Adapters.Redis.ObjectStorage})
  name: ObjectStorage(IDatabaseAsync, String, ILogger<ObjectStorage>)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage__ctor_IDatabaseAsync_System_String_ILogger_ArmoniK_Core_Adapters_Redis_ObjectStorage__
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorage.#ctor(IDatabaseAsync,System.String,ILogger{ArmoniK.Core.Adapters.Redis.ObjectStorage})
  name.vb: ObjectStorage(IDatabaseAsync, String, ILogger(Of ObjectStorage))
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.ObjectStorage(IDatabaseAsync, System.String, ILogger<ArmoniK.Core.Adapters.Redis.ObjectStorage>)
  fullName.vb: ArmoniK.Core.Adapters.Redis.ObjectStorage.ObjectStorage(IDatabaseAsync, System.String, ILogger(Of ArmoniK.Core.Adapters.Redis.ObjectStorage))
  nameWithType: ObjectStorage.ObjectStorage(IDatabaseAsync, String, ILogger<ObjectStorage>)
  nameWithType.vb: ObjectStorage.ObjectStorage(IDatabaseAsync, String, ILogger(Of ObjectStorage))
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.#ctor*
  name: ObjectStorage
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorage.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.ObjectStorage
  nameWithType: ObjectStorage.ObjectStorage
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{ReadOnlyMemory{System.Byte}},CancellationToken)
  name: AddOrUpdateAsync(String, IAsyncEnumerable<ReadOnlyMemory<Byte>>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_AddOrUpdateAsync_System_String_IAsyncEnumerable_ReadOnlyMemory_System_Byte___CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{ReadOnlyMemory{System.Byte}},CancellationToken)
  name.vb: AddOrUpdateAsync(String, IAsyncEnumerable(Of ReadOnlyMemory(Of Byte)), CancellationToken)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable<ReadOnlyMemory<System.Byte>>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable(Of ReadOnlyMemory(Of System.Byte)), CancellationToken)
  nameWithType: ObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable<ReadOnlyMemory<Byte>>, CancellationToken)
  nameWithType.vb: ObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable(Of ReadOnlyMemory(Of Byte)), CancellationToken)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{System.Byte[]},CancellationToken)
  name: AddOrUpdateAsync(String, IAsyncEnumerable<Byte[]>, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_AddOrUpdateAsync_System_String_IAsyncEnumerable_System_Byte____CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{System.Byte[]},CancellationToken)
  name.vb: AddOrUpdateAsync(String, IAsyncEnumerable(Of Byte()), CancellationToken)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable<System.Byte[]>, CancellationToken)
  fullName.vb: ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable(Of System.Byte()), CancellationToken)
  nameWithType: ObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable<Byte[]>, CancellationToken)
  nameWithType.vb: ObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable(Of Byte()), CancellationToken)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_AddOrUpdateAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.AddOrUpdateAsync
  nameWithType: ObjectStorage.AddOrUpdateAsync
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.GetValuesAsync(System.String,CancellationToken)
  name: GetValuesAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_GetValuesAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorage.GetValuesAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.GetValuesAsync(System.String, CancellationToken)
  nameWithType: ObjectStorage.GetValuesAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.GetValuesAsync*
  name: GetValuesAsync
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_GetValuesAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorage.GetValuesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.GetValuesAsync
  nameWithType: ObjectStorage.GetValuesAsync
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.ListKeysAsync(CancellationToken)
  name: ListKeysAsync(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_ListKeysAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorage.ListKeysAsync(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.ListKeysAsync(CancellationToken)
  nameWithType: ObjectStorage.ListKeysAsync(CancellationToken)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.ListKeysAsync*
  name: ListKeysAsync
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_ListKeysAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorage.ListKeysAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.ListKeysAsync
  nameWithType: ObjectStorage.ListKeysAsync
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.TryDeleteAsync(System.String,CancellationToken)
  name: TryDeleteAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_TryDeleteAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorage.TryDeleteAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.TryDeleteAsync(System.String, CancellationToken)
  nameWithType: ObjectStorage.TryDeleteAsync(String, CancellationToken)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorage.TryDeleteAsync*
  name: TryDeleteAsync
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorage.html#ArmoniK_Core_Adapters_Redis_ObjectStorage_TryDeleteAsync_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorage.TryDeleteAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorage.TryDeleteAsync
  nameWithType: ObjectStorage.TryDeleteAsync
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory
  name: ObjectStorageFactory
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html
  commentId: T:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory
  nameWithType: ObjectStorageFactory
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.#ctor(IDatabaseAsync,ILoggerFactory)
  name: ObjectStorageFactory(IDatabaseAsync, ILoggerFactory)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html#ArmoniK_Core_Adapters_Redis_ObjectStorageFactory__ctor_IDatabaseAsync_ILoggerFactory_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.#ctor(IDatabaseAsync,ILoggerFactory)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.ObjectStorageFactory(IDatabaseAsync, ILoggerFactory)
  nameWithType: ObjectStorageFactory.ObjectStorageFactory(IDatabaseAsync, ILoggerFactory)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.#ctor*
  name: ObjectStorageFactory
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html#ArmoniK_Core_Adapters_Redis_ObjectStorageFactory__ctor_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.ObjectStorageFactory
  nameWithType: ObjectStorageFactory.ObjectStorageFactory
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html#ArmoniK_Core_Adapters_Redis_ObjectStorageFactory_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: ObjectStorageFactory.Check(HealthCheckTag)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Check*
  name: Check
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html#ArmoniK_Core_Adapters_Redis_ObjectStorageFactory_Check_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Check
  nameWithType: ObjectStorageFactory.Check
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.CreateObjectStorage(System.String)
  name: CreateObjectStorage(String)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html#ArmoniK_Core_Adapters_Redis_ObjectStorageFactory_CreateObjectStorage_System_String_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.CreateObjectStorage(System.String)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.CreateObjectStorage(System.String)
  nameWithType: ObjectStorageFactory.CreateObjectStorage(String)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.CreateObjectStorage*
  name: CreateObjectStorage
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html#ArmoniK_Core_Adapters_Redis_ObjectStorageFactory_CreateObjectStorage_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.CreateObjectStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.CreateObjectStorage
  nameWithType: ObjectStorageFactory.CreateObjectStorage
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html#ArmoniK_Core_Adapters_Redis_ObjectStorageFactory_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Init(CancellationToken)
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Init(CancellationToken)
  nameWithType: ObjectStorageFactory.Init(CancellationToken)
- uid: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Init*
  name: Init
  href: api/ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.html#ArmoniK_Core_Adapters_Redis_ObjectStorageFactory_Init_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ObjectStorageFactory.Init
  nameWithType: ObjectStorageFactory.Init
- uid: ArmoniK.Core.Adapters.Redis.ServiceCollectionExt
  name: ServiceCollectionExt
  href: api/ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.html
  commentId: T:ArmoniK.Core.Adapters.Redis.ServiceCollectionExt
  fullName: ArmoniK.Core.Adapters.Redis.ServiceCollectionExt
  nameWithType: ServiceCollectionExt
- uid: ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.AddRedis(IServiceCollection,ConfigurationManager,ILogger)
  name: AddRedis(IServiceCollection, ConfigurationManager, ILogger)
  href: api/ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.html#ArmoniK_Core_Adapters_Redis_ServiceCollectionExt_AddRedis_IServiceCollection_ConfigurationManager_ILogger_
  commentId: M:ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.AddRedis(IServiceCollection,ConfigurationManager,ILogger)
  fullName: ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.AddRedis(IServiceCollection, ConfigurationManager, ILogger)
  nameWithType: ServiceCollectionExt.AddRedis(IServiceCollection, ConfigurationManager, ILogger)
- uid: ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.AddRedis*
  name: AddRedis
  href: api/ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.html#ArmoniK_Core_Adapters_Redis_ServiceCollectionExt_AddRedis_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.AddRedis
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.ServiceCollectionExt.AddRedis
  nameWithType: ServiceCollectionExt.AddRedis
- uid: ArmoniK.Core.Adapters.Redis.Tests
  name: ArmoniK.Core.Adapters.Redis.Tests
  href: api/ArmoniK.Core.Adapters.Redis.Tests.html
  commentId: N:ArmoniK.Core.Adapters.Redis.Tests
  fullName: ArmoniK.Core.Adapters.Redis.Tests
  nameWithType: ArmoniK.Core.Adapters.Redis.Tests
- uid: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests
  name: ObjectStorageTests
  href: api/ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.html
  commentId: T:ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests
  fullName: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests
  nameWithType: ObjectStorageTests
- uid: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.GetObjectStorageInstance
  name: GetObjectStorageInstance()
  href: api/ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.html#ArmoniK_Core_Adapters_Redis_Tests_ObjectStorageTests_GetObjectStorageInstance
  commentId: M:ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.GetObjectStorageInstance
  fullName: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.GetObjectStorageInstance()
  nameWithType: ObjectStorageTests.GetObjectStorageInstance()
- uid: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.GetObjectStorageInstance*
  name: GetObjectStorageInstance
  href: api/ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.html#ArmoniK_Core_Adapters_Redis_Tests_ObjectStorageTests_GetObjectStorageInstance_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.GetObjectStorageInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.GetObjectStorageInstance
  nameWithType: ObjectStorageTests.GetObjectStorageInstance
- uid: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.html#ArmoniK_Core_Adapters_Redis_Tests_ObjectStorageTests_TearDown
  commentId: M:ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.TearDown
  fullName: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.TearDown()
  nameWithType: ObjectStorageTests.TearDown()
- uid: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.html#ArmoniK_Core_Adapters_Redis_Tests_ObjectStorageTests_TearDown_
  commentId: Overload:ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Adapters.Redis.Tests.ObjectStorageTests.TearDown
  nameWithType: ObjectStorageTests.TearDown
- uid: ArmoniK.Core.Common
  name: ArmoniK.Core.Common
  href: api/ArmoniK.Core.Common.html
  commentId: N:ArmoniK.Core.Common
  fullName: ArmoniK.Core.Common
  nameWithType: ArmoniK.Core.Common
- uid: ArmoniK.Core.Common.Exceptions
  name: ArmoniK.Core.Common.Exceptions
  href: api/ArmoniK.Core.Common.Exceptions.html
  commentId: N:ArmoniK.Core.Common.Exceptions
  fullName: ArmoniK.Core.Common.Exceptions
  nameWithType: ArmoniK.Core.Common.Exceptions
- uid: ArmoniK.Core.Common.Exceptions.AppSettingsException
  name: AppSettingsException
  href: api/ArmoniK.Core.Common.Exceptions.AppSettingsException.html
  commentId: T:ArmoniK.Core.Common.Exceptions.AppSettingsException
  fullName: ArmoniK.Core.Common.Exceptions.AppSettingsException
  nameWithType: AppSettingsException
- uid: ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor
  name: AppSettingsException()
  href: api/ArmoniK.Core.Common.Exceptions.AppSettingsException.html#ArmoniK_Core_Common_Exceptions_AppSettingsException__ctor
  commentId: M:ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor
  fullName: ArmoniK.Core.Common.Exceptions.AppSettingsException.AppSettingsException()
  nameWithType: AppSettingsException.AppSettingsException()
- uid: ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor(SerializationInfo,StreamingContext)
  name: AppSettingsException(SerializationInfo, StreamingContext)
  href: api/ArmoniK.Core.Common.Exceptions.AppSettingsException.html#ArmoniK_Core_Common_Exceptions_AppSettingsException__ctor_SerializationInfo_StreamingContext_
  commentId: M:ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor(SerializationInfo,StreamingContext)
  fullName: ArmoniK.Core.Common.Exceptions.AppSettingsException.AppSettingsException(SerializationInfo, StreamingContext)
  nameWithType: AppSettingsException.AppSettingsException(SerializationInfo, StreamingContext)
- uid: ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor(System.String)
  name: AppSettingsException(String)
  href: api/ArmoniK.Core.Common.Exceptions.AppSettingsException.html#ArmoniK_Core_Common_Exceptions_AppSettingsException__ctor_System_String_
  commentId: M:ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor(System.String)
  fullName: ArmoniK.Core.Common.Exceptions.AppSettingsException.AppSettingsException(System.String)
  nameWithType: AppSettingsException.AppSettingsException(String)
- uid: ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor(System.String,Exception)
  name: AppSettingsException(String, Exception)
  href: api/ArmoniK.Core.Common.Exceptions.AppSettingsException.html#ArmoniK_Core_Common_Exceptions_AppSettingsException__ctor_System_String_Exception_
  commentId: M:ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor(System.String,Exception)
  fullName: ArmoniK.Core.Common.Exceptions.AppSettingsException.AppSettingsException(System.String, Exception)
  nameWithType: AppSettingsException.AppSettingsException(String, Exception)
- uid: ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor*
  name: AppSettingsException
  href: api/ArmoniK.Core.Common.Exceptions.AppSettingsException.html#ArmoniK_Core_Common_Exceptions_AppSettingsException__ctor_
  commentId: Overload:ArmoniK.Core.Common.Exceptions.AppSettingsException.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Exceptions.AppSettingsException.AppSettingsException
  nameWithType: AppSettingsException.AppSettingsException
- uid: ArmoniK.Core.Common.Exceptions.ArmoniKException
  name: ArmoniKException
  href: api/ArmoniK.Core.Common.Exceptions.ArmoniKException.html
  commentId: T:ArmoniK.Core.Common.Exceptions.ArmoniKException
  fullName: ArmoniK.Core.Common.Exceptions.ArmoniKException
  nameWithType: ArmoniKException
- uid: ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor
  name: ArmoniKException()
  href: api/ArmoniK.Core.Common.Exceptions.ArmoniKException.html#ArmoniK_Core_Common_Exceptions_ArmoniKException__ctor
  commentId: M:ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor
  fullName: ArmoniK.Core.Common.Exceptions.ArmoniKException.ArmoniKException()
  nameWithType: ArmoniKException.ArmoniKException()
- uid: ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor(SerializationInfo,StreamingContext)
  name: ArmoniKException(SerializationInfo, StreamingContext)
  href: api/ArmoniK.Core.Common.Exceptions.ArmoniKException.html#ArmoniK_Core_Common_Exceptions_ArmoniKException__ctor_SerializationInfo_StreamingContext_
  commentId: M:ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor(SerializationInfo,StreamingContext)
  fullName: ArmoniK.Core.Common.Exceptions.ArmoniKException.ArmoniKException(SerializationInfo, StreamingContext)
  nameWithType: ArmoniKException.ArmoniKException(SerializationInfo, StreamingContext)
- uid: ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor(System.String)
  name: ArmoniKException(String)
  href: api/ArmoniK.Core.Common.Exceptions.ArmoniKException.html#ArmoniK_Core_Common_Exceptions_ArmoniKException__ctor_System_String_
  commentId: M:ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor(System.String)
  fullName: ArmoniK.Core.Common.Exceptions.ArmoniKException.ArmoniKException(System.String)
  nameWithType: ArmoniKException.ArmoniKException(String)
- uid: ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor(System.String,Exception)
  name: ArmoniKException(String, Exception)
  href: api/ArmoniK.Core.Common.Exceptions.ArmoniKException.html#ArmoniK_Core_Common_Exceptions_ArmoniKException__ctor_System_String_Exception_
  commentId: M:ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor(System.String,Exception)
  fullName: ArmoniK.Core.Common.Exceptions.ArmoniKException.ArmoniKException(System.String, Exception)
  nameWithType: ArmoniKException.ArmoniKException(String, Exception)
- uid: ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor*
  name: ArmoniKException
  href: api/ArmoniK.Core.Common.Exceptions.ArmoniKException.html#ArmoniK_Core_Common_Exceptions_ArmoniKException__ctor_
  commentId: Overload:ArmoniK.Core.Common.Exceptions.ArmoniKException.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Exceptions.ArmoniKException.ArmoniKException
  nameWithType: ArmoniKException.ArmoniKException
- uid: ArmoniK.Core.Common.Exceptions.ComputeLibInitException
  name: ComputeLibInitException
  href: api/ArmoniK.Core.Common.Exceptions.ComputeLibInitException.html
  commentId: T:ArmoniK.Core.Common.Exceptions.ComputeLibInitException
  fullName: ArmoniK.Core.Common.Exceptions.ComputeLibInitException
  nameWithType: ComputeLibInitException
- uid: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor
  name: ComputeLibInitException()
  href: api/ArmoniK.Core.Common.Exceptions.ComputeLibInitException.html#ArmoniK_Core_Common_Exceptions_ComputeLibInitException__ctor
  commentId: M:ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor
  fullName: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.ComputeLibInitException()
  nameWithType: ComputeLibInitException.ComputeLibInitException()
- uid: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor(SerializationInfo,StreamingContext)
  name: ComputeLibInitException(SerializationInfo, StreamingContext)
  href: api/ArmoniK.Core.Common.Exceptions.ComputeLibInitException.html#ArmoniK_Core_Common_Exceptions_ComputeLibInitException__ctor_SerializationInfo_StreamingContext_
  commentId: M:ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor(SerializationInfo,StreamingContext)
  fullName: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.ComputeLibInitException(SerializationInfo, StreamingContext)
  nameWithType: ComputeLibInitException.ComputeLibInitException(SerializationInfo, StreamingContext)
- uid: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor(System.String)
  name: ComputeLibInitException(String)
  href: api/ArmoniK.Core.Common.Exceptions.ComputeLibInitException.html#ArmoniK_Core_Common_Exceptions_ComputeLibInitException__ctor_System_String_
  commentId: M:ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor(System.String)
  fullName: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.ComputeLibInitException(System.String)
  nameWithType: ComputeLibInitException.ComputeLibInitException(String)
- uid: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor(System.String,Exception)
  name: ComputeLibInitException(String, Exception)
  href: api/ArmoniK.Core.Common.Exceptions.ComputeLibInitException.html#ArmoniK_Core_Common_Exceptions_ComputeLibInitException__ctor_System_String_Exception_
  commentId: M:ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor(System.String,Exception)
  fullName: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.ComputeLibInitException(System.String, Exception)
  nameWithType: ComputeLibInitException.ComputeLibInitException(String, Exception)
- uid: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor*
  name: ComputeLibInitException
  href: api/ArmoniK.Core.Common.Exceptions.ComputeLibInitException.html#ArmoniK_Core_Common_Exceptions_ComputeLibInitException__ctor_
  commentId: Overload:ArmoniK.Core.Common.Exceptions.ComputeLibInitException.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Exceptions.ComputeLibInitException.ComputeLibInitException
  nameWithType: ComputeLibInitException.ComputeLibInitException
- uid: ArmoniK.Core.Common.Exceptions.KeyNotFoundException
  name: KeyNotFoundException
  href: api/ArmoniK.Core.Common.Exceptions.KeyNotFoundException.html
  commentId: T:ArmoniK.Core.Common.Exceptions.KeyNotFoundException
  fullName: ArmoniK.Core.Common.Exceptions.KeyNotFoundException
  nameWithType: KeyNotFoundException
- uid: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor
  name: KeyNotFoundException()
  href: api/ArmoniK.Core.Common.Exceptions.KeyNotFoundException.html#ArmoniK_Core_Common_Exceptions_KeyNotFoundException__ctor
  commentId: M:ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor
  fullName: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.KeyNotFoundException()
  nameWithType: KeyNotFoundException.KeyNotFoundException()
- uid: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor(SerializationInfo,StreamingContext)
  name: KeyNotFoundException(SerializationInfo, StreamingContext)
  href: api/ArmoniK.Core.Common.Exceptions.KeyNotFoundException.html#ArmoniK_Core_Common_Exceptions_KeyNotFoundException__ctor_SerializationInfo_StreamingContext_
  commentId: M:ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor(SerializationInfo,StreamingContext)
  fullName: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.KeyNotFoundException(SerializationInfo, StreamingContext)
  nameWithType: KeyNotFoundException.KeyNotFoundException(SerializationInfo, StreamingContext)
- uid: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor(System.String)
  name: KeyNotFoundException(String)
  href: api/ArmoniK.Core.Common.Exceptions.KeyNotFoundException.html#ArmoniK_Core_Common_Exceptions_KeyNotFoundException__ctor_System_String_
  commentId: M:ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor(System.String)
  fullName: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.KeyNotFoundException(System.String)
  nameWithType: KeyNotFoundException.KeyNotFoundException(String)
- uid: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor(System.String,Exception)
  name: KeyNotFoundException(String, Exception)
  href: api/ArmoniK.Core.Common.Exceptions.KeyNotFoundException.html#ArmoniK_Core_Common_Exceptions_KeyNotFoundException__ctor_System_String_Exception_
  commentId: M:ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor(System.String,Exception)
  fullName: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.KeyNotFoundException(System.String, Exception)
  nameWithType: KeyNotFoundException.KeyNotFoundException(String, Exception)
- uid: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor*
  name: KeyNotFoundException
  href: api/ArmoniK.Core.Common.Exceptions.KeyNotFoundException.html#ArmoniK_Core_Common_Exceptions_KeyNotFoundException__ctor_
  commentId: Overload:ArmoniK.Core.Common.Exceptions.KeyNotFoundException.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Exceptions.KeyNotFoundException.KeyNotFoundException
  nameWithType: KeyNotFoundException.KeyNotFoundException
- uid: ArmoniK.Core.Common.Exceptions.TaskCanceledException
  name: TaskCanceledException
  href: api/ArmoniK.Core.Common.Exceptions.TaskCanceledException.html
  commentId: T:ArmoniK.Core.Common.Exceptions.TaskCanceledException
  fullName: ArmoniK.Core.Common.Exceptions.TaskCanceledException
  nameWithType: TaskCanceledException
- uid: ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor
  name: TaskCanceledException()
  href: api/ArmoniK.Core.Common.Exceptions.TaskCanceledException.html#ArmoniK_Core_Common_Exceptions_TaskCanceledException__ctor
  commentId: M:ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor
  fullName: ArmoniK.Core.Common.Exceptions.TaskCanceledException.TaskCanceledException()
  nameWithType: TaskCanceledException.TaskCanceledException()
- uid: ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor(SerializationInfo,StreamingContext)
  name: TaskCanceledException(SerializationInfo, StreamingContext)
  href: api/ArmoniK.Core.Common.Exceptions.TaskCanceledException.html#ArmoniK_Core_Common_Exceptions_TaskCanceledException__ctor_SerializationInfo_StreamingContext_
  commentId: M:ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor(SerializationInfo,StreamingContext)
  fullName: ArmoniK.Core.Common.Exceptions.TaskCanceledException.TaskCanceledException(SerializationInfo, StreamingContext)
  nameWithType: TaskCanceledException.TaskCanceledException(SerializationInfo, StreamingContext)
- uid: ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor(System.String)
  name: TaskCanceledException(String)
  href: api/ArmoniK.Core.Common.Exceptions.TaskCanceledException.html#ArmoniK_Core_Common_Exceptions_TaskCanceledException__ctor_System_String_
  commentId: M:ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor(System.String)
  fullName: ArmoniK.Core.Common.Exceptions.TaskCanceledException.TaskCanceledException(System.String)
  nameWithType: TaskCanceledException.TaskCanceledException(String)
- uid: ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor(System.String,Exception)
  name: TaskCanceledException(String, Exception)
  href: api/ArmoniK.Core.Common.Exceptions.TaskCanceledException.html#ArmoniK_Core_Common_Exceptions_TaskCanceledException__ctor_System_String_Exception_
  commentId: M:ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor(System.String,Exception)
  fullName: ArmoniK.Core.Common.Exceptions.TaskCanceledException.TaskCanceledException(System.String, Exception)
  nameWithType: TaskCanceledException.TaskCanceledException(String, Exception)
- uid: ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor*
  name: TaskCanceledException
  href: api/ArmoniK.Core.Common.Exceptions.TaskCanceledException.html#ArmoniK_Core_Common_Exceptions_TaskCanceledException__ctor_
  commentId: Overload:ArmoniK.Core.Common.Exceptions.TaskCanceledException.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Exceptions.TaskCanceledException.TaskCanceledException
  nameWithType: TaskCanceledException.TaskCanceledException
- uid: ArmoniK.Core.Common.Exceptions.TimeoutException
  name: TimeoutException
  href: api/ArmoniK.Core.Common.Exceptions.TimeoutException.html
  commentId: T:ArmoniK.Core.Common.Exceptions.TimeoutException
  fullName: ArmoniK.Core.Common.Exceptions.TimeoutException
  nameWithType: TimeoutException
- uid: ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor
  name: TimeoutException()
  href: api/ArmoniK.Core.Common.Exceptions.TimeoutException.html#ArmoniK_Core_Common_Exceptions_TimeoutException__ctor
  commentId: M:ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor
  fullName: ArmoniK.Core.Common.Exceptions.TimeoutException.TimeoutException()
  nameWithType: TimeoutException.TimeoutException()
- uid: ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor(SerializationInfo,StreamingContext)
  name: TimeoutException(SerializationInfo, StreamingContext)
  href: api/ArmoniK.Core.Common.Exceptions.TimeoutException.html#ArmoniK_Core_Common_Exceptions_TimeoutException__ctor_SerializationInfo_StreamingContext_
  commentId: M:ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor(SerializationInfo,StreamingContext)
  fullName: ArmoniK.Core.Common.Exceptions.TimeoutException.TimeoutException(SerializationInfo, StreamingContext)
  nameWithType: TimeoutException.TimeoutException(SerializationInfo, StreamingContext)
- uid: ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor(System.String)
  name: TimeoutException(String)
  href: api/ArmoniK.Core.Common.Exceptions.TimeoutException.html#ArmoniK_Core_Common_Exceptions_TimeoutException__ctor_System_String_
  commentId: M:ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor(System.String)
  fullName: ArmoniK.Core.Common.Exceptions.TimeoutException.TimeoutException(System.String)
  nameWithType: TimeoutException.TimeoutException(String)
- uid: ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor(System.String,Exception)
  name: TimeoutException(String, Exception)
  href: api/ArmoniK.Core.Common.Exceptions.TimeoutException.html#ArmoniK_Core_Common_Exceptions_TimeoutException__ctor_System_String_Exception_
  commentId: M:ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor(System.String,Exception)
  fullName: ArmoniK.Core.Common.Exceptions.TimeoutException.TimeoutException(System.String, Exception)
  nameWithType: TimeoutException.TimeoutException(String, Exception)
- uid: ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor*
  name: TimeoutException
  href: api/ArmoniK.Core.Common.Exceptions.TimeoutException.html#ArmoniK_Core_Common_Exceptions_TimeoutException__ctor_
  commentId: Overload:ArmoniK.Core.Common.Exceptions.TimeoutException.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Exceptions.TimeoutException.TimeoutException
  nameWithType: TimeoutException.TimeoutException
- uid: ArmoniK.Core.Common.gRPC
  name: ArmoniK.Core.Common.gRPC
  href: api/ArmoniK.Core.Common.gRPC.html
  commentId: N:ArmoniK.Core.Common.gRPC
  fullName: ArmoniK.Core.Common.gRPC
  nameWithType: ArmoniK.Core.Common.gRPC
- uid: ArmoniK.Core.Common.gRPC.GrpcChannelProvider
  name: GrpcChannelProvider
  href: api/ArmoniK.Core.Common.gRPC.GrpcChannelProvider.html
  commentId: T:ArmoniK.Core.Common.gRPC.GrpcChannelProvider
  fullName: ArmoniK.Core.Common.gRPC.GrpcChannelProvider
  nameWithType: GrpcChannelProvider
- uid: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.#ctor(ArmoniK.Core.Common.Injection.Options.GrpcChannel,ILogger{ArmoniK.Core.Common.gRPC.GrpcChannelProvider})
  name: GrpcChannelProvider(GrpcChannel, ILogger<GrpcChannelProvider>)
  href: api/ArmoniK.Core.Common.gRPC.GrpcChannelProvider.html#ArmoniK_Core_Common_gRPC_GrpcChannelProvider__ctor_ArmoniK_Core_Common_Injection_Options_GrpcChannel_ILogger_ArmoniK_Core_Common_gRPC_GrpcChannelProvider__
  commentId: M:ArmoniK.Core.Common.gRPC.GrpcChannelProvider.#ctor(ArmoniK.Core.Common.Injection.Options.GrpcChannel,ILogger{ArmoniK.Core.Common.gRPC.GrpcChannelProvider})
  name.vb: GrpcChannelProvider(GrpcChannel, ILogger(Of GrpcChannelProvider))
  fullName: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.GrpcChannelProvider(ArmoniK.Core.Common.Injection.Options.GrpcChannel, ILogger<ArmoniK.Core.Common.gRPC.GrpcChannelProvider>)
  fullName.vb: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.GrpcChannelProvider(ArmoniK.Core.Common.Injection.Options.GrpcChannel, ILogger(Of ArmoniK.Core.Common.gRPC.GrpcChannelProvider))
  nameWithType: GrpcChannelProvider.GrpcChannelProvider(GrpcChannel, ILogger<GrpcChannelProvider>)
  nameWithType.vb: GrpcChannelProvider.GrpcChannelProvider(GrpcChannel, ILogger(Of GrpcChannelProvider))
- uid: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.#ctor*
  name: GrpcChannelProvider
  href: api/ArmoniK.Core.Common.gRPC.GrpcChannelProvider.html#ArmoniK_Core_Common_gRPC_GrpcChannelProvider__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.GrpcChannelProvider.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.GrpcChannelProvider
  nameWithType: GrpcChannelProvider.GrpcChannelProvider
- uid: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Common.gRPC.GrpcChannelProvider.html#ArmoniK_Core_Common_gRPC_GrpcChannelProvider_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.gRPC.GrpcChannelProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: GrpcChannelProvider.Check(HealthCheckTag)
- uid: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.Check*
  name: Check
  href: api/ArmoniK.Core.Common.gRPC.GrpcChannelProvider.html#ArmoniK_Core_Common_gRPC_GrpcChannelProvider_Check_
  commentId: Overload:ArmoniK.Core.Common.gRPC.GrpcChannelProvider.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.GrpcChannelProvider.Check
  nameWithType: GrpcChannelProvider.Check
- uid: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase
  name: GrpcHealthCheckServiceBase
  href: api/ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.html
  commentId: T:ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase
  fullName: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase
  nameWithType: GrpcHealthCheckServiceBase
- uid: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.#ctor(HealthCheckService,System.String[])
  name: GrpcHealthCheckServiceBase(HealthCheckService, String[])
  href: api/ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.html#ArmoniK_Core_Common_gRPC_GrpcHealthCheckServiceBase__ctor_HealthCheckService_System_String___
  commentId: M:ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.#ctor(HealthCheckService,System.String[])
  name.vb: GrpcHealthCheckServiceBase(HealthCheckService, String())
  fullName: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.GrpcHealthCheckServiceBase(HealthCheckService, System.String[])
  fullName.vb: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.GrpcHealthCheckServiceBase(HealthCheckService, System.String())
  nameWithType: GrpcHealthCheckServiceBase.GrpcHealthCheckServiceBase(HealthCheckService, String[])
  nameWithType.vb: GrpcHealthCheckServiceBase.GrpcHealthCheckServiceBase(HealthCheckService, String())
- uid: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.#ctor*
  name: GrpcHealthCheckServiceBase
  href: api/ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.html#ArmoniK_Core_Common_gRPC_GrpcHealthCheckServiceBase__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.GrpcHealthCheckServiceBase
  nameWithType: GrpcHealthCheckServiceBase.GrpcHealthCheckServiceBase
- uid: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.Check(HealthCheckRequest,ServerCallContext)
  name: Check(HealthCheckRequest, ServerCallContext)
  href: api/ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.html#ArmoniK_Core_Common_gRPC_GrpcHealthCheckServiceBase_Check_HealthCheckRequest_ServerCallContext_
  commentId: M:ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.Check(HealthCheckRequest,ServerCallContext)
  fullName: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.Check(HealthCheckRequest, ServerCallContext)
  nameWithType: GrpcHealthCheckServiceBase.Check(HealthCheckRequest, ServerCallContext)
- uid: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.Check*
  name: Check
  href: api/ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.html#ArmoniK_Core_Common_gRPC_GrpcHealthCheckServiceBase_Check_
  commentId: Overload:ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.GrpcHealthCheckServiceBase.Check
  nameWithType: GrpcHealthCheckServiceBase.Check
- uid: ArmoniK.Core.Common.gRPC.RpcExt
  name: RpcExt
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html
  commentId: T:ArmoniK.Core.Common.gRPC.RpcExt
  fullName: ArmoniK.Core.Common.gRPC.RpcExt
  nameWithType: RpcExt
- uid: ArmoniK.Core.Common.gRPC.RpcExt.ForceMoveNext*
  name: ForceMoveNext
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_ForceMoveNext_
  commentId: Overload:ArmoniK.Core.Common.gRPC.RpcExt.ForceMoveNext
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.ForceMoveNext
  nameWithType: RpcExt.ForceMoveNext
- uid: ArmoniK.Core.Common.gRPC.RpcExt.ForceMoveNext``1(IAsyncEnumerator{``0},System.String,ILogger,CancellationToken)
  name: ForceMoveNext<T>(IAsyncEnumerator<T>, String, ILogger, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_ForceMoveNext__1_IAsyncEnumerator___0__System_String_ILogger_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.RpcExt.ForceMoveNext``1(IAsyncEnumerator{``0},System.String,ILogger,CancellationToken)
  name.vb: ForceMoveNext(Of T)(IAsyncEnumerator(Of T), String, ILogger, CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.ForceMoveNext<T>(IAsyncEnumerator<T>, System.String, ILogger, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.gRPC.RpcExt.ForceMoveNext(Of T)(IAsyncEnumerator(Of T), System.String, ILogger, CancellationToken)
  nameWithType: RpcExt.ForceMoveNext<T>(IAsyncEnumerator<T>, String, ILogger, CancellationToken)
  nameWithType.vb: RpcExt.ForceMoveNext(Of T)(IAsyncEnumerator(Of T), String, ILogger, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.RpcExt.HandleExceptions(Exception,StatusCode)
  name: HandleExceptions(Exception, StatusCode)
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_HandleExceptions_Exception_StatusCode_
  commentId: M:ArmoniK.Core.Common.gRPC.RpcExt.HandleExceptions(Exception,StatusCode)
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.HandleExceptions(Exception, StatusCode)
  nameWithType: RpcExt.HandleExceptions(Exception, StatusCode)
- uid: ArmoniK.Core.Common.gRPC.RpcExt.HandleExceptions*
  name: HandleExceptions
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_HandleExceptions_
  commentId: Overload:ArmoniK.Core.Common.gRPC.RpcExt.HandleExceptions
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.HandleExceptions
  nameWithType: RpcExt.HandleExceptions
- uid: ArmoniK.Core.Common.gRPC.RpcExt.ThrowIfError(Status)
  name: ThrowIfError(Status)
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_ThrowIfError_Status_
  commentId: M:ArmoniK.Core.Common.gRPC.RpcExt.ThrowIfError(Status)
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.ThrowIfError(Status)
  nameWithType: RpcExt.ThrowIfError(Status)
- uid: ArmoniK.Core.Common.gRPC.RpcExt.ThrowIfError*
  name: ThrowIfError
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_ThrowIfError_
  commentId: Overload:ArmoniK.Core.Common.gRPC.RpcExt.ThrowIfError
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.ThrowIfError
  nameWithType: RpcExt.ThrowIfError
- uid: ArmoniK.Core.Common.gRPC.RpcExt.ToPrintableId(TaskId)
  name: ToPrintableId(TaskId)
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_ToPrintableId_TaskId_
  commentId: M:ArmoniK.Core.Common.gRPC.RpcExt.ToPrintableId(TaskId)
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.ToPrintableId(TaskId)
  nameWithType: RpcExt.ToPrintableId(TaskId)
- uid: ArmoniK.Core.Common.gRPC.RpcExt.ToPrintableId*
  name: ToPrintableId
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_ToPrintableId_
  commentId: Overload:ArmoniK.Core.Common.gRPC.RpcExt.ToPrintableId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.ToPrintableId
  nameWithType: RpcExt.ToPrintableId
- uid: ArmoniK.Core.Common.gRPC.RpcExt.WrapRpcException*
  name: WrapRpcException
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_WrapRpcException_
  commentId: Overload:ArmoniK.Core.Common.gRPC.RpcExt.WrapRpcException
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.WrapRpcException
  nameWithType: RpcExt.WrapRpcException
- uid: ArmoniK.Core.Common.gRPC.RpcExt.WrapRpcException``1(AsyncUnaryCall{``0})
  name: WrapRpcException<TMessage>(AsyncUnaryCall<TMessage>)
  href: api/ArmoniK.Core.Common.gRPC.RpcExt.html#ArmoniK_Core_Common_gRPC_RpcExt_WrapRpcException__1_AsyncUnaryCall___0__
  commentId: M:ArmoniK.Core.Common.gRPC.RpcExt.WrapRpcException``1(AsyncUnaryCall{``0})
  name.vb: WrapRpcException(Of TMessage)(AsyncUnaryCall(Of TMessage))
  fullName: ArmoniK.Core.Common.gRPC.RpcExt.WrapRpcException<TMessage>(AsyncUnaryCall<TMessage>)
  fullName.vb: ArmoniK.Core.Common.gRPC.RpcExt.WrapRpcException(Of TMessage)(AsyncUnaryCall(Of TMessage))
  nameWithType: RpcExt.WrapRpcException<TMessage>(AsyncUnaryCall<TMessage>)
  nameWithType.vb: RpcExt.WrapRpcException(Of TMessage)(AsyncUnaryCall(Of TMessage))
- uid: ArmoniK.Core.Common.gRPC.Services
  name: ArmoniK.Core.Common.gRPC.Services
  href: api/ArmoniK.Core.Common.gRPC.Services.html
  commentId: N:ArmoniK.Core.Common.gRPC.Services
  fullName: ArmoniK.Core.Common.gRPC.Services
  nameWithType: ArmoniK.Core.Common.gRPC.Services
- uid: ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions
  name: GrpcSubmitterExtensions
  href: api/ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.html
  commentId: T:ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions
  fullName: ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions
  nameWithType: GrpcSubmitterExtensions
- uid: ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.BuildRequests(IAsyncEnumerator{ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest},CancellationToken)
  name: BuildRequests(IAsyncEnumerator<CreateLargeTaskRequest>, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.html#ArmoniK_Core_Common_gRPC_Services_GrpcSubmitterExtensions_BuildRequests_IAsyncEnumerator_ArmoniK_Api_gRPC_V1_CreateLargeTaskRequest__CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.BuildRequests(IAsyncEnumerator{ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest},CancellationToken)
  name.vb: BuildRequests(IAsyncEnumerator(Of CreateLargeTaskRequest), CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.BuildRequests(IAsyncEnumerator<ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.BuildRequests(IAsyncEnumerator(Of ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest), CancellationToken)
  nameWithType: GrpcSubmitterExtensions.BuildRequests(IAsyncEnumerator<CreateLargeTaskRequest>, CancellationToken)
  nameWithType.vb: GrpcSubmitterExtensions.BuildRequests(IAsyncEnumerator(Of CreateLargeTaskRequest), CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.BuildRequests*
  name: BuildRequests
  href: api/ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.html#ArmoniK_Core_Common_gRPC_Services_GrpcSubmitterExtensions_BuildRequests_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.BuildRequests
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.GrpcSubmitterExtensions.BuildRequests
  nameWithType: GrpcSubmitterExtensions.BuildRequests
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter
  name: ISubmitter
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html
  commentId: T:ArmoniK.Core.Common.gRPC.Services.ISubmitter
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter
  nameWithType: ISubmitter
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelDispatchSessionAsync(System.String,System.String,CancellationToken)
  name: CancelDispatchSessionAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CancelDispatchSessionAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelDispatchSessionAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelDispatchSessionAsync(System.String, System.String, CancellationToken)
  nameWithType: ISubmitter.CancelDispatchSessionAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelDispatchSessionAsync*
  name: CancelDispatchSessionAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CancelDispatchSessionAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelDispatchSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelDispatchSessionAsync
  nameWithType: ISubmitter.CancelDispatchSessionAsync
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelSession(System.String,CancellationToken)
  name: CancelSession(String, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CancelSession_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelSession(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelSession(System.String, CancellationToken)
  nameWithType: ISubmitter.CancelSession(String, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelSession*
  name: CancelSession
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CancelSession_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelSession
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelSession
  nameWithType: ISubmitter.CancelSession
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelTasks(TaskFilter,CancellationToken)
  name: CancelTasks(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CancelTasks_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelTasks(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelTasks(TaskFilter, CancellationToken)
  nameWithType: ISubmitter.CancelTasks(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelTasks*
  name: CancelTasks
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CancelTasks_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CancelTasks
  nameWithType: ISubmitter.CancelTasks
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CompleteTaskAsync(System.String,ArmoniK.Api.gRPC.V1.Output,CancellationToken)
  name: CompleteTaskAsync(String, Output, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CompleteTaskAsync_System_String_ArmoniK_Api_gRPC_V1_Output_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CompleteTaskAsync(System.String,ArmoniK.Api.gRPC.V1.Output,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CompleteTaskAsync(System.String, ArmoniK.Api.gRPC.V1.Output, CancellationToken)
  nameWithType: ISubmitter.CompleteTaskAsync(String, Output, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CompleteTaskAsync*
  name: CompleteTaskAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CompleteTaskAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CompleteTaskAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CompleteTaskAsync
  nameWithType: ISubmitter.CompleteTaskAsync
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CountTasks(TaskFilter,CancellationToken)
  name: CountTasks(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CountTasks_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CountTasks(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CountTasks(TaskFilter, CancellationToken)
  nameWithType: ISubmitter.CountTasks(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CountTasks*
  name: CountTasks
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CountTasks_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CountTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CountTasks
  nameWithType: ISubmitter.CountTasks
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateSession(System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  name: CreateSession(String, TaskOptions, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CreateSession_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateSession(System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateSession(System.String, ArmoniK.Api.gRPC.V1.TaskOptions, CancellationToken)
  nameWithType: ISubmitter.CreateSession(String, TaskOptions, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateSession*
  name: CreateSession
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CreateSession_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateSession
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateSession
  nameWithType: ISubmitter.CreateSession
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateTasks(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,IAsyncEnumerable{TaskRequest},CancellationToken)
  name: CreateTasks(String, String, String, TaskOptions, IAsyncEnumerable<TaskRequest>, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CreateTasks_System_String_System_String_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_IAsyncEnumerable_TaskRequest__CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateTasks(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,IAsyncEnumerable{TaskRequest},CancellationToken)
  name.vb: CreateTasks(String, String, String, TaskOptions, IAsyncEnumerable(Of TaskRequest), CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateTasks(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, IAsyncEnumerable<TaskRequest>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateTasks(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, IAsyncEnumerable(Of TaskRequest), CancellationToken)
  nameWithType: ISubmitter.CreateTasks(String, String, String, TaskOptions, IAsyncEnumerable<TaskRequest>, CancellationToken)
  nameWithType.vb: ISubmitter.CreateTasks(String, String, String, TaskOptions, IAsyncEnumerable(Of TaskRequest), CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateTasks*
  name: CreateTasks
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_CreateTasks_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.CreateTasks
  nameWithType: ISubmitter.CreateTasks
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.FinalizeDispatch(System.String,Dispatch,CancellationToken)
  name: FinalizeDispatch(String, Dispatch, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_FinalizeDispatch_System_String_Dispatch_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.FinalizeDispatch(System.String,Dispatch,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.FinalizeDispatch(System.String, Dispatch, CancellationToken)
  nameWithType: ISubmitter.FinalizeDispatch(String, Dispatch, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.FinalizeDispatch*
  name: FinalizeDispatch
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_FinalizeDispatch_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.FinalizeDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.FinalizeDispatch
  nameWithType: ISubmitter.FinalizeDispatch
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetServiceConfiguration(Empty,CancellationToken)
  name: GetServiceConfiguration(Empty, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_GetServiceConfiguration_Empty_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetServiceConfiguration(Empty,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetServiceConfiguration(Empty, CancellationToken)
  nameWithType: ISubmitter.GetServiceConfiguration(Empty, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetServiceConfiguration*
  name: GetServiceConfiguration
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_GetServiceConfiguration_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetServiceConfiguration
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetServiceConfiguration
  nameWithType: ISubmitter.GetServiceConfiguration
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetStatusAsync(GetStatusrequest,CancellationToken)
  name: GetStatusAsync(GetStatusrequest, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_GetStatusAsync_GetStatusrequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetStatusAsync(GetStatusrequest,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetStatusAsync(GetStatusrequest, CancellationToken)
  nameWithType: ISubmitter.GetStatusAsync(GetStatusrequest, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetStatusAsync*
  name: GetStatusAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_GetStatusAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.GetStatusAsync
  nameWithType: ISubmitter.GetStatusAsync
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.ListTasksAsync(TaskFilter,CancellationToken)
  name: ListTasksAsync(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_ListTasksAsync_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.ListTasksAsync(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.ListTasksAsync(TaskFilter, CancellationToken)
  nameWithType: ISubmitter.ListTasksAsync(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.ListTasksAsync*
  name: ListTasksAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_ListTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.ListTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.ListTasksAsync
  nameWithType: ISubmitter.ListTasksAsync
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetResult(ResultRequest,IServerStreamWriter{ResultReply},CancellationToken)
  name: TryGetResult(ResultRequest, IServerStreamWriter<ResultReply>, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_TryGetResult_ResultRequest_IServerStreamWriter_ResultReply__CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetResult(ResultRequest,IServerStreamWriter{ResultReply},CancellationToken)
  name.vb: TryGetResult(ResultRequest, IServerStreamWriter(Of ResultReply), CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetResult(ResultRequest, IServerStreamWriter<ResultReply>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetResult(ResultRequest, IServerStreamWriter(Of ResultReply), CancellationToken)
  nameWithType: ISubmitter.TryGetResult(ResultRequest, IServerStreamWriter<ResultReply>, CancellationToken)
  nameWithType.vb: ISubmitter.TryGetResult(ResultRequest, IServerStreamWriter(Of ResultReply), CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetResult*
  name: TryGetResult
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_TryGetResult_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetResult
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetResult
  nameWithType: ISubmitter.TryGetResult
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetTaskOutputAsync(ResultRequest,CancellationToken)
  name: TryGetTaskOutputAsync(ResultRequest, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_TryGetTaskOutputAsync_ResultRequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetTaskOutputAsync(ResultRequest,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetTaskOutputAsync(ResultRequest, CancellationToken)
  nameWithType: ISubmitter.TryGetTaskOutputAsync(ResultRequest, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetTaskOutputAsync*
  name: TryGetTaskOutputAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_TryGetTaskOutputAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetTaskOutputAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.TryGetTaskOutputAsync
  nameWithType: ISubmitter.TryGetTaskOutputAsync
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_UpdateTaskStatusAsync_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.UpdateTaskStatusAsync(System.String, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: ISubmitter.UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.UpdateTaskStatusAsync*
  name: UpdateTaskStatusAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_UpdateTaskStatusAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.UpdateTaskStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.UpdateTaskStatusAsync
  nameWithType: ISubmitter.UpdateTaskStatusAsync
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForAvailabilityAsync(ResultRequest,CancellationToken)
  name: WaitForAvailabilityAsync(ResultRequest, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_WaitForAvailabilityAsync_ResultRequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForAvailabilityAsync(ResultRequest,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForAvailabilityAsync(ResultRequest, CancellationToken)
  nameWithType: ISubmitter.WaitForAvailabilityAsync(ResultRequest, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForAvailabilityAsync*
  name: WaitForAvailabilityAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_WaitForAvailabilityAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForAvailabilityAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForAvailabilityAsync
  nameWithType: ISubmitter.WaitForAvailabilityAsync
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForCompletion(WaitRequest,CancellationToken)
  name: WaitForCompletion(WaitRequest, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_WaitForCompletion_WaitRequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForCompletion(WaitRequest,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForCompletion(WaitRequest, CancellationToken)
  nameWithType: ISubmitter.WaitForCompletion(WaitRequest, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForCompletion*
  name: WaitForCompletion
  href: api/ArmoniK.Core.Common.gRPC.Services.ISubmitter.html#ArmoniK_Core_Common_gRPC_Services_ISubmitter_WaitForCompletion_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForCompletion
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.ISubmitter.WaitForCompletion
  nameWithType: ISubmitter.WaitForCompletion
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter
  name: Submitter
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html
  commentId: T:ArmoniK.Core.Common.gRPC.Services.Submitter
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter
  nameWithType: Submitter
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.#ctor(ArmoniK.Core.Common.Storage.IQueueStorage,ArmoniK.Core.Common.Storage.IObjectStorageFactory,ILogger{ArmoniK.Core.Common.gRPC.Services.Submitter},ArmoniK.Core.Common.Storage.ISessionTable,ArmoniK.Core.Common.Storage.ITaskTable,ArmoniK.Core.Common.Storage.IResultTable,ActivitySource)
  name: Submitter(IQueueStorage, IObjectStorageFactory, ILogger<Submitter>, ISessionTable, ITaskTable, IResultTable, ActivitySource)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter__ctor_ArmoniK_Core_Common_Storage_IQueueStorage_ArmoniK_Core_Common_Storage_IObjectStorageFactory_ILogger_ArmoniK_Core_Common_gRPC_Services_Submitter__ArmoniK_Core_Common_Storage_ISessionTable_ArmoniK_Core_Common_Storage_ITaskTable_ArmoniK_Core_Common_Storage_IResultTable_ActivitySource_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.#ctor(ArmoniK.Core.Common.Storage.IQueueStorage,ArmoniK.Core.Common.Storage.IObjectStorageFactory,ILogger{ArmoniK.Core.Common.gRPC.Services.Submitter},ArmoniK.Core.Common.Storage.ISessionTable,ArmoniK.Core.Common.Storage.ITaskTable,ArmoniK.Core.Common.Storage.IResultTable,ActivitySource)
  name.vb: Submitter(IQueueStorage, IObjectStorageFactory, ILogger(Of Submitter), ISessionTable, ITaskTable, IResultTable, ActivitySource)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.Submitter(ArmoniK.Core.Common.Storage.IQueueStorage, ArmoniK.Core.Common.Storage.IObjectStorageFactory, ILogger<ArmoniK.Core.Common.gRPC.Services.Submitter>, ArmoniK.Core.Common.Storage.ISessionTable, ArmoniK.Core.Common.Storage.ITaskTable, ArmoniK.Core.Common.Storage.IResultTable, ActivitySource)
  fullName.vb: ArmoniK.Core.Common.gRPC.Services.Submitter.Submitter(ArmoniK.Core.Common.Storage.IQueueStorage, ArmoniK.Core.Common.Storage.IObjectStorageFactory, ILogger(Of ArmoniK.Core.Common.gRPC.Services.Submitter), ArmoniK.Core.Common.Storage.ISessionTable, ArmoniK.Core.Common.Storage.ITaskTable, ArmoniK.Core.Common.Storage.IResultTable, ActivitySource)
  nameWithType: Submitter.Submitter(IQueueStorage, IObjectStorageFactory, ILogger<Submitter>, ISessionTable, ITaskTable, IResultTable, ActivitySource)
  nameWithType.vb: Submitter.Submitter(IQueueStorage, IObjectStorageFactory, ILogger(Of Submitter), ISessionTable, ITaskTable, IResultTable, ActivitySource)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.#ctor*
  name: Submitter
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.Submitter
  nameWithType: Submitter.Submitter
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelDispatchSessionAsync(System.String,System.String,CancellationToken)
  name: CancelDispatchSessionAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CancelDispatchSessionAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.CancelDispatchSessionAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelDispatchSessionAsync(System.String, System.String, CancellationToken)
  nameWithType: Submitter.CancelDispatchSessionAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelDispatchSessionAsync*
  name: CancelDispatchSessionAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CancelDispatchSessionAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.CancelDispatchSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelDispatchSessionAsync
  nameWithType: Submitter.CancelDispatchSessionAsync
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelSession(System.String,CancellationToken)
  name: CancelSession(String, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CancelSession_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.CancelSession(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelSession(System.String, CancellationToken)
  nameWithType: Submitter.CancelSession(String, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelSession*
  name: CancelSession
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CancelSession_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.CancelSession
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelSession
  nameWithType: Submitter.CancelSession
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelTasks(TaskFilter,CancellationToken)
  name: CancelTasks(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CancelTasks_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.CancelTasks(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelTasks(TaskFilter, CancellationToken)
  nameWithType: Submitter.CancelTasks(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelTasks*
  name: CancelTasks
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CancelTasks_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.CancelTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CancelTasks
  nameWithType: Submitter.CancelTasks
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CompleteTaskAsync(System.String,ArmoniK.Api.gRPC.V1.Output,CancellationToken)
  name: CompleteTaskAsync(String, Output, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CompleteTaskAsync_System_String_ArmoniK_Api_gRPC_V1_Output_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.CompleteTaskAsync(System.String,ArmoniK.Api.gRPC.V1.Output,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CompleteTaskAsync(System.String, ArmoniK.Api.gRPC.V1.Output, CancellationToken)
  nameWithType: Submitter.CompleteTaskAsync(String, Output, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CompleteTaskAsync*
  name: CompleteTaskAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CompleteTaskAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.CompleteTaskAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CompleteTaskAsync
  nameWithType: Submitter.CompleteTaskAsync
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CountTasks(TaskFilter,CancellationToken)
  name: CountTasks(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CountTasks_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.CountTasks(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CountTasks(TaskFilter, CancellationToken)
  nameWithType: Submitter.CountTasks(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CountTasks*
  name: CountTasks
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CountTasks_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.CountTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CountTasks
  nameWithType: Submitter.CountTasks
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateSession(System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  name: CreateSession(String, TaskOptions, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CreateSession_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.CreateSession(System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateSession(System.String, ArmoniK.Api.gRPC.V1.TaskOptions, CancellationToken)
  nameWithType: Submitter.CreateSession(String, TaskOptions, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateSession*
  name: CreateSession
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CreateSession_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.CreateSession
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateSession
  nameWithType: Submitter.CreateSession
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateTasks(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,IAsyncEnumerable{TaskRequest},CancellationToken)
  name: CreateTasks(String, String, String, TaskOptions, IAsyncEnumerable<TaskRequest>, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CreateTasks_System_String_System_String_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_IAsyncEnumerable_TaskRequest__CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.CreateTasks(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,IAsyncEnumerable{TaskRequest},CancellationToken)
  name.vb: CreateTasks(String, String, String, TaskOptions, IAsyncEnumerable(Of TaskRequest), CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateTasks(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, IAsyncEnumerable<TaskRequest>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateTasks(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, IAsyncEnumerable(Of TaskRequest), CancellationToken)
  nameWithType: Submitter.CreateTasks(String, String, String, TaskOptions, IAsyncEnumerable<TaskRequest>, CancellationToken)
  nameWithType.vb: Submitter.CreateTasks(String, String, String, TaskOptions, IAsyncEnumerable(Of TaskRequest), CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateTasks*
  name: CreateTasks
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_CreateTasks_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.CreateTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.CreateTasks
  nameWithType: Submitter.CreateTasks
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.FinalizeDispatch(System.String,Dispatch,CancellationToken)
  name: FinalizeDispatch(String, Dispatch, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_FinalizeDispatch_System_String_Dispatch_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.FinalizeDispatch(System.String,Dispatch,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.FinalizeDispatch(System.String, Dispatch, CancellationToken)
  nameWithType: Submitter.FinalizeDispatch(String, Dispatch, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.FinalizeDispatch*
  name: FinalizeDispatch
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_FinalizeDispatch_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.FinalizeDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.FinalizeDispatch
  nameWithType: Submitter.FinalizeDispatch
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.GetServiceConfiguration(Empty,CancellationToken)
  name: GetServiceConfiguration(Empty, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_GetServiceConfiguration_Empty_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.GetServiceConfiguration(Empty,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.GetServiceConfiguration(Empty, CancellationToken)
  nameWithType: Submitter.GetServiceConfiguration(Empty, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.GetServiceConfiguration*
  name: GetServiceConfiguration
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_GetServiceConfiguration_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.GetServiceConfiguration
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.GetServiceConfiguration
  nameWithType: Submitter.GetServiceConfiguration
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.GetStatusAsync(GetStatusrequest,CancellationToken)
  name: GetStatusAsync(GetStatusrequest, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_GetStatusAsync_GetStatusrequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.GetStatusAsync(GetStatusrequest,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.GetStatusAsync(GetStatusrequest, CancellationToken)
  nameWithType: Submitter.GetStatusAsync(GetStatusrequest, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.GetStatusAsync*
  name: GetStatusAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_GetStatusAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.GetStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.GetStatusAsync
  nameWithType: Submitter.GetStatusAsync
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.InitializeTaskCreationAsync(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,IEnumerable{ArmoniK.Core.Common.Storage.TaskRequest},CancellationToken)
  name: InitializeTaskCreationAsync(String, String, String, TaskOptions, IEnumerable<TaskRequest>, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_InitializeTaskCreationAsync_System_String_System_String_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_IEnumerable_ArmoniK_Core_Common_Storage_TaskRequest__CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.InitializeTaskCreationAsync(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,IEnumerable{ArmoniK.Core.Common.Storage.TaskRequest},CancellationToken)
  name.vb: InitializeTaskCreationAsync(String, String, String, TaskOptions, IEnumerable(Of TaskRequest), CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.InitializeTaskCreationAsync(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, IEnumerable<ArmoniK.Core.Common.Storage.TaskRequest>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.gRPC.Services.Submitter.InitializeTaskCreationAsync(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, IEnumerable(Of ArmoniK.Core.Common.Storage.TaskRequest), CancellationToken)
  nameWithType: Submitter.InitializeTaskCreationAsync(String, String, String, TaskOptions, IEnumerable<TaskRequest>, CancellationToken)
  nameWithType.vb: Submitter.InitializeTaskCreationAsync(String, String, String, TaskOptions, IEnumerable(Of TaskRequest), CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.InitializeTaskCreationAsync*
  name: InitializeTaskCreationAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_InitializeTaskCreationAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.InitializeTaskCreationAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.InitializeTaskCreationAsync
  nameWithType: Submitter.InitializeTaskCreationAsync
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.ListTasksAsync(TaskFilter,CancellationToken)
  name: ListTasksAsync(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_ListTasksAsync_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.ListTasksAsync(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.ListTasksAsync(TaskFilter, CancellationToken)
  nameWithType: Submitter.ListTasksAsync(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.ListTasksAsync*
  name: ListTasksAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_ListTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.ListTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.ListTasksAsync
  nameWithType: Submitter.ListTasksAsync
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetResult(ResultRequest,IServerStreamWriter{ResultReply},CancellationToken)
  name: TryGetResult(ResultRequest, IServerStreamWriter<ResultReply>, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_TryGetResult_ResultRequest_IServerStreamWriter_ResultReply__CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetResult(ResultRequest,IServerStreamWriter{ResultReply},CancellationToken)
  name.vb: TryGetResult(ResultRequest, IServerStreamWriter(Of ResultReply), CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetResult(ResultRequest, IServerStreamWriter<ResultReply>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetResult(ResultRequest, IServerStreamWriter(Of ResultReply), CancellationToken)
  nameWithType: Submitter.TryGetResult(ResultRequest, IServerStreamWriter<ResultReply>, CancellationToken)
  nameWithType.vb: Submitter.TryGetResult(ResultRequest, IServerStreamWriter(Of ResultReply), CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetResult*
  name: TryGetResult
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_TryGetResult_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetResult
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetResult
  nameWithType: Submitter.TryGetResult
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetTaskOutputAsync(ResultRequest,CancellationToken)
  name: TryGetTaskOutputAsync(ResultRequest, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_TryGetTaskOutputAsync_ResultRequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetTaskOutputAsync(ResultRequest,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetTaskOutputAsync(ResultRequest, CancellationToken)
  nameWithType: Submitter.TryGetTaskOutputAsync(ResultRequest, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetTaskOutputAsync*
  name: TryGetTaskOutputAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_TryGetTaskOutputAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetTaskOutputAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.TryGetTaskOutputAsync
  nameWithType: Submitter.TryGetTaskOutputAsync
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_UpdateTaskStatusAsync_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.UpdateTaskStatusAsync(System.String, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: Submitter.UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.UpdateTaskStatusAsync*
  name: UpdateTaskStatusAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_UpdateTaskStatusAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.UpdateTaskStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.UpdateTaskStatusAsync
  nameWithType: Submitter.UpdateTaskStatusAsync
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForAvailabilityAsync(ResultRequest,CancellationToken)
  name: WaitForAvailabilityAsync(ResultRequest, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_WaitForAvailabilityAsync_ResultRequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForAvailabilityAsync(ResultRequest,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForAvailabilityAsync(ResultRequest, CancellationToken)
  nameWithType: Submitter.WaitForAvailabilityAsync(ResultRequest, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForAvailabilityAsync*
  name: WaitForAvailabilityAsync
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_WaitForAvailabilityAsync_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForAvailabilityAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForAvailabilityAsync
  nameWithType: Submitter.WaitForAvailabilityAsync
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForCompletion(WaitRequest,CancellationToken)
  name: WaitForCompletion(WaitRequest, CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_WaitForCompletion_WaitRequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForCompletion(WaitRequest,CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForCompletion(WaitRequest, CancellationToken)
  nameWithType: Submitter.WaitForCompletion(WaitRequest, CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForCompletion*
  name: WaitForCompletion
  href: api/ArmoniK.Core.Common.gRPC.Services.Submitter.html#ArmoniK_Core_Common_gRPC_Services_Submitter_WaitForCompletion_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForCompletion
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Services.Submitter.WaitForCompletion
  nameWithType: Submitter.WaitForCompletion
- uid: ArmoniK.Core.Common.gRPC.Validators
  name: ArmoniK.Core.Common.gRPC.Validators
  href: api/ArmoniK.Core.Common.gRPC.Validators.html
  commentId: N:ArmoniK.Core.Common.gRPC.Validators
  fullName: ArmoniK.Core.Common.gRPC.Validators
  nameWithType: ArmoniK.Core.Common.gRPC.Validators
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator
  name: CreateLargeTaskRequestValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.html
  commentId: T:ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator
  nameWithType: CreateLargeTaskRequestValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.#ctor
  name: CreateLargeTaskRequestValidator()
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.html#ArmoniK_Core_Common_gRPC_Validators_CreateLargeTaskRequestValidator__ctor
  commentId: M:ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.#ctor
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.CreateLargeTaskRequestValidator()
  nameWithType: CreateLargeTaskRequestValidator.CreateLargeTaskRequestValidator()
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.#ctor*
  name: CreateLargeTaskRequestValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.html#ArmoniK_Core_Common_gRPC_Validators_CreateLargeTaskRequestValidator__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateLargeTaskRequestValidator.CreateLargeTaskRequestValidator
  nameWithType: CreateLargeTaskRequestValidator.CreateLargeTaskRequestValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator
  name: CreateSessionRequestValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.html
  commentId: T:ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator
  nameWithType: CreateSessionRequestValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.#ctor
  name: CreateSessionRequestValidator()
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.html#ArmoniK_Core_Common_gRPC_Validators_CreateSessionRequestValidator__ctor
  commentId: M:ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.#ctor
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.CreateSessionRequestValidator()
  nameWithType: CreateSessionRequestValidator.CreateSessionRequestValidator()
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.#ctor*
  name: CreateSessionRequestValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.html#ArmoniK_Core_Common_gRPC_Validators_CreateSessionRequestValidator__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSessionRequestValidator.CreateSessionRequestValidator
  nameWithType: CreateSessionRequestValidator.CreateSessionRequestValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator
  name: CreateSmallTaskRequestValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.html
  commentId: T:ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator
  nameWithType: CreateSmallTaskRequestValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.#ctor
  name: CreateSmallTaskRequestValidator()
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.html#ArmoniK_Core_Common_gRPC_Validators_CreateSmallTaskRequestValidator__ctor
  commentId: M:ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.#ctor
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.CreateSmallTaskRequestValidator()
  nameWithType: CreateSmallTaskRequestValidator.CreateSmallTaskRequestValidator()
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.#ctor*
  name: CreateSmallTaskRequestValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.html#ArmoniK_Core_Common_gRPC_Validators_CreateSmallTaskRequestValidator__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.CreateSmallTaskRequestValidator
  nameWithType: CreateSmallTaskRequestValidator.CreateSmallTaskRequestValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator
  name: CreateSmallTaskRequestValidator.TaskRequestValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.html
  commentId: T:ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator
  nameWithType: CreateSmallTaskRequestValidator.TaskRequestValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.#ctor
  name: TaskRequestValidator()
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.html#ArmoniK_Core_Common_gRPC_Validators_CreateSmallTaskRequestValidator_TaskRequestValidator__ctor
  commentId: M:ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.#ctor
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.TaskRequestValidator()
  nameWithType: CreateSmallTaskRequestValidator.TaskRequestValidator.TaskRequestValidator()
- uid: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.#ctor*
  name: TaskRequestValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.html#ArmoniK_Core_Common_gRPC_Validators_CreateSmallTaskRequestValidator_TaskRequestValidator__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Validators.CreateSmallTaskRequestValidator.TaskRequestValidator.TaskRequestValidator
  nameWithType: CreateSmallTaskRequestValidator.TaskRequestValidator.TaskRequestValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator
  name: TaskFilterValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.html
  commentId: T:ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator
  fullName: ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator
  nameWithType: TaskFilterValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.#ctor
  name: TaskFilterValidator()
  href: api/ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.html#ArmoniK_Core_Common_gRPC_Validators_TaskFilterValidator__ctor
  commentId: M:ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.#ctor
  fullName: ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.TaskFilterValidator()
  nameWithType: TaskFilterValidator.TaskFilterValidator()
- uid: ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.#ctor*
  name: TaskFilterValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.html#ArmoniK_Core_Common_gRPC_Validators_TaskFilterValidator__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Validators.TaskFilterValidator.TaskFilterValidator
  nameWithType: TaskFilterValidator.TaskFilterValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator
  name: TaskOptionsValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.html
  commentId: T:ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator
  fullName: ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator
  nameWithType: TaskOptionsValidator
- uid: ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.#ctor
  name: TaskOptionsValidator()
  href: api/ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.html#ArmoniK_Core_Common_gRPC_Validators_TaskOptionsValidator__ctor
  commentId: M:ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.#ctor
  fullName: ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.TaskOptionsValidator()
  nameWithType: TaskOptionsValidator.TaskOptionsValidator()
- uid: ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.#ctor*
  name: TaskOptionsValidator
  href: api/ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.html#ArmoniK_Core_Common_gRPC_Validators_TaskOptionsValidator__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.Validators.TaskOptionsValidator.TaskOptionsValidator
  nameWithType: TaskOptionsValidator.TaskOptionsValidator
- uid: ArmoniK.Core.Common.gRPC.WorkerClientProvider
  name: WorkerClientProvider
  href: api/ArmoniK.Core.Common.gRPC.WorkerClientProvider.html
  commentId: T:ArmoniK.Core.Common.gRPC.WorkerClientProvider
  fullName: ArmoniK.Core.Common.gRPC.WorkerClientProvider
  nameWithType: WorkerClientProvider
- uid: ArmoniK.Core.Common.gRPC.WorkerClientProvider.#ctor(ArmoniK.Core.Common.gRPC.GrpcChannelProvider,ILogger{ArmoniK.Core.Common.gRPC.WorkerClientProvider})
  name: WorkerClientProvider(GrpcChannelProvider, ILogger<WorkerClientProvider>)
  href: api/ArmoniK.Core.Common.gRPC.WorkerClientProvider.html#ArmoniK_Core_Common_gRPC_WorkerClientProvider__ctor_ArmoniK_Core_Common_gRPC_GrpcChannelProvider_ILogger_ArmoniK_Core_Common_gRPC_WorkerClientProvider__
  commentId: M:ArmoniK.Core.Common.gRPC.WorkerClientProvider.#ctor(ArmoniK.Core.Common.gRPC.GrpcChannelProvider,ILogger{ArmoniK.Core.Common.gRPC.WorkerClientProvider})
  name.vb: WorkerClientProvider(GrpcChannelProvider, ILogger(Of WorkerClientProvider))
  fullName: ArmoniK.Core.Common.gRPC.WorkerClientProvider.WorkerClientProvider(ArmoniK.Core.Common.gRPC.GrpcChannelProvider, ILogger<ArmoniK.Core.Common.gRPC.WorkerClientProvider>)
  fullName.vb: ArmoniK.Core.Common.gRPC.WorkerClientProvider.WorkerClientProvider(ArmoniK.Core.Common.gRPC.GrpcChannelProvider, ILogger(Of ArmoniK.Core.Common.gRPC.WorkerClientProvider))
  nameWithType: WorkerClientProvider.WorkerClientProvider(GrpcChannelProvider, ILogger<WorkerClientProvider>)
  nameWithType.vb: WorkerClientProvider.WorkerClientProvider(GrpcChannelProvider, ILogger(Of WorkerClientProvider))
- uid: ArmoniK.Core.Common.gRPC.WorkerClientProvider.#ctor*
  name: WorkerClientProvider
  href: api/ArmoniK.Core.Common.gRPC.WorkerClientProvider.html#ArmoniK_Core_Common_gRPC_WorkerClientProvider__ctor_
  commentId: Overload:ArmoniK.Core.Common.gRPC.WorkerClientProvider.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.WorkerClientProvider.WorkerClientProvider
  nameWithType: WorkerClientProvider.WorkerClientProvider
- uid: ArmoniK.Core.Common.gRPC.WorkerClientProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Common.gRPC.WorkerClientProvider.html#ArmoniK_Core_Common_gRPC_WorkerClientProvider_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.gRPC.WorkerClientProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.gRPC.WorkerClientProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: WorkerClientProvider.Check(HealthCheckTag)
- uid: ArmoniK.Core.Common.gRPC.WorkerClientProvider.Check*
  name: Check
  href: api/ArmoniK.Core.Common.gRPC.WorkerClientProvider.html#ArmoniK_Core_Common_gRPC_WorkerClientProvider_Check_
  commentId: Overload:ArmoniK.Core.Common.gRPC.WorkerClientProvider.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.WorkerClientProvider.Check
  nameWithType: WorkerClientProvider.Check
- uid: ArmoniK.Core.Common.gRPC.WorkerClientProvider.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Common.gRPC.WorkerClientProvider.html#ArmoniK_Core_Common_gRPC_WorkerClientProvider_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Common.gRPC.WorkerClientProvider.Init(CancellationToken)
  fullName: ArmoniK.Core.Common.gRPC.WorkerClientProvider.Init(CancellationToken)
  nameWithType: WorkerClientProvider.Init(CancellationToken)
- uid: ArmoniK.Core.Common.gRPC.WorkerClientProvider.Init*
  name: Init
  href: api/ArmoniK.Core.Common.gRPC.WorkerClientProvider.html#ArmoniK_Core_Common_gRPC_WorkerClientProvider_Init_
  commentId: Overload:ArmoniK.Core.Common.gRPC.WorkerClientProvider.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.gRPC.WorkerClientProvider.Init
  nameWithType: WorkerClientProvider.Init
- uid: ArmoniK.Core.Common.HealthCheck
  name: HealthCheck
  href: api/ArmoniK.Core.Common.HealthCheck.html
  commentId: T:ArmoniK.Core.Common.HealthCheck
  fullName: ArmoniK.Core.Common.HealthCheck
  nameWithType: HealthCheck
- uid: ArmoniK.Core.Common.HealthCheck.#ctor(ArmoniK.Core.Common.IHealthCheckProvider,ArmoniK.Core.Common.HealthCheckTag)
  name: HealthCheck(IHealthCheckProvider, HealthCheckTag)
  href: api/ArmoniK.Core.Common.HealthCheck.html#ArmoniK_Core_Common_HealthCheck__ctor_ArmoniK_Core_Common_IHealthCheckProvider_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.HealthCheck.#ctor(ArmoniK.Core.Common.IHealthCheckProvider,ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.HealthCheck.HealthCheck(ArmoniK.Core.Common.IHealthCheckProvider, ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: HealthCheck.HealthCheck(IHealthCheckProvider, HealthCheckTag)
- uid: ArmoniK.Core.Common.HealthCheck.#ctor*
  name: HealthCheck
  href: api/ArmoniK.Core.Common.HealthCheck.html#ArmoniK_Core_Common_HealthCheck__ctor_
  commentId: Overload:ArmoniK.Core.Common.HealthCheck.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.HealthCheck.HealthCheck
  nameWithType: HealthCheck.HealthCheck
- uid: ArmoniK.Core.Common.HealthCheck.CheckHealthAsync(HealthCheckContext,CancellationToken)
  name: CheckHealthAsync(HealthCheckContext, CancellationToken)
  href: api/ArmoniK.Core.Common.HealthCheck.html#ArmoniK_Core_Common_HealthCheck_CheckHealthAsync_HealthCheckContext_CancellationToken_
  commentId: M:ArmoniK.Core.Common.HealthCheck.CheckHealthAsync(HealthCheckContext,CancellationToken)
  fullName: ArmoniK.Core.Common.HealthCheck.CheckHealthAsync(HealthCheckContext, CancellationToken)
  nameWithType: HealthCheck.CheckHealthAsync(HealthCheckContext, CancellationToken)
- uid: ArmoniK.Core.Common.HealthCheck.CheckHealthAsync*
  name: CheckHealthAsync
  href: api/ArmoniK.Core.Common.HealthCheck.html#ArmoniK_Core_Common_HealthCheck_CheckHealthAsync_
  commentId: Overload:ArmoniK.Core.Common.HealthCheck.CheckHealthAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.HealthCheck.CheckHealthAsync
  nameWithType: HealthCheck.CheckHealthAsync
- uid: ArmoniK.Core.Common.HealthCheckTag
  name: HealthCheckTag
  href: api/ArmoniK.Core.Common.HealthCheckTag.html
  commentId: T:ArmoniK.Core.Common.HealthCheckTag
  fullName: ArmoniK.Core.Common.HealthCheckTag
  nameWithType: HealthCheckTag
- uid: ArmoniK.Core.Common.HealthCheckTag.Liveness
  name: Liveness
  href: api/ArmoniK.Core.Common.HealthCheckTag.html#ArmoniK_Core_Common_HealthCheckTag_Liveness
  commentId: F:ArmoniK.Core.Common.HealthCheckTag.Liveness
  fullName: ArmoniK.Core.Common.HealthCheckTag.Liveness
  nameWithType: HealthCheckTag.Liveness
- uid: ArmoniK.Core.Common.HealthCheckTag.Readiness
  name: Readiness
  href: api/ArmoniK.Core.Common.HealthCheckTag.html#ArmoniK_Core_Common_HealthCheckTag_Readiness
  commentId: F:ArmoniK.Core.Common.HealthCheckTag.Readiness
  fullName: ArmoniK.Core.Common.HealthCheckTag.Readiness
  nameWithType: HealthCheckTag.Readiness
- uid: ArmoniK.Core.Common.HealthCheckTag.Startup
  name: Startup
  href: api/ArmoniK.Core.Common.HealthCheckTag.html#ArmoniK_Core_Common_HealthCheckTag_Startup
  commentId: F:ArmoniK.Core.Common.HealthCheckTag.Startup
  fullName: ArmoniK.Core.Common.HealthCheckTag.Startup
  nameWithType: HealthCheckTag.Startup
- uid: ArmoniK.Core.Common.IHealthCheckProvider
  name: IHealthCheckProvider
  href: api/ArmoniK.Core.Common.IHealthCheckProvider.html
  commentId: T:ArmoniK.Core.Common.IHealthCheckProvider
  fullName: ArmoniK.Core.Common.IHealthCheckProvider
  nameWithType: IHealthCheckProvider
- uid: ArmoniK.Core.Common.IHealthCheckProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Common.IHealthCheckProvider.html#ArmoniK_Core_Common_IHealthCheckProvider_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.IHealthCheckProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.IHealthCheckProvider.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: IHealthCheckProvider.Check(HealthCheckTag)
- uid: ArmoniK.Core.Common.IHealthCheckProvider.Check*
  name: Check
  href: api/ArmoniK.Core.Common.IHealthCheckProvider.html#ArmoniK_Core_Common_IHealthCheckProvider_Check_
  commentId: Overload:ArmoniK.Core.Common.IHealthCheckProvider.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.IHealthCheckProvider.Check
  nameWithType: IHealthCheckProvider.Check
- uid: ArmoniK.Core.Common.IInitializable
  name: IInitializable
  href: api/ArmoniK.Core.Common.IInitializable.html
  commentId: T:ArmoniK.Core.Common.IInitializable
  fullName: ArmoniK.Core.Common.IInitializable
  nameWithType: IInitializable
- uid: ArmoniK.Core.Common.IInitializable.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Common.IInitializable.html#ArmoniK_Core_Common_IInitializable_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Common.IInitializable.Init(CancellationToken)
  fullName: ArmoniK.Core.Common.IInitializable.Init(CancellationToken)
  nameWithType: IInitializable.Init(CancellationToken)
- uid: ArmoniK.Core.Common.IInitializable.Init*
  name: Init
  href: api/ArmoniK.Core.Common.IInitializable.html#ArmoniK_Core_Common_IInitializable_Init_
  commentId: Overload:ArmoniK.Core.Common.IInitializable.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.IInitializable.Init
  nameWithType: IInitializable.Init
- uid: ArmoniK.Core.Common.Injection
  name: ArmoniK.Core.Common.Injection
  href: api/ArmoniK.Core.Common.Injection.html
  commentId: N:ArmoniK.Core.Common.Injection
  fullName: ArmoniK.Core.Common.Injection
  nameWithType: ArmoniK.Core.Common.Injection
- uid: ArmoniK.Core.Common.Injection.ConfigurationExt
  name: ConfigurationExt
  href: api/ArmoniK.Core.Common.Injection.ConfigurationExt.html
  commentId: T:ArmoniK.Core.Common.Injection.ConfigurationExt
  fullName: ArmoniK.Core.Common.Injection.ConfigurationExt
  nameWithType: ConfigurationExt
- uid: ArmoniK.Core.Common.Injection.ConfigurationExt.GetRequiredValue*
  name: GetRequiredValue
  href: api/ArmoniK.Core.Common.Injection.ConfigurationExt.html#ArmoniK_Core_Common_Injection_ConfigurationExt_GetRequiredValue_
  commentId: Overload:ArmoniK.Core.Common.Injection.ConfigurationExt.GetRequiredValue
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ConfigurationExt.GetRequiredValue
  nameWithType: ConfigurationExt.GetRequiredValue
- uid: ArmoniK.Core.Common.Injection.ConfigurationExt.GetRequiredValue``1(IConfiguration,System.String)
  name: GetRequiredValue<T>(IConfiguration, String)
  href: api/ArmoniK.Core.Common.Injection.ConfigurationExt.html#ArmoniK_Core_Common_Injection_ConfigurationExt_GetRequiredValue__1_IConfiguration_System_String_
  commentId: M:ArmoniK.Core.Common.Injection.ConfigurationExt.GetRequiredValue``1(IConfiguration,System.String)
  name.vb: GetRequiredValue(Of T)(IConfiguration, String)
  fullName: ArmoniK.Core.Common.Injection.ConfigurationExt.GetRequiredValue<T>(IConfiguration, System.String)
  fullName.vb: ArmoniK.Core.Common.Injection.ConfigurationExt.GetRequiredValue(Of T)(IConfiguration, System.String)
  nameWithType: ConfigurationExt.GetRequiredValue<T>(IConfiguration, String)
  nameWithType.vb: ConfigurationExt.GetRequiredValue(Of T)(IConfiguration, String)
- uid: ArmoniK.Core.Common.Injection.Options
  name: ArmoniK.Core.Common.Injection.Options
  href: api/ArmoniK.Core.Common.Injection.Options.html
  commentId: N:ArmoniK.Core.Common.Injection.Options
  fullName: ArmoniK.Core.Common.Injection.Options
  nameWithType: ArmoniK.Core.Common.Injection.Options
- uid: ArmoniK.Core.Common.Injection.Options.Components
  name: Components
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html
  commentId: T:ArmoniK.Core.Common.Injection.Options.Components
  fullName: ArmoniK.Core.Common.Injection.Options.Components
  nameWithType: Components
- uid: ArmoniK.Core.Common.Injection.Options.Components.LeaseProvider
  name: LeaseProvider
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_LeaseProvider
  commentId: P:ArmoniK.Core.Common.Injection.Options.Components.LeaseProvider
  fullName: ArmoniK.Core.Common.Injection.Options.Components.LeaseProvider
  nameWithType: Components.LeaseProvider
- uid: ArmoniK.Core.Common.Injection.Options.Components.LeaseProvider*
  name: LeaseProvider
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_LeaseProvider_
  commentId: Overload:ArmoniK.Core.Common.Injection.Options.Components.LeaseProvider
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.Options.Components.LeaseProvider
  nameWithType: Components.LeaseProvider
- uid: ArmoniK.Core.Common.Injection.Options.Components.ObjectStorage
  name: ObjectStorage
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_ObjectStorage
  commentId: P:ArmoniK.Core.Common.Injection.Options.Components.ObjectStorage
  fullName: ArmoniK.Core.Common.Injection.Options.Components.ObjectStorage
  nameWithType: Components.ObjectStorage
- uid: ArmoniK.Core.Common.Injection.Options.Components.ObjectStorage*
  name: ObjectStorage
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_ObjectStorage_
  commentId: Overload:ArmoniK.Core.Common.Injection.Options.Components.ObjectStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.Options.Components.ObjectStorage
  nameWithType: Components.ObjectStorage
- uid: ArmoniK.Core.Common.Injection.Options.Components.QueueStorage
  name: QueueStorage
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_QueueStorage
  commentId: P:ArmoniK.Core.Common.Injection.Options.Components.QueueStorage
  fullName: ArmoniK.Core.Common.Injection.Options.Components.QueueStorage
  nameWithType: Components.QueueStorage
- uid: ArmoniK.Core.Common.Injection.Options.Components.QueueStorage*
  name: QueueStorage
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_QueueStorage_
  commentId: Overload:ArmoniK.Core.Common.Injection.Options.Components.QueueStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.Options.Components.QueueStorage
  nameWithType: Components.QueueStorage
- uid: ArmoniK.Core.Common.Injection.Options.Components.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_SettingSection
  commentId: F:ArmoniK.Core.Common.Injection.Options.Components.SettingSection
  fullName: ArmoniK.Core.Common.Injection.Options.Components.SettingSection
  nameWithType: Components.SettingSection
- uid: ArmoniK.Core.Common.Injection.Options.Components.TableStorage
  name: TableStorage
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_TableStorage
  commentId: P:ArmoniK.Core.Common.Injection.Options.Components.TableStorage
  fullName: ArmoniK.Core.Common.Injection.Options.Components.TableStorage
  nameWithType: Components.TableStorage
- uid: ArmoniK.Core.Common.Injection.Options.Components.TableStorage*
  name: TableStorage
  href: api/ArmoniK.Core.Common.Injection.Options.Components.html#ArmoniK_Core_Common_Injection_Options_Components_TableStorage_
  commentId: Overload:ArmoniK.Core.Common.Injection.Options.Components.TableStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.Options.Components.TableStorage
  nameWithType: Components.TableStorage
- uid: ArmoniK.Core.Common.Injection.Options.ComputePlan
  name: ComputePlan
  href: api/ArmoniK.Core.Common.Injection.Options.ComputePlan.html
  commentId: T:ArmoniK.Core.Common.Injection.Options.ComputePlan
  fullName: ArmoniK.Core.Common.Injection.Options.ComputePlan
  nameWithType: ComputePlan
- uid: ArmoniK.Core.Common.Injection.Options.ComputePlan.GrpcChannel
  name: GrpcChannel
  href: api/ArmoniK.Core.Common.Injection.Options.ComputePlan.html#ArmoniK_Core_Common_Injection_Options_ComputePlan_GrpcChannel
  commentId: P:ArmoniK.Core.Common.Injection.Options.ComputePlan.GrpcChannel
  fullName: ArmoniK.Core.Common.Injection.Options.ComputePlan.GrpcChannel
  nameWithType: ComputePlan.GrpcChannel
- uid: ArmoniK.Core.Common.Injection.Options.ComputePlan.GrpcChannel*
  name: GrpcChannel
  href: api/ArmoniK.Core.Common.Injection.Options.ComputePlan.html#ArmoniK_Core_Common_Injection_Options_ComputePlan_GrpcChannel_
  commentId: Overload:ArmoniK.Core.Common.Injection.Options.ComputePlan.GrpcChannel
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.Options.ComputePlan.GrpcChannel
  nameWithType: ComputePlan.GrpcChannel
- uid: ArmoniK.Core.Common.Injection.Options.ComputePlan.MessageBatchSize
  name: MessageBatchSize
  href: api/ArmoniK.Core.Common.Injection.Options.ComputePlan.html#ArmoniK_Core_Common_Injection_Options_ComputePlan_MessageBatchSize
  commentId: P:ArmoniK.Core.Common.Injection.Options.ComputePlan.MessageBatchSize
  fullName: ArmoniK.Core.Common.Injection.Options.ComputePlan.MessageBatchSize
  nameWithType: ComputePlan.MessageBatchSize
- uid: ArmoniK.Core.Common.Injection.Options.ComputePlan.MessageBatchSize*
  name: MessageBatchSize
  href: api/ArmoniK.Core.Common.Injection.Options.ComputePlan.html#ArmoniK_Core_Common_Injection_Options_ComputePlan_MessageBatchSize_
  commentId: Overload:ArmoniK.Core.Common.Injection.Options.ComputePlan.MessageBatchSize
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.Options.ComputePlan.MessageBatchSize
  nameWithType: ComputePlan.MessageBatchSize
- uid: ArmoniK.Core.Common.Injection.Options.ComputePlan.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Common.Injection.Options.ComputePlan.html#ArmoniK_Core_Common_Injection_Options_ComputePlan_SettingSection
  commentId: F:ArmoniK.Core.Common.Injection.Options.ComputePlan.SettingSection
  fullName: ArmoniK.Core.Common.Injection.Options.ComputePlan.SettingSection
  nameWithType: ComputePlan.SettingSection
- uid: ArmoniK.Core.Common.Injection.Options.GrpcChannel
  name: GrpcChannel
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcChannel.html
  commentId: T:ArmoniK.Core.Common.Injection.Options.GrpcChannel
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcChannel
  nameWithType: GrpcChannel
- uid: ArmoniK.Core.Common.Injection.Options.GrpcChannel.Address
  name: Address
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcChannel.html#ArmoniK_Core_Common_Injection_Options_GrpcChannel_Address
  commentId: P:ArmoniK.Core.Common.Injection.Options.GrpcChannel.Address
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcChannel.Address
  nameWithType: GrpcChannel.Address
- uid: ArmoniK.Core.Common.Injection.Options.GrpcChannel.Address*
  name: Address
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcChannel.html#ArmoniK_Core_Common_Injection_Options_GrpcChannel_Address_
  commentId: Overload:ArmoniK.Core.Common.Injection.Options.GrpcChannel.Address
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcChannel.Address
  nameWithType: GrpcChannel.Address
- uid: ArmoniK.Core.Common.Injection.Options.GrpcChannel.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcChannel.html#ArmoniK_Core_Common_Injection_Options_GrpcChannel_SettingSection
  commentId: F:ArmoniK.Core.Common.Injection.Options.GrpcChannel.SettingSection
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcChannel.SettingSection
  nameWithType: GrpcChannel.SettingSection
- uid: ArmoniK.Core.Common.Injection.Options.GrpcChannel.SocketType
  name: SocketType
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcChannel.html#ArmoniK_Core_Common_Injection_Options_GrpcChannel_SocketType
  commentId: P:ArmoniK.Core.Common.Injection.Options.GrpcChannel.SocketType
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcChannel.SocketType
  nameWithType: GrpcChannel.SocketType
- uid: ArmoniK.Core.Common.Injection.Options.GrpcChannel.SocketType*
  name: SocketType
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcChannel.html#ArmoniK_Core_Common_Injection_Options_GrpcChannel_SocketType_
  commentId: Overload:ArmoniK.Core.Common.Injection.Options.GrpcChannel.SocketType
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcChannel.SocketType
  nameWithType: GrpcChannel.SocketType
- uid: ArmoniK.Core.Common.Injection.Options.GrpcSocketType
  name: GrpcSocketType
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcSocketType.html
  commentId: T:ArmoniK.Core.Common.Injection.Options.GrpcSocketType
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcSocketType
  nameWithType: GrpcSocketType
- uid: ArmoniK.Core.Common.Injection.Options.GrpcSocketType.UnixSocket
  name: UnixSocket
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcSocketType.html#ArmoniK_Core_Common_Injection_Options_GrpcSocketType_UnixSocket
  commentId: F:ArmoniK.Core.Common.Injection.Options.GrpcSocketType.UnixSocket
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcSocketType.UnixSocket
  nameWithType: GrpcSocketType.UnixSocket
- uid: ArmoniK.Core.Common.Injection.Options.GrpcSocketType.Web
  name: Web
  href: api/ArmoniK.Core.Common.Injection.Options.GrpcSocketType.html#ArmoniK_Core_Common_Injection_Options_GrpcSocketType_Web
  commentId: F:ArmoniK.Core.Common.Injection.Options.GrpcSocketType.Web
  fullName: ArmoniK.Core.Common.Injection.Options.GrpcSocketType.Web
  nameWithType: GrpcSocketType.Web
- uid: ArmoniK.Core.Common.Injection.ProviderBase`1
  name: ProviderBase<T>
  href: api/ArmoniK.Core.Common.Injection.ProviderBase-1.html
  commentId: T:ArmoniK.Core.Common.Injection.ProviderBase`1
  name.vb: ProviderBase(Of T)
  fullName: ArmoniK.Core.Common.Injection.ProviderBase<T>
  fullName.vb: ArmoniK.Core.Common.Injection.ProviderBase(Of T)
  nameWithType: ProviderBase<T>
  nameWithType.vb: ProviderBase(Of T)
- uid: ArmoniK.Core.Common.Injection.ProviderBase`1.#ctor(Func{Task{`0}})
  name: ProviderBase(Func<Task<T>>)
  href: api/ArmoniK.Core.Common.Injection.ProviderBase-1.html#ArmoniK_Core_Common_Injection_ProviderBase_1__ctor_Func_Task__0___
  commentId: M:ArmoniK.Core.Common.Injection.ProviderBase`1.#ctor(Func{Task{`0}})
  name.vb: ProviderBase(Func(Of Task(Of T)))
  fullName: ArmoniK.Core.Common.Injection.ProviderBase<T>.ProviderBase(Func<Task<T>>)
  fullName.vb: ArmoniK.Core.Common.Injection.ProviderBase(Of T).ProviderBase(Func(Of Task(Of T)))
  nameWithType: ProviderBase<T>.ProviderBase(Func<Task<T>>)
  nameWithType.vb: ProviderBase(Of T).ProviderBase(Func(Of Task(Of T)))
- uid: ArmoniK.Core.Common.Injection.ProviderBase`1.#ctor*
  name: ProviderBase
  href: api/ArmoniK.Core.Common.Injection.ProviderBase-1.html#ArmoniK_Core_Common_Injection_ProviderBase_1__ctor_
  commentId: Overload:ArmoniK.Core.Common.Injection.ProviderBase`1.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ProviderBase<T>.ProviderBase
  fullName.vb: ArmoniK.Core.Common.Injection.ProviderBase(Of T).ProviderBase
  nameWithType: ProviderBase<T>.ProviderBase
  nameWithType.vb: ProviderBase(Of T).ProviderBase
- uid: ArmoniK.Core.Common.Injection.ProviderBase`1.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Common.Injection.ProviderBase-1.html#ArmoniK_Core_Common_Injection_ProviderBase_1_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.Injection.ProviderBase`1.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.Injection.ProviderBase<T>.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName.vb: ArmoniK.Core.Common.Injection.ProviderBase(Of T).Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: ProviderBase<T>.Check(HealthCheckTag)
  nameWithType.vb: ProviderBase(Of T).Check(HealthCheckTag)
- uid: ArmoniK.Core.Common.Injection.ProviderBase`1.Check*
  name: Check
  href: api/ArmoniK.Core.Common.Injection.ProviderBase-1.html#ArmoniK_Core_Common_Injection_ProviderBase_1_Check_
  commentId: Overload:ArmoniK.Core.Common.Injection.ProviderBase`1.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ProviderBase<T>.Check
  fullName.vb: ArmoniK.Core.Common.Injection.ProviderBase(Of T).Check
  nameWithType: ProviderBase<T>.Check
  nameWithType.vb: ProviderBase(Of T).Check
- uid: ArmoniK.Core.Common.Injection.ProviderBase`1.GetAsync
  name: GetAsync()
  href: api/ArmoniK.Core.Common.Injection.ProviderBase-1.html#ArmoniK_Core_Common_Injection_ProviderBase_1_GetAsync
  commentId: M:ArmoniK.Core.Common.Injection.ProviderBase`1.GetAsync
  fullName: ArmoniK.Core.Common.Injection.ProviderBase<T>.GetAsync()
  fullName.vb: ArmoniK.Core.Common.Injection.ProviderBase(Of T).GetAsync()
  nameWithType: ProviderBase<T>.GetAsync()
  nameWithType.vb: ProviderBase(Of T).GetAsync()
- uid: ArmoniK.Core.Common.Injection.ProviderBase`1.GetAsync*
  name: GetAsync
  href: api/ArmoniK.Core.Common.Injection.ProviderBase-1.html#ArmoniK_Core_Common_Injection_ProviderBase_1_GetAsync_
  commentId: Overload:ArmoniK.Core.Common.Injection.ProviderBase`1.GetAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ProviderBase<T>.GetAsync
  fullName.vb: ArmoniK.Core.Common.Injection.ProviderBase(Of T).GetAsync
  nameWithType: ProviderBase<T>.GetAsync
  nameWithType.vb: ProviderBase(Of T).GetAsync
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt
  name: ServiceCollectionExt
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html
  commentId: T:ArmoniK.Core.Common.Injection.ServiceCollectionExt
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt
  nameWithType: ServiceCollectionExt
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddArmoniKWorkerConnection(IServiceCollection,IConfiguration)
  name: AddArmoniKWorkerConnection(IServiceCollection, IConfiguration)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddArmoniKWorkerConnection_IServiceCollection_IConfiguration_
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddArmoniKWorkerConnection(IServiceCollection,IConfiguration)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddArmoniKWorkerConnection(IServiceCollection, IConfiguration)
  nameWithType: ServiceCollectionExt.AddArmoniKWorkerConnection(IServiceCollection, IConfiguration)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddArmoniKWorkerConnection*
  name: AddArmoniKWorkerConnection
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddArmoniKWorkerConnection_
  commentId: Overload:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddArmoniKWorkerConnection
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddArmoniKWorkerConnection
  nameWithType: ServiceCollectionExt.AddArmoniKWorkerConnection
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption*
  name: AddOption
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddOption_
  commentId: Overload:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption
  nameWithType: ServiceCollectionExt.AddOption
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption``1(IServiceCollection,IConfiguration,System.String)
  name: AddOption<T>(IServiceCollection, IConfiguration, String)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddOption__1_IServiceCollection_IConfiguration_System_String_
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption``1(IServiceCollection,IConfiguration,System.String)
  name.vb: AddOption(Of T)(IServiceCollection, IConfiguration, String)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption<T>(IServiceCollection, IConfiguration, System.String)
  fullName.vb: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption(Of T)(IServiceCollection, IConfiguration, System.String)
  nameWithType: ServiceCollectionExt.AddOption<T>(IServiceCollection, IConfiguration, String)
  nameWithType.vb: ServiceCollectionExt.AddOption(Of T)(IServiceCollection, IConfiguration, String)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption``1(IServiceCollection,IConfiguration,System.String,``0@)
  name: AddOption<T>(IServiceCollection, IConfiguration, String, out T)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddOption__1_IServiceCollection_IConfiguration_System_String___0__
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption``1(IServiceCollection,IConfiguration,System.String,``0@)
  name.vb: AddOption(Of T)(IServiceCollection, IConfiguration, String, ByRef T)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption<T>(IServiceCollection, IConfiguration, System.String, out T)
  fullName.vb: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddOption(Of T)(IServiceCollection, IConfiguration, System.String, ByRef T)
  nameWithType: ServiceCollectionExt.AddOption<T>(IServiceCollection, IConfiguration, String, out T)
  nameWithType.vb: ServiceCollectionExt.AddOption(Of T)(IServiceCollection, IConfiguration, String, ByRef T)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck*
  name: AddSingletonWithHealthCheck
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddSingletonWithHealthCheck_
  commentId: Overload:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck
  nameWithType: ServiceCollectionExt.AddSingletonWithHealthCheck
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck``1(IServiceCollection,System.String)
  name: AddSingletonWithHealthCheck<T>(IServiceCollection, String)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddSingletonWithHealthCheck__1_IServiceCollection_System_String_
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck``1(IServiceCollection,System.String)
  name.vb: AddSingletonWithHealthCheck(Of T)(IServiceCollection, String)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck<T>(IServiceCollection, System.String)
  fullName.vb: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck(Of T)(IServiceCollection, System.String)
  nameWithType: ServiceCollectionExt.AddSingletonWithHealthCheck<T>(IServiceCollection, String)
  nameWithType.vb: ServiceCollectionExt.AddSingletonWithHealthCheck(Of T)(IServiceCollection, String)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck``2(IServiceCollection,System.String)
  name: AddSingletonWithHealthCheck<TService, TImplementation>(IServiceCollection, String)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddSingletonWithHealthCheck__2_IServiceCollection_System_String_
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck``2(IServiceCollection,System.String)
  name.vb: AddSingletonWithHealthCheck(Of TService, TImplementation)(IServiceCollection, String)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck<TService, TImplementation>(IServiceCollection, System.String)
  fullName.vb: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddSingletonWithHealthCheck(Of TService, TImplementation)(IServiceCollection, System.String)
  nameWithType: ServiceCollectionExt.AddSingletonWithHealthCheck<TService, TImplementation>(IServiceCollection, String)
  nameWithType.vb: ServiceCollectionExt.AddSingletonWithHealthCheck(Of TService, TImplementation)(IServiceCollection, String)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck*
  name: AddTransientWithHealthCheck
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddTransientWithHealthCheck_
  commentId: Overload:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck
  nameWithType: ServiceCollectionExt.AddTransientWithHealthCheck
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck``1(IServiceCollection,Func{IServiceProvider,``0},System.String)
  name: AddTransientWithHealthCheck<TService>(IServiceCollection, Func<IServiceProvider, TService>, String)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddTransientWithHealthCheck__1_IServiceCollection_Func_IServiceProvider___0__System_String_
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck``1(IServiceCollection,Func{IServiceProvider,``0},System.String)
  name.vb: AddTransientWithHealthCheck(Of TService)(IServiceCollection, Func(Of IServiceProvider, TService), String)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck<TService>(IServiceCollection, Func<IServiceProvider, TService>, System.String)
  fullName.vb: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck(Of TService)(IServiceCollection, Func(Of IServiceProvider, TService), System.String)
  nameWithType: ServiceCollectionExt.AddTransientWithHealthCheck<TService>(IServiceCollection, Func<IServiceProvider, TService>, String)
  nameWithType.vb: ServiceCollectionExt.AddTransientWithHealthCheck(Of TService)(IServiceCollection, Func(Of IServiceProvider, TService), String)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck``1(IServiceCollection,System.String)
  name: AddTransientWithHealthCheck<T>(IServiceCollection, String)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddTransientWithHealthCheck__1_IServiceCollection_System_String_
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck``1(IServiceCollection,System.String)
  name.vb: AddTransientWithHealthCheck(Of T)(IServiceCollection, String)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck<T>(IServiceCollection, System.String)
  fullName.vb: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck(Of T)(IServiceCollection, System.String)
  nameWithType: ServiceCollectionExt.AddTransientWithHealthCheck<T>(IServiceCollection, String)
  nameWithType.vb: ServiceCollectionExt.AddTransientWithHealthCheck(Of T)(IServiceCollection, String)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck``2(IServiceCollection,System.String)
  name: AddTransientWithHealthCheck<TService, TImplementation>(IServiceCollection, String)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_AddTransientWithHealthCheck__2_IServiceCollection_System_String_
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck``2(IServiceCollection,System.String)
  name.vb: AddTransientWithHealthCheck(Of TService, TImplementation)(IServiceCollection, String)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck<TService, TImplementation>(IServiceCollection, System.String)
  fullName.vb: ArmoniK.Core.Common.Injection.ServiceCollectionExt.AddTransientWithHealthCheck(Of TService, TImplementation)(IServiceCollection, System.String)
  nameWithType: ServiceCollectionExt.AddTransientWithHealthCheck<TService, TImplementation>(IServiceCollection, String)
  nameWithType.vb: ServiceCollectionExt.AddTransientWithHealthCheck(Of TService, TImplementation)(IServiceCollection, String)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.ValidateGrpcRequests(IServiceCollection)
  name: ValidateGrpcRequests(IServiceCollection)
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_ValidateGrpcRequests_IServiceCollection_
  commentId: M:ArmoniK.Core.Common.Injection.ServiceCollectionExt.ValidateGrpcRequests(IServiceCollection)
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.ValidateGrpcRequests(IServiceCollection)
  nameWithType: ServiceCollectionExt.ValidateGrpcRequests(IServiceCollection)
- uid: ArmoniK.Core.Common.Injection.ServiceCollectionExt.ValidateGrpcRequests*
  name: ValidateGrpcRequests
  href: api/ArmoniK.Core.Common.Injection.ServiceCollectionExt.html#ArmoniK_Core_Common_Injection_ServiceCollectionExt_ValidateGrpcRequests_
  commentId: Overload:ArmoniK.Core.Common.Injection.ServiceCollectionExt.ValidateGrpcRequests
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Injection.ServiceCollectionExt.ValidateGrpcRequests
  nameWithType: ServiceCollectionExt.ValidateGrpcRequests
- uid: ArmoniK.Core.Common.LoggerExt
  name: LoggerExt
  href: api/ArmoniK.Core.Common.LoggerExt.html
  commentId: T:ArmoniK.Core.Common.LoggerExt
  fullName: ArmoniK.Core.Common.LoggerExt
  nameWithType: LoggerExt
- uid: ArmoniK.Core.Common.LoggerExt.BeginNamedScope(ILogger,System.String,ValueTuple{System.String,System.Object}[])
  name: BeginNamedScope(ILogger, String, ValueTuple<String, Object>[])
  href: api/ArmoniK.Core.Common.LoggerExt.html#ArmoniK_Core_Common_LoggerExt_BeginNamedScope_ILogger_System_String_ValueTuple_System_String_System_Object____
  commentId: M:ArmoniK.Core.Common.LoggerExt.BeginNamedScope(ILogger,System.String,ValueTuple{System.String,System.Object}[])
  name.vb: BeginNamedScope(ILogger, String, ValueTuple(Of String, Object)())
  fullName: ArmoniK.Core.Common.LoggerExt.BeginNamedScope(ILogger, System.String, ValueTuple<System.String, System.Object>[])
  fullName.vb: ArmoniK.Core.Common.LoggerExt.BeginNamedScope(ILogger, System.String, ValueTuple(Of System.String, System.Object)())
  nameWithType: LoggerExt.BeginNamedScope(ILogger, String, ValueTuple<String, Object>[])
  nameWithType.vb: LoggerExt.BeginNamedScope(ILogger, String, ValueTuple(Of String, Object)())
- uid: ArmoniK.Core.Common.LoggerExt.BeginNamedScope*
  name: BeginNamedScope
  href: api/ArmoniK.Core.Common.LoggerExt.html#ArmoniK_Core_Common_LoggerExt_BeginNamedScope_
  commentId: Overload:ArmoniK.Core.Common.LoggerExt.BeginNamedScope
  isSpec: "True"
  fullName: ArmoniK.Core.Common.LoggerExt.BeginNamedScope
  nameWithType: LoggerExt.BeginNamedScope
- uid: ArmoniK.Core.Common.LoggerExt.BeginPropertyScope(ILogger,ValueTuple{System.String,System.Object}[])
  name: BeginPropertyScope(ILogger, ValueTuple<String, Object>[])
  href: api/ArmoniK.Core.Common.LoggerExt.html#ArmoniK_Core_Common_LoggerExt_BeginPropertyScope_ILogger_ValueTuple_System_String_System_Object____
  commentId: M:ArmoniK.Core.Common.LoggerExt.BeginPropertyScope(ILogger,ValueTuple{System.String,System.Object}[])
  name.vb: BeginPropertyScope(ILogger, ValueTuple(Of String, Object)())
  fullName: ArmoniK.Core.Common.LoggerExt.BeginPropertyScope(ILogger, ValueTuple<System.String, System.Object>[])
  fullName.vb: ArmoniK.Core.Common.LoggerExt.BeginPropertyScope(ILogger, ValueTuple(Of System.String, System.Object)())
  nameWithType: LoggerExt.BeginPropertyScope(ILogger, ValueTuple<String, Object>[])
  nameWithType.vb: LoggerExt.BeginPropertyScope(ILogger, ValueTuple(Of String, Object)())
- uid: ArmoniK.Core.Common.LoggerExt.BeginPropertyScope*
  name: BeginPropertyScope
  href: api/ArmoniK.Core.Common.LoggerExt.html#ArmoniK_Core_Common_LoggerExt_BeginPropertyScope_
  commentId: Overload:ArmoniK.Core.Common.LoggerExt.BeginPropertyScope
  isSpec: "True"
  fullName: ArmoniK.Core.Common.LoggerExt.BeginPropertyScope
  nameWithType: LoggerExt.BeginPropertyScope
- uid: ArmoniK.Core.Common.LoggerExt.LogFunction(ILogger,System.String,LogLevel,System.String,ValueTuple{System.String,System.Object}[])
  name: LogFunction(ILogger, String, LogLevel, String, ValueTuple<String, Object>[])
  href: api/ArmoniK.Core.Common.LoggerExt.html#ArmoniK_Core_Common_LoggerExt_LogFunction_ILogger_System_String_LogLevel_System_String_ValueTuple_System_String_System_Object____
  commentId: M:ArmoniK.Core.Common.LoggerExt.LogFunction(ILogger,System.String,LogLevel,System.String,ValueTuple{System.String,System.Object}[])
  name.vb: LogFunction(ILogger, String, LogLevel, String, ValueTuple(Of String, Object)())
  fullName: ArmoniK.Core.Common.LoggerExt.LogFunction(ILogger, System.String, LogLevel, System.String, ValueTuple<System.String, System.Object>[])
  fullName.vb: ArmoniK.Core.Common.LoggerExt.LogFunction(ILogger, System.String, LogLevel, System.String, ValueTuple(Of System.String, System.Object)())
  nameWithType: LoggerExt.LogFunction(ILogger, String, LogLevel, String, ValueTuple<String, Object>[])
  nameWithType.vb: LoggerExt.LogFunction(ILogger, String, LogLevel, String, ValueTuple(Of String, Object)())
- uid: ArmoniK.Core.Common.LoggerExt.LogFunction*
  name: LogFunction
  href: api/ArmoniK.Core.Common.LoggerExt.html#ArmoniK_Core_Common_LoggerExt_LogFunction_
  commentId: Overload:ArmoniK.Core.Common.LoggerExt.LogFunction
  isSpec: "True"
  fullName: ArmoniK.Core.Common.LoggerExt.LogFunction
  nameWithType: LoggerExt.LogFunction
- uid: ArmoniK.Core.Common.Pollster
  name: ArmoniK.Core.Common.Pollster
  href: api/ArmoniK.Core.Common.Pollster.html
  commentId: N:ArmoniK.Core.Common.Pollster
  fullName: ArmoniK.Core.Common.Pollster
  nameWithType: ArmoniK.Core.Common.Pollster
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue
  name: ComputeRequestQueue
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html
  commentId: T:ArmoniK.Core.Common.Pollster.ComputeRequestQueue
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue
  nameWithType: ComputeRequestQueue
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.#ctor(ILogger)
  name: ComputeRequestQueue(ILogger)
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue__ctor_ILogger_
  commentId: M:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.#ctor(ILogger)
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.ComputeRequestQueue(ILogger)
  nameWithType: ComputeRequestQueue.ComputeRequestQueue(ILogger)
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.#ctor*
  name: ComputeRequestQueue
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue__ctor_
  commentId: Overload:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.ComputeRequestQueue
  nameWithType: ComputeRequestQueue.ComputeRequestQueue
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddDataDependencyChunk(ByteString)
  name: AddDataDependencyChunk(ByteString)
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_AddDataDependencyChunk_ByteString_
  commentId: M:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddDataDependencyChunk(ByteString)
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddDataDependencyChunk(ByteString)
  nameWithType: ComputeRequestQueue.AddDataDependencyChunk(ByteString)
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddDataDependencyChunk*
  name: AddDataDependencyChunk
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_AddDataDependencyChunk_
  commentId: Overload:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddDataDependencyChunk
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddDataDependencyChunk
  nameWithType: ComputeRequestQueue.AddDataDependencyChunk
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddPayloadChunk(ByteString)
  name: AddPayloadChunk(ByteString)
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_AddPayloadChunk_ByteString_
  commentId: M:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddPayloadChunk(ByteString)
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddPayloadChunk(ByteString)
  nameWithType: ComputeRequestQueue.AddPayloadChunk(ByteString)
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddPayloadChunk*
  name: AddPayloadChunk
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_AddPayloadChunk_
  commentId: Overload:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddPayloadChunk
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.AddPayloadChunk
  nameWithType: ComputeRequestQueue.AddPayloadChunk
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompleteDataDependency
  name: CompleteDataDependency()
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_CompleteDataDependency
  commentId: M:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompleteDataDependency
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompleteDataDependency()
  nameWithType: ComputeRequestQueue.CompleteDataDependency()
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompleteDataDependency*
  name: CompleteDataDependency
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_CompleteDataDependency_
  commentId: Overload:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompleteDataDependency
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompleteDataDependency
  nameWithType: ComputeRequestQueue.CompleteDataDependency
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompletePayload
  name: CompletePayload()
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_CompletePayload
  commentId: M:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompletePayload
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompletePayload()
  nameWithType: ComputeRequestQueue.CompletePayload()
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompletePayload*
  name: CompletePayload
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_CompletePayload_
  commentId: Overload:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompletePayload
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.CompletePayload
  nameWithType: ComputeRequestQueue.CompletePayload
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.GetQueue
  name: GetQueue()
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_GetQueue
  commentId: M:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.GetQueue
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.GetQueue()
  nameWithType: ComputeRequestQueue.GetQueue()
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.GetQueue*
  name: GetQueue
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_GetQueue_
  commentId: Overload:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.GetQueue
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.GetQueue
  nameWithType: ComputeRequestQueue.GetQueue
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.Init(System.Int32,System.String,System.String,IDictionary{System.String,System.String},System.Nullable{ByteString},IList{System.String})
  name: Init(Int32, String, String, IDictionary<String, String>, Nullable<ByteString>, IList<String>)
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_Init_System_Int32_System_String_System_String_IDictionary_System_String_System_String__System_Nullable_ByteString__IList_System_String__
  commentId: M:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.Init(System.Int32,System.String,System.String,IDictionary{System.String,System.String},System.Nullable{ByteString},IList{System.String})
  name.vb: Init(Int32, String, String, IDictionary(Of String, String), Nullable(Of ByteString), IList(Of String))
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.Init(System.Int32, System.String, System.String, IDictionary<System.String, System.String>, System.Nullable<ByteString>, IList<System.String>)
  fullName.vb: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.Init(System.Int32, System.String, System.String, IDictionary(Of System.String, System.String), System.Nullable(Of ByteString), IList(Of System.String))
  nameWithType: ComputeRequestQueue.Init(Int32, String, String, IDictionary<String, String>, Nullable<ByteString>, IList<String>)
  nameWithType.vb: ComputeRequestQueue.Init(Int32, String, String, IDictionary(Of String, String), Nullable(Of ByteString), IList(Of String))
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.Init*
  name: Init
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_Init_
  commentId: Overload:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.Init
  nameWithType: ComputeRequestQueue.Init
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.InitDataDependency(System.String)
  name: InitDataDependency(String)
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_InitDataDependency_System_String_
  commentId: M:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.InitDataDependency(System.String)
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.InitDataDependency(System.String)
  nameWithType: ComputeRequestQueue.InitDataDependency(String)
- uid: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.InitDataDependency*
  name: InitDataDependency
  href: api/ArmoniK.Core.Common.Pollster.ComputeRequestQueue.html#ArmoniK_Core_Common_Pollster_ComputeRequestQueue_InitDataDependency_
  commentId: Overload:ArmoniK.Core.Common.Pollster.ComputeRequestQueue.InitDataDependency
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.ComputeRequestQueue.InitDataDependency
  nameWithType: ComputeRequestQueue.InitDataDependency
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher
  name: DataPrefetcher
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html
  commentId: T:ArmoniK.Core.Common.Pollster.DataPrefetcher
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher
  nameWithType: DataPrefetcher
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher.#ctor(ArmoniK.Core.Common.Storage.IObjectStorageFactory,ActivitySource,ILogger{ArmoniK.Core.Common.Pollster.DataPrefetcher})
  name: DataPrefetcher(IObjectStorageFactory, ActivitySource, ILogger<DataPrefetcher>)
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html#ArmoniK_Core_Common_Pollster_DataPrefetcher__ctor_ArmoniK_Core_Common_Storage_IObjectStorageFactory_ActivitySource_ILogger_ArmoniK_Core_Common_Pollster_DataPrefetcher__
  commentId: M:ArmoniK.Core.Common.Pollster.DataPrefetcher.#ctor(ArmoniK.Core.Common.Storage.IObjectStorageFactory,ActivitySource,ILogger{ArmoniK.Core.Common.Pollster.DataPrefetcher})
  name.vb: DataPrefetcher(IObjectStorageFactory, ActivitySource, ILogger(Of DataPrefetcher))
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher.DataPrefetcher(ArmoniK.Core.Common.Storage.IObjectStorageFactory, ActivitySource, ILogger<ArmoniK.Core.Common.Pollster.DataPrefetcher>)
  fullName.vb: ArmoniK.Core.Common.Pollster.DataPrefetcher.DataPrefetcher(ArmoniK.Core.Common.Storage.IObjectStorageFactory, ActivitySource, ILogger(Of ArmoniK.Core.Common.Pollster.DataPrefetcher))
  nameWithType: DataPrefetcher.DataPrefetcher(IObjectStorageFactory, ActivitySource, ILogger<DataPrefetcher>)
  nameWithType.vb: DataPrefetcher.DataPrefetcher(IObjectStorageFactory, ActivitySource, ILogger(Of DataPrefetcher))
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher.#ctor*
  name: DataPrefetcher
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html#ArmoniK_Core_Common_Pollster_DataPrefetcher__ctor_
  commentId: Overload:ArmoniK.Core.Common.Pollster.DataPrefetcher.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher.DataPrefetcher
  nameWithType: DataPrefetcher.DataPrefetcher
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html#ArmoniK_Core_Common_Pollster_DataPrefetcher_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.Pollster.DataPrefetcher.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: DataPrefetcher.Check(HealthCheckTag)
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher.Check*
  name: Check
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html#ArmoniK_Core_Common_Pollster_DataPrefetcher_Check_
  commentId: Overload:ArmoniK.Core.Common.Pollster.DataPrefetcher.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher.Check
  nameWithType: DataPrefetcher.Check
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html#ArmoniK_Core_Common_Pollster_DataPrefetcher_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.DataPrefetcher.Init(CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher.Init(CancellationToken)
  nameWithType: DataPrefetcher.Init(CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher.Init*
  name: Init
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html#ArmoniK_Core_Common_Pollster_DataPrefetcher_Init_
  commentId: Overload:ArmoniK.Core.Common.Pollster.DataPrefetcher.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher.Init
  nameWithType: DataPrefetcher.Init
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher.PrefetchDataAsync(TaskData,CancellationToken)
  name: PrefetchDataAsync(TaskData, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html#ArmoniK_Core_Common_Pollster_DataPrefetcher_PrefetchDataAsync_TaskData_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.DataPrefetcher.PrefetchDataAsync(TaskData,CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher.PrefetchDataAsync(TaskData, CancellationToken)
  nameWithType: DataPrefetcher.PrefetchDataAsync(TaskData, CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.DataPrefetcher.PrefetchDataAsync*
  name: PrefetchDataAsync
  href: api/ArmoniK.Core.Common.Pollster.DataPrefetcher.html#ArmoniK_Core_Common_Pollster_DataPrefetcher_PrefetchDataAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.DataPrefetcher.PrefetchDataAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.DataPrefetcher.PrefetchDataAsync
  nameWithType: DataPrefetcher.PrefetchDataAsync
- uid: ArmoniK.Core.Common.Pollster.Pollster
  name: Pollster
  href: api/ArmoniK.Core.Common.Pollster.Pollster.html
  commentId: T:ArmoniK.Core.Common.Pollster.Pollster
  fullName: ArmoniK.Core.Common.Pollster.Pollster
  nameWithType: Pollster
- uid: ArmoniK.Core.Common.Pollster.Pollster.#ctor(ArmoniK.Core.Common.Storage.IQueueStorage,ArmoniK.Core.Common.Pollster.PreconditionChecker,ArmoniK.Core.Common.Pollster.DataPrefetcher,ArmoniK.Core.Common.Pollster.RequestProcessor,ArmoniK.Core.Common.Injection.Options.ComputePlan,IHostApplicationLifetime,ActivitySource,ILogger{ArmoniK.Core.Common.Pollster.Pollster})
  name: Pollster(IQueueStorage, PreconditionChecker, DataPrefetcher, RequestProcessor, ComputePlan, IHostApplicationLifetime, ActivitySource, ILogger<Pollster>)
  href: api/ArmoniK.Core.Common.Pollster.Pollster.html#ArmoniK_Core_Common_Pollster_Pollster__ctor_ArmoniK_Core_Common_Storage_IQueueStorage_ArmoniK_Core_Common_Pollster_PreconditionChecker_ArmoniK_Core_Common_Pollster_DataPrefetcher_ArmoniK_Core_Common_Pollster_RequestProcessor_ArmoniK_Core_Common_Injection_Options_ComputePlan_IHostApplicationLifetime_ActivitySource_ILogger_ArmoniK_Core_Common_Pollster_Pollster__
  commentId: M:ArmoniK.Core.Common.Pollster.Pollster.#ctor(ArmoniK.Core.Common.Storage.IQueueStorage,ArmoniK.Core.Common.Pollster.PreconditionChecker,ArmoniK.Core.Common.Pollster.DataPrefetcher,ArmoniK.Core.Common.Pollster.RequestProcessor,ArmoniK.Core.Common.Injection.Options.ComputePlan,IHostApplicationLifetime,ActivitySource,ILogger{ArmoniK.Core.Common.Pollster.Pollster})
  name.vb: Pollster(IQueueStorage, PreconditionChecker, DataPrefetcher, RequestProcessor, ComputePlan, IHostApplicationLifetime, ActivitySource, ILogger(Of Pollster))
  fullName: ArmoniK.Core.Common.Pollster.Pollster.Pollster(ArmoniK.Core.Common.Storage.IQueueStorage, ArmoniK.Core.Common.Pollster.PreconditionChecker, ArmoniK.Core.Common.Pollster.DataPrefetcher, ArmoniK.Core.Common.Pollster.RequestProcessor, ArmoniK.Core.Common.Injection.Options.ComputePlan, IHostApplicationLifetime, ActivitySource, ILogger<ArmoniK.Core.Common.Pollster.Pollster>)
  fullName.vb: ArmoniK.Core.Common.Pollster.Pollster.Pollster(ArmoniK.Core.Common.Storage.IQueueStorage, ArmoniK.Core.Common.Pollster.PreconditionChecker, ArmoniK.Core.Common.Pollster.DataPrefetcher, ArmoniK.Core.Common.Pollster.RequestProcessor, ArmoniK.Core.Common.Injection.Options.ComputePlan, IHostApplicationLifetime, ActivitySource, ILogger(Of ArmoniK.Core.Common.Pollster.Pollster))
  nameWithType: Pollster.Pollster(IQueueStorage, PreconditionChecker, DataPrefetcher, RequestProcessor, ComputePlan, IHostApplicationLifetime, ActivitySource, ILogger<Pollster>)
  nameWithType.vb: Pollster.Pollster(IQueueStorage, PreconditionChecker, DataPrefetcher, RequestProcessor, ComputePlan, IHostApplicationLifetime, ActivitySource, ILogger(Of Pollster))
- uid: ArmoniK.Core.Common.Pollster.Pollster.#ctor*
  name: Pollster
  href: api/ArmoniK.Core.Common.Pollster.Pollster.html#ArmoniK_Core_Common_Pollster_Pollster__ctor_
  commentId: Overload:ArmoniK.Core.Common.Pollster.Pollster.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.Pollster.Pollster
  nameWithType: Pollster.Pollster
- uid: ArmoniK.Core.Common.Pollster.Pollster.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.Pollster.html#ArmoniK_Core_Common_Pollster_Pollster_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.Pollster.Init(CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.Pollster.Init(CancellationToken)
  nameWithType: Pollster.Init(CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.Pollster.Init*
  name: Init
  href: api/ArmoniK.Core.Common.Pollster.Pollster.html#ArmoniK_Core_Common_Pollster_Pollster_Init_
  commentId: Overload:ArmoniK.Core.Common.Pollster.Pollster.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.Pollster.Init
  nameWithType: Pollster.Init
- uid: ArmoniK.Core.Common.Pollster.Pollster.MainLoop(CancellationToken)
  name: MainLoop(CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.Pollster.html#ArmoniK_Core_Common_Pollster_Pollster_MainLoop_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.Pollster.MainLoop(CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.Pollster.MainLoop(CancellationToken)
  nameWithType: Pollster.MainLoop(CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.Pollster.MainLoop*
  name: MainLoop
  href: api/ArmoniK.Core.Common.Pollster.Pollster.html#ArmoniK_Core_Common_Pollster_Pollster_MainLoop_
  commentId: Overload:ArmoniK.Core.Common.Pollster.Pollster.MainLoop
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.Pollster.MainLoop
  nameWithType: Pollster.MainLoop
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker
  name: PreconditionChecker
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html
  commentId: T:ArmoniK.Core.Common.Pollster.PreconditionChecker
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker
  nameWithType: PreconditionChecker
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.#ctor(ArmoniK.Core.Common.Storage.ISessionTable,ArmoniK.Core.Common.Storage.ITaskTable,ArmoniK.Core.Common.Storage.IResultTable,ArmoniK.Core.Common.Storage.IDispatchTable,ActivitySource,ILogger{ArmoniK.Core.Common.Pollster.PreconditionChecker})
  name: PreconditionChecker(ISessionTable, ITaskTable, IResultTable, IDispatchTable, ActivitySource, ILogger<PreconditionChecker>)
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker__ctor_ArmoniK_Core_Common_Storage_ISessionTable_ArmoniK_Core_Common_Storage_ITaskTable_ArmoniK_Core_Common_Storage_IResultTable_ArmoniK_Core_Common_Storage_IDispatchTable_ActivitySource_ILogger_ArmoniK_Core_Common_Pollster_PreconditionChecker__
  commentId: M:ArmoniK.Core.Common.Pollster.PreconditionChecker.#ctor(ArmoniK.Core.Common.Storage.ISessionTable,ArmoniK.Core.Common.Storage.ITaskTable,ArmoniK.Core.Common.Storage.IResultTable,ArmoniK.Core.Common.Storage.IDispatchTable,ActivitySource,ILogger{ArmoniK.Core.Common.Pollster.PreconditionChecker})
  name.vb: PreconditionChecker(ISessionTable, ITaskTable, IResultTable, IDispatchTable, ActivitySource, ILogger(Of PreconditionChecker))
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.PreconditionChecker(ArmoniK.Core.Common.Storage.ISessionTable, ArmoniK.Core.Common.Storage.ITaskTable, ArmoniK.Core.Common.Storage.IResultTable, ArmoniK.Core.Common.Storage.IDispatchTable, ActivitySource, ILogger<ArmoniK.Core.Common.Pollster.PreconditionChecker>)
  fullName.vb: ArmoniK.Core.Common.Pollster.PreconditionChecker.PreconditionChecker(ArmoniK.Core.Common.Storage.ISessionTable, ArmoniK.Core.Common.Storage.ITaskTable, ArmoniK.Core.Common.Storage.IResultTable, ArmoniK.Core.Common.Storage.IDispatchTable, ActivitySource, ILogger(Of ArmoniK.Core.Common.Pollster.PreconditionChecker))
  nameWithType: PreconditionChecker.PreconditionChecker(ISessionTable, ITaskTable, IResultTable, IDispatchTable, ActivitySource, ILogger<PreconditionChecker>)
  nameWithType.vb: PreconditionChecker.PreconditionChecker(ISessionTable, ITaskTable, IResultTable, IDispatchTable, ActivitySource, ILogger(Of PreconditionChecker))
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.#ctor*
  name: PreconditionChecker
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker__ctor_
  commentId: Overload:ArmoniK.Core.Common.Pollster.PreconditionChecker.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.PreconditionChecker
  nameWithType: PreconditionChecker.PreconditionChecker
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.AcquireDispatchHandler(System.String,System.String,System.String,IDictionary{System.String,System.String},CancellationToken)
  name: AcquireDispatchHandler(String, String, String, IDictionary<String, String>, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker_AcquireDispatchHandler_System_String_System_String_System_String_IDictionary_System_String_System_String__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.PreconditionChecker.AcquireDispatchHandler(System.String,System.String,System.String,IDictionary{System.String,System.String},CancellationToken)
  name.vb: AcquireDispatchHandler(String, String, String, IDictionary(Of String, String), CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.AcquireDispatchHandler(System.String, System.String, System.String, IDictionary<System.String, System.String>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Pollster.PreconditionChecker.AcquireDispatchHandler(System.String, System.String, System.String, IDictionary(Of System.String, System.String), CancellationToken)
  nameWithType: PreconditionChecker.AcquireDispatchHandler(String, String, String, IDictionary<String, String>, CancellationToken)
  nameWithType.vb: PreconditionChecker.AcquireDispatchHandler(String, String, String, IDictionary(Of String, String), CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.AcquireDispatchHandler*
  name: AcquireDispatchHandler
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker_AcquireDispatchHandler_
  commentId: Overload:ArmoniK.Core.Common.Pollster.PreconditionChecker.AcquireDispatchHandler
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.AcquireDispatchHandler
  nameWithType: PreconditionChecker.AcquireDispatchHandler
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.Pollster.PreconditionChecker.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: PreconditionChecker.Check(HealthCheckTag)
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.Check*
  name: Check
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker_Check_
  commentId: Overload:ArmoniK.Core.Common.Pollster.PreconditionChecker.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.Check
  nameWithType: PreconditionChecker.Check
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.CheckPreconditionsAsync(ArmoniK.Core.Common.Storage.IQueueMessageHandler,CancellationToken)
  name: CheckPreconditionsAsync(IQueueMessageHandler, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker_CheckPreconditionsAsync_ArmoniK_Core_Common_Storage_IQueueMessageHandler_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.PreconditionChecker.CheckPreconditionsAsync(ArmoniK.Core.Common.Storage.IQueueMessageHandler,CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.CheckPreconditionsAsync(ArmoniK.Core.Common.Storage.IQueueMessageHandler, CancellationToken)
  nameWithType: PreconditionChecker.CheckPreconditionsAsync(IQueueMessageHandler, CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.CheckPreconditionsAsync*
  name: CheckPreconditionsAsync
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker_CheckPreconditionsAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.PreconditionChecker.CheckPreconditionsAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.CheckPreconditionsAsync
  nameWithType: PreconditionChecker.CheckPreconditionsAsync
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.PreconditionChecker.Init(CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.Init(CancellationToken)
  nameWithType: PreconditionChecker.Init(CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.PreconditionChecker.Init*
  name: Init
  href: api/ArmoniK.Core.Common.Pollster.PreconditionChecker.html#ArmoniK_Core_Common_Pollster_PreconditionChecker_Init_
  commentId: Overload:ArmoniK.Core.Common.Pollster.PreconditionChecker.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.PreconditionChecker.Init
  nameWithType: PreconditionChecker.Init
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor
  name: RequestProcessor
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html
  commentId: T:ArmoniK.Core.Common.Pollster.RequestProcessor
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor
  nameWithType: RequestProcessor
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.#ctor(ArmoniK.Core.Common.gRPC.WorkerClientProvider,ArmoniK.Core.Common.Storage.IObjectStorageFactory,ILogger{ArmoniK.Core.Common.Pollster.RequestProcessor},ArmoniK.Core.Common.gRPC.Services.Submitter,ArmoniK.Core.Common.Storage.IResultTable,ActivitySource)
  name: RequestProcessor(WorkerClientProvider, IObjectStorageFactory, ILogger<RequestProcessor>, Submitter, IResultTable, ActivitySource)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor__ctor_ArmoniK_Core_Common_gRPC_WorkerClientProvider_ArmoniK_Core_Common_Storage_IObjectStorageFactory_ILogger_ArmoniK_Core_Common_Pollster_RequestProcessor__ArmoniK_Core_Common_gRPC_Services_Submitter_ArmoniK_Core_Common_Storage_IResultTable_ActivitySource_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.#ctor(ArmoniK.Core.Common.gRPC.WorkerClientProvider,ArmoniK.Core.Common.Storage.IObjectStorageFactory,ILogger{ArmoniK.Core.Common.Pollster.RequestProcessor},ArmoniK.Core.Common.gRPC.Services.Submitter,ArmoniK.Core.Common.Storage.IResultTable,ActivitySource)
  name.vb: RequestProcessor(WorkerClientProvider, IObjectStorageFactory, ILogger(Of RequestProcessor), Submitter, IResultTable, ActivitySource)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.RequestProcessor(ArmoniK.Core.Common.gRPC.WorkerClientProvider, ArmoniK.Core.Common.Storage.IObjectStorageFactory, ILogger<ArmoniK.Core.Common.Pollster.RequestProcessor>, ArmoniK.Core.Common.gRPC.Services.Submitter, ArmoniK.Core.Common.Storage.IResultTable, ActivitySource)
  fullName.vb: ArmoniK.Core.Common.Pollster.RequestProcessor.RequestProcessor(ArmoniK.Core.Common.gRPC.WorkerClientProvider, ArmoniK.Core.Common.Storage.IObjectStorageFactory, ILogger(Of ArmoniK.Core.Common.Pollster.RequestProcessor), ArmoniK.Core.Common.gRPC.Services.Submitter, ArmoniK.Core.Common.Storage.IResultTable, ActivitySource)
  nameWithType: RequestProcessor.RequestProcessor(WorkerClientProvider, IObjectStorageFactory, ILogger<RequestProcessor>, Submitter, IResultTable, ActivitySource)
  nameWithType.vb: RequestProcessor.RequestProcessor(WorkerClientProvider, IObjectStorageFactory, ILogger(Of RequestProcessor), Submitter, IResultTable, ActivitySource)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.#ctor*
  name: RequestProcessor
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor__ctor_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.RequestProcessor
  nameWithType: RequestProcessor.RequestProcessor
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: RequestProcessor.Check(HealthCheckTag)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.Check*
  name: Check
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_Check_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.Check
  nameWithType: RequestProcessor.Check
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.Init(CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.Init(CancellationToken)
  nameWithType: RequestProcessor.Init(CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.Init*
  name: Init
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_Init_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.Init
  nameWithType: RequestProcessor.Init
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessAsync(ArmoniK.Core.Common.Storage.IQueueMessageHandler,TaskData,Dispatch,Queue{ProcessRequest.Types.ComputeRequest},CancellationToken)
  name: ProcessAsync(IQueueMessageHandler, TaskData, Dispatch, Queue<ProcessRequest.Types.ComputeRequest>, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_ProcessAsync_ArmoniK_Core_Common_Storage_IQueueMessageHandler_TaskData_Dispatch_Queue_ProcessRequest_Types_ComputeRequest__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessAsync(ArmoniK.Core.Common.Storage.IQueueMessageHandler,TaskData,Dispatch,Queue{ProcessRequest.Types.ComputeRequest},CancellationToken)
  name.vb: ProcessAsync(IQueueMessageHandler, TaskData, Dispatch, Queue(Of ProcessRequest.Types.ComputeRequest), CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessAsync(ArmoniK.Core.Common.Storage.IQueueMessageHandler, TaskData, Dispatch, Queue<ProcessRequest.Types.ComputeRequest>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessAsync(ArmoniK.Core.Common.Storage.IQueueMessageHandler, TaskData, Dispatch, Queue(Of ProcessRequest.Types.ComputeRequest), CancellationToken)
  nameWithType: RequestProcessor.ProcessAsync(IQueueMessageHandler, TaskData, Dispatch, Queue<ProcessRequest.Types.ComputeRequest>, CancellationToken)
  nameWithType.vb: RequestProcessor.ProcessAsync(IQueueMessageHandler, TaskData, Dispatch, Queue(Of ProcessRequest.Types.ComputeRequest), CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessAsync*
  name: ProcessAsync
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_ProcessAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessAsync
  nameWithType: RequestProcessor.ProcessAsync
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessInternalsAsync(TaskData,Dispatch,Queue{ProcessRequest.Types.ComputeRequest},CancellationToken)
  name: ProcessInternalsAsync(TaskData, Dispatch, Queue<ProcessRequest.Types.ComputeRequest>, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_ProcessInternalsAsync_TaskData_Dispatch_Queue_ProcessRequest_Types_ComputeRequest__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessInternalsAsync(TaskData,Dispatch,Queue{ProcessRequest.Types.ComputeRequest},CancellationToken)
  name.vb: ProcessInternalsAsync(TaskData, Dispatch, Queue(Of ProcessRequest.Types.ComputeRequest), CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessInternalsAsync(TaskData, Dispatch, Queue<ProcessRequest.Types.ComputeRequest>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessInternalsAsync(TaskData, Dispatch, Queue(Of ProcessRequest.Types.ComputeRequest), CancellationToken)
  nameWithType: RequestProcessor.ProcessInternalsAsync(TaskData, Dispatch, Queue<ProcessRequest.Types.ComputeRequest>, CancellationToken)
  nameWithType.vb: RequestProcessor.ProcessInternalsAsync(TaskData, Dispatch, Queue(Of ProcessRequest.Types.ComputeRequest), CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessInternalsAsync*
  name: ProcessInternalsAsync
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_ProcessInternalsAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessInternalsAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.ProcessInternalsAsync
  nameWithType: RequestProcessor.ProcessInternalsAsync
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideCommonDataAsync(IAsyncStreamWriter{ProcessRequest},ProcessReply)
  name: ProvideCommonDataAsync(IAsyncStreamWriter<ProcessRequest>, ProcessReply)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_ProvideCommonDataAsync_IAsyncStreamWriter_ProcessRequest__ProcessReply_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideCommonDataAsync(IAsyncStreamWriter{ProcessRequest},ProcessReply)
  name.vb: ProvideCommonDataAsync(IAsyncStreamWriter(Of ProcessRequest), ProcessReply)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideCommonDataAsync(IAsyncStreamWriter<ProcessRequest>, ProcessReply)
  fullName.vb: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideCommonDataAsync(IAsyncStreamWriter(Of ProcessRequest), ProcessReply)
  nameWithType: RequestProcessor.ProvideCommonDataAsync(IAsyncStreamWriter<ProcessRequest>, ProcessReply)
  nameWithType.vb: RequestProcessor.ProvideCommonDataAsync(IAsyncStreamWriter(Of ProcessRequest), ProcessReply)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideCommonDataAsync*
  name: ProvideCommonDataAsync
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_ProvideCommonDataAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideCommonDataAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideCommonDataAsync
  nameWithType: RequestProcessor.ProvideCommonDataAsync
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideDirectDataAsync(IAsyncStreamWriter{ProcessRequest},ProcessReply)
  name: ProvideDirectDataAsync(IAsyncStreamWriter<ProcessRequest>, ProcessReply)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_ProvideDirectDataAsync_IAsyncStreamWriter_ProcessRequest__ProcessReply_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideDirectDataAsync(IAsyncStreamWriter{ProcessRequest},ProcessReply)
  name.vb: ProvideDirectDataAsync(IAsyncStreamWriter(Of ProcessRequest), ProcessReply)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideDirectDataAsync(IAsyncStreamWriter<ProcessRequest>, ProcessReply)
  fullName.vb: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideDirectDataAsync(IAsyncStreamWriter(Of ProcessRequest), ProcessReply)
  nameWithType: RequestProcessor.ProvideDirectDataAsync(IAsyncStreamWriter<ProcessRequest>, ProcessReply)
  nameWithType.vb: RequestProcessor.ProvideDirectDataAsync(IAsyncStreamWriter(Of ProcessRequest), ProcessReply)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideDirectDataAsync*
  name: ProvideDirectDataAsync
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_ProvideDirectDataAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideDirectDataAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.ProvideDirectDataAsync
  nameWithType: RequestProcessor.ProvideDirectDataAsync
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.StoreResultAsync(ArmoniK.Core.Common.Storage.IObjectStorage,ProcessReply,IList{ProcessReply},System.String,System.String,CancellationToken)
  name: StoreResultAsync(IObjectStorage, ProcessReply, IList<ProcessReply>, String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_StoreResultAsync_ArmoniK_Core_Common_Storage_IObjectStorage_ProcessReply_IList_ProcessReply__System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.StoreResultAsync(ArmoniK.Core.Common.Storage.IObjectStorage,ProcessReply,IList{ProcessReply},System.String,System.String,CancellationToken)
  name.vb: StoreResultAsync(IObjectStorage, ProcessReply, IList(Of ProcessReply), String, String, CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.StoreResultAsync(ArmoniK.Core.Common.Storage.IObjectStorage, ProcessReply, IList<ProcessReply>, System.String, System.String, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Pollster.RequestProcessor.StoreResultAsync(ArmoniK.Core.Common.Storage.IObjectStorage, ProcessReply, IList(Of ProcessReply), System.String, System.String, CancellationToken)
  nameWithType: RequestProcessor.StoreResultAsync(IObjectStorage, ProcessReply, IList<ProcessReply>, String, String, CancellationToken)
  nameWithType.vb: RequestProcessor.StoreResultAsync(IObjectStorage, ProcessReply, IList(Of ProcessReply), String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.StoreResultAsync*
  name: StoreResultAsync
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_StoreResultAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.StoreResultAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.StoreResultAsync
  nameWithType: RequestProcessor.StoreResultAsync
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitLargeTasksAsync(TaskData,System.String,ProcessReply,IList{ProcessReply},CancellationToken)
  name: SubmitLargeTasksAsync(TaskData, String, ProcessReply, IList<ProcessReply>, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_SubmitLargeTasksAsync_TaskData_System_String_ProcessReply_IList_ProcessReply__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitLargeTasksAsync(TaskData,System.String,ProcessReply,IList{ProcessReply},CancellationToken)
  name.vb: SubmitLargeTasksAsync(TaskData, String, ProcessReply, IList(Of ProcessReply), CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitLargeTasksAsync(TaskData, System.String, ProcessReply, IList<ProcessReply>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitLargeTasksAsync(TaskData, System.String, ProcessReply, IList(Of ProcessReply), CancellationToken)
  nameWithType: RequestProcessor.SubmitLargeTasksAsync(TaskData, String, ProcessReply, IList<ProcessReply>, CancellationToken)
  nameWithType.vb: RequestProcessor.SubmitLargeTasksAsync(TaskData, String, ProcessReply, IList(Of ProcessReply), CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitLargeTasksAsync*
  name: SubmitLargeTasksAsync
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_SubmitLargeTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitLargeTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitLargeTasksAsync
  nameWithType: RequestProcessor.SubmitLargeTasksAsync
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitSmallTasksAsync(TaskData,System.String,ProcessReply,CancellationToken)
  name: SubmitSmallTasksAsync(TaskData, String, ProcessReply, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_SubmitSmallTasksAsync_TaskData_System_String_ProcessReply_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitSmallTasksAsync(TaskData,System.String,ProcessReply,CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitSmallTasksAsync(TaskData, System.String, ProcessReply, CancellationToken)
  nameWithType: RequestProcessor.SubmitSmallTasksAsync(TaskData, String, ProcessReply, CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitSmallTasksAsync*
  name: SubmitSmallTasksAsync
  href: api/ArmoniK.Core.Common.Pollster.RequestProcessor.html#ArmoniK_Core_Common_Pollster_RequestProcessor_SubmitSmallTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitSmallTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.RequestProcessor.SubmitSmallTasksAsync
  nameWithType: RequestProcessor.SubmitSmallTasksAsync
- uid: ArmoniK.Core.Common.Pollster.WorkerClientExtensions
  name: WorkerClientExtensions
  href: api/ArmoniK.Core.Common.Pollster.WorkerClientExtensions.html
  commentId: T:ArmoniK.Core.Common.Pollster.WorkerClientExtensions
  fullName: ArmoniK.Core.Common.Pollster.WorkerClientExtensions
  nameWithType: WorkerClientExtensions
- uid: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest(IAsyncEnumerable{ProcessReply},CancellationToken,ILogger)
  name: ReconstituteTaskRequest(IAsyncEnumerable<ProcessReply>, CancellationToken, ILogger)
  href: api/ArmoniK.Core.Common.Pollster.WorkerClientExtensions.html#ArmoniK_Core_Common_Pollster_WorkerClientExtensions_ReconstituteTaskRequest_IAsyncEnumerable_ProcessReply__CancellationToken_ILogger_
  commentId: M:ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest(IAsyncEnumerable{ProcessReply},CancellationToken,ILogger)
  name.vb: ReconstituteTaskRequest(IAsyncEnumerable(Of ProcessReply), CancellationToken, ILogger)
  fullName: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest(IAsyncEnumerable<ProcessReply>, CancellationToken, ILogger)
  fullName.vb: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest(IAsyncEnumerable(Of ProcessReply), CancellationToken, ILogger)
  nameWithType: WorkerClientExtensions.ReconstituteTaskRequest(IAsyncEnumerable<ProcessReply>, CancellationToken, ILogger)
  nameWithType.vb: WorkerClientExtensions.ReconstituteTaskRequest(IAsyncEnumerable(Of ProcessReply), CancellationToken, ILogger)
- uid: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest(IEnumerable{ProcessReply},ILogger)
  name: ReconstituteTaskRequest(IEnumerable<ProcessReply>, ILogger)
  href: api/ArmoniK.Core.Common.Pollster.WorkerClientExtensions.html#ArmoniK_Core_Common_Pollster_WorkerClientExtensions_ReconstituteTaskRequest_IEnumerable_ProcessReply__ILogger_
  commentId: M:ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest(IEnumerable{ProcessReply},ILogger)
  name.vb: ReconstituteTaskRequest(IEnumerable(Of ProcessReply), ILogger)
  fullName: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest(IEnumerable<ProcessReply>, ILogger)
  fullName.vb: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest(IEnumerable(Of ProcessReply), ILogger)
  nameWithType: WorkerClientExtensions.ReconstituteTaskRequest(IEnumerable<ProcessReply>, ILogger)
  nameWithType.vb: WorkerClientExtensions.ReconstituteTaskRequest(IEnumerable(Of ProcessReply), ILogger)
- uid: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest*
  name: ReconstituteTaskRequest
  href: api/ArmoniK.Core.Common.Pollster.WorkerClientExtensions.html#ArmoniK_Core_Common_Pollster_WorkerClientExtensions_ReconstituteTaskRequest_
  commentId: Overload:ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ReconstituteTaskRequest
  nameWithType: WorkerClientExtensions.ReconstituteTaskRequest
- uid: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.Separate(IAsyncStreamReader{ProcessReply},ILogger,CancellationToken)
  name: Separate(IAsyncStreamReader<ProcessReply>, ILogger, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.WorkerClientExtensions.html#ArmoniK_Core_Common_Pollster_WorkerClientExtensions_Separate_IAsyncStreamReader_ProcessReply__ILogger_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.WorkerClientExtensions.Separate(IAsyncStreamReader{ProcessReply},ILogger,CancellationToken)
  name.vb: Separate(IAsyncStreamReader(Of ProcessReply), ILogger, CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.Separate(IAsyncStreamReader<ProcessReply>, ILogger, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.Separate(IAsyncStreamReader(Of ProcessReply), ILogger, CancellationToken)
  nameWithType: WorkerClientExtensions.Separate(IAsyncStreamReader<ProcessReply>, ILogger, CancellationToken)
  nameWithType.vb: WorkerClientExtensions.Separate(IAsyncStreamReader(Of ProcessReply), ILogger, CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.Separate*
  name: Separate
  href: api/ArmoniK.Core.Common.Pollster.WorkerClientExtensions.html#ArmoniK_Core_Common_Pollster_WorkerClientExtensions_Separate_
  commentId: Overload:ArmoniK.Core.Common.Pollster.WorkerClientExtensions.Separate
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.Separate
  nameWithType: WorkerClientExtensions.Separate
- uid: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ToDataReply(IAsyncEnumerable{System.Byte[]},System.String,System.String,CancellationToken)
  name: ToDataReply(IAsyncEnumerable<Byte[]>, String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Pollster.WorkerClientExtensions.html#ArmoniK_Core_Common_Pollster_WorkerClientExtensions_ToDataReply_IAsyncEnumerable_System_Byte____System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ToDataReply(IAsyncEnumerable{System.Byte[]},System.String,System.String,CancellationToken)
  name.vb: ToDataReply(IAsyncEnumerable(Of Byte()), String, String, CancellationToken)
  fullName: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ToDataReply(IAsyncEnumerable<System.Byte[]>, System.String, System.String, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ToDataReply(IAsyncEnumerable(Of System.Byte()), System.String, System.String, CancellationToken)
  nameWithType: WorkerClientExtensions.ToDataReply(IAsyncEnumerable<Byte[]>, String, String, CancellationToken)
  nameWithType.vb: WorkerClientExtensions.ToDataReply(IAsyncEnumerable(Of Byte()), String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ToDataReply*
  name: ToDataReply
  href: api/ArmoniK.Core.Common.Pollster.WorkerClientExtensions.html#ArmoniK_Core_Common_Pollster_WorkerClientExtensions_ToDataReply_
  commentId: Overload:ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ToDataReply
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Pollster.WorkerClientExtensions.ToDataReply
  nameWithType: WorkerClientExtensions.ToDataReply
- uid: ArmoniK.Core.Common.StateMachines
  name: ArmoniK.Core.Common.StateMachines
  href: api/ArmoniK.Core.Common.StateMachines.html
  commentId: N:ArmoniK.Core.Common.StateMachines
  fullName: ArmoniK.Core.Common.StateMachines
  nameWithType: ArmoniK.Core.Common.StateMachines
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine
  name: ComputeRequestStateMachine
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html
  commentId: T:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine
  nameWithType: ComputeRequestStateMachine
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.#ctor(ILogger)
  name: ComputeRequestStateMachine(ILogger)
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine__ctor_ILogger_
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.#ctor(ILogger)
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.ComputeRequestStateMachine(ILogger)
  nameWithType: ComputeRequestStateMachine.ComputeRequestStateMachine(ILogger)
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.#ctor*
  name: ComputeRequestStateMachine
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine__ctor_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.ComputeRequestStateMachine
  nameWithType: ComputeRequestStateMachine.ComputeRequestStateMachine
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddDataDependencyChunk
  name: AddDataDependencyChunk()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_AddDataDependencyChunk
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddDataDependencyChunk
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddDataDependencyChunk()
  nameWithType: ComputeRequestStateMachine.AddDataDependencyChunk()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddDataDependencyChunk*
  name: AddDataDependencyChunk
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_AddDataDependencyChunk_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddDataDependencyChunk
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddDataDependencyChunk
  nameWithType: ComputeRequestStateMachine.AddDataDependencyChunk
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddPayloadChunk
  name: AddPayloadChunk()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_AddPayloadChunk
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddPayloadChunk
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddPayloadChunk()
  nameWithType: ComputeRequestStateMachine.AddPayloadChunk()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddPayloadChunk*
  name: AddPayloadChunk
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_AddPayloadChunk_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddPayloadChunk
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.AddPayloadChunk
  nameWithType: ComputeRequestStateMachine.AddPayloadChunk
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteDataDependency
  name: CompleteDataDependency()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_CompleteDataDependency
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteDataDependency
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteDataDependency()
  nameWithType: ComputeRequestStateMachine.CompleteDataDependency()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteDataDependency*
  name: CompleteDataDependency
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_CompleteDataDependency_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteDataDependency
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteDataDependency
  nameWithType: ComputeRequestStateMachine.CompleteDataDependency
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompletePayload
  name: CompletePayload()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_CompletePayload
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompletePayload
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompletePayload()
  nameWithType: ComputeRequestStateMachine.CompletePayload()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompletePayload*
  name: CompletePayload
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_CompletePayload_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompletePayload
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompletePayload
  nameWithType: ComputeRequestStateMachine.CompletePayload
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteRequest
  name: CompleteRequest()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_CompleteRequest
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteRequest
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteRequest()
  nameWithType: ComputeRequestStateMachine.CompleteRequest()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteRequest*
  name: CompleteRequest
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_CompleteRequest_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteRequest
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.CompleteRequest
  nameWithType: ComputeRequestStateMachine.CompleteRequest
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GenerateGraph
  name: GenerateGraph()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_GenerateGraph
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GenerateGraph
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GenerateGraph()
  nameWithType: ComputeRequestStateMachine.GenerateGraph()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GenerateGraph*
  name: GenerateGraph
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_GenerateGraph_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GenerateGraph
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GenerateGraph
  nameWithType: ComputeRequestStateMachine.GenerateGraph
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GetState
  name: GetState()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_GetState
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GetState
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GetState()
  nameWithType: ComputeRequestStateMachine.GetState()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GetState*
  name: GetState
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_GetState_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GetState
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.GetState
  nameWithType: ComputeRequestStateMachine.GetState
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitDataDependency
  name: InitDataDependency()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_InitDataDependency
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitDataDependency
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitDataDependency()
  nameWithType: ComputeRequestStateMachine.InitDataDependency()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitDataDependency*
  name: InitDataDependency
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_InitDataDependency_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitDataDependency
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitDataDependency
  nameWithType: ComputeRequestStateMachine.InitDataDependency
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitRequest
  name: InitRequest()
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_InitRequest
  commentId: M:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitRequest
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitRequest()
  nameWithType: ComputeRequestStateMachine.InitRequest()
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitRequest*
  name: InitRequest
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_InitRequest_
  commentId: Overload:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitRequest
  isSpec: "True"
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.InitRequest
  nameWithType: ComputeRequestStateMachine.InitRequest
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State
  name: ComputeRequestStateMachine.State
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html
  commentId: T:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State
  nameWithType: ComputeRequestStateMachine.State
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.Data
  name: Data
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_State_Data
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.Data
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.Data
  nameWithType: ComputeRequestStateMachine.State.Data
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataComplete
  name: DataComplete
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_State_DataComplete
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataComplete
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataComplete
  nameWithType: ComputeRequestStateMachine.State.DataComplete
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataInit
  name: DataInit
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_State_DataInit
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataInit
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataInit
  nameWithType: ComputeRequestStateMachine.State.DataInit
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataLast
  name: DataLast
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_State_DataLast
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataLast
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.DataLast
  nameWithType: ComputeRequestStateMachine.State.DataLast
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.Init
  name: Init
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_State_Init
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.Init
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.Init
  nameWithType: ComputeRequestStateMachine.State.Init
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.InitRequest
  name: InitRequest
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_State_InitRequest
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.InitRequest
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.InitRequest
  nameWithType: ComputeRequestStateMachine.State.InitRequest
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.PayloadComplete
  name: PayloadComplete
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_State_PayloadComplete
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.PayloadComplete
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.PayloadComplete
  nameWithType: ComputeRequestStateMachine.State.PayloadComplete
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.PayloadData
  name: PayloadData
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_State_PayloadData
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.PayloadData
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.State.PayloadData
  nameWithType: ComputeRequestStateMachine.State.PayloadData
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers
  name: ComputeRequestStateMachine.Triggers
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.html
  commentId: T:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers
  nameWithType: ComputeRequestStateMachine.Triggers
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.AddDataDependencyChunk
  name: AddDataDependencyChunk
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_Triggers_AddDataDependencyChunk
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.AddDataDependencyChunk
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.AddDataDependencyChunk
  nameWithType: ComputeRequestStateMachine.Triggers.AddDataDependencyChunk
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.AddPayloadChunk
  name: AddPayloadChunk
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_Triggers_AddPayloadChunk
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.AddPayloadChunk
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.AddPayloadChunk
  nameWithType: ComputeRequestStateMachine.Triggers.AddPayloadChunk
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompleteDataDependency
  name: CompleteDataDependency
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_Triggers_CompleteDataDependency
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompleteDataDependency
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompleteDataDependency
  nameWithType: ComputeRequestStateMachine.Triggers.CompleteDataDependency
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompletePayload
  name: CompletePayload
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_Triggers_CompletePayload
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompletePayload
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompletePayload
  nameWithType: ComputeRequestStateMachine.Triggers.CompletePayload
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompleteRequest
  name: CompleteRequest
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_Triggers_CompleteRequest
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompleteRequest
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.CompleteRequest
  nameWithType: ComputeRequestStateMachine.Triggers.CompleteRequest
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.InitDataDependency
  name: InitDataDependency
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_Triggers_InitDataDependency
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.InitDataDependency
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.InitDataDependency
  nameWithType: ComputeRequestStateMachine.Triggers.InitDataDependency
- uid: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.InitRequest
  name: InitRequest
  href: api/ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.html#ArmoniK_Core_Common_StateMachines_ComputeRequestStateMachine_Triggers_InitRequest
  commentId: F:ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.InitRequest
  fullName: ArmoniK.Core.Common.StateMachines.ComputeRequestStateMachine.Triggers.InitRequest
  nameWithType: ComputeRequestStateMachine.Triggers.InitRequest
- uid: ArmoniK.Core.Common.Storage
  name: ArmoniK.Core.Common.Storage
  href: api/ArmoniK.Core.Common.Storage.html
  commentId: N:ArmoniK.Core.Common.Storage
  fullName: ArmoniK.Core.Common.Storage
  nameWithType: ArmoniK.Core.Common.Storage
- uid: ArmoniK.Core.Common.Storage.IDispatchTable
  name: IDispatchTable
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html
  commentId: T:ArmoniK.Core.Common.Storage.IDispatchTable
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable
  nameWithType: IDispatchTable
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.AddStatusToDispatch(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: AddStatusToDispatch(String, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_AddStatusToDispatch_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IDispatchTable.AddStatusToDispatch(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.AddStatusToDispatch(System.String, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: IDispatchTable.AddStatusToDispatch(String, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.AddStatusToDispatch*
  name: AddStatusToDispatch
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_AddStatusToDispatch_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.AddStatusToDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.AddStatusToDispatch
  nameWithType: IDispatchTable.AddStatusToDispatch
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatch(System.String,CancellationToken)
  name: DeleteDispatch(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_DeleteDispatch_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatch(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatch(System.String, CancellationToken)
  nameWithType: IDispatchTable.DeleteDispatch(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatch*
  name: DeleteDispatch
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_DeleteDispatch_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatch
  nameWithType: IDispatchTable.DeleteDispatch
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatchFromTaskIdAsync(System.String,CancellationToken)
  name: DeleteDispatchFromTaskIdAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_DeleteDispatchFromTaskIdAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatchFromTaskIdAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatchFromTaskIdAsync(System.String, CancellationToken)
  nameWithType: IDispatchTable.DeleteDispatchFromTaskIdAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatchFromTaskIdAsync*
  name: DeleteDispatchFromTaskIdAsync
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_DeleteDispatchFromTaskIdAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatchFromTaskIdAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.DeleteDispatchFromTaskIdAsync
  nameWithType: IDispatchTable.DeleteDispatchFromTaskIdAsync
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.DispatchRefreshPeriod
  name: DispatchRefreshPeriod
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_DispatchRefreshPeriod
  commentId: P:ArmoniK.Core.Common.Storage.IDispatchTable.DispatchRefreshPeriod
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.DispatchRefreshPeriod
  nameWithType: IDispatchTable.DispatchRefreshPeriod
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.DispatchRefreshPeriod*
  name: DispatchRefreshPeriod
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_DispatchRefreshPeriod_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.DispatchRefreshPeriod
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.DispatchRefreshPeriod
  nameWithType: IDispatchTable.DispatchRefreshPeriod
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.DispatchTimeToLiveDuration
  name: DispatchTimeToLiveDuration
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_DispatchTimeToLiveDuration
  commentId: P:ArmoniK.Core.Common.Storage.IDispatchTable.DispatchTimeToLiveDuration
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.DispatchTimeToLiveDuration
  nameWithType: IDispatchTable.DispatchTimeToLiveDuration
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.DispatchTimeToLiveDuration*
  name: DispatchTimeToLiveDuration
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_DispatchTimeToLiveDuration_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.DispatchTimeToLiveDuration
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.DispatchTimeToLiveDuration
  nameWithType: IDispatchTable.DispatchTimeToLiveDuration
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.ExtendDispatchTtl(System.String,CancellationToken)
  name: ExtendDispatchTtl(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_ExtendDispatchTtl_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IDispatchTable.ExtendDispatchTtl(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.ExtendDispatchTtl(System.String, CancellationToken)
  nameWithType: IDispatchTable.ExtendDispatchTtl(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.ExtendDispatchTtl*
  name: ExtendDispatchTtl
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_ExtendDispatchTtl_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.ExtendDispatchTtl
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.ExtendDispatchTtl
  nameWithType: IDispatchTable.ExtendDispatchTtl
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.GetDispatchAsync(System.String,CancellationToken)
  name: GetDispatchAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_GetDispatchAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IDispatchTable.GetDispatchAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.GetDispatchAsync(System.String, CancellationToken)
  nameWithType: IDispatchTable.GetDispatchAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.GetDispatchAsync*
  name: GetDispatchAsync
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_GetDispatchAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.GetDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.GetDispatchAsync
  nameWithType: IDispatchTable.GetDispatchAsync
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.ListDispatchAsync(System.String,CancellationToken)
  name: ListDispatchAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_ListDispatchAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IDispatchTable.ListDispatchAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.ListDispatchAsync(System.String, CancellationToken)
  nameWithType: IDispatchTable.ListDispatchAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.ListDispatchAsync*
  name: ListDispatchAsync
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_ListDispatchAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.ListDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.ListDispatchAsync
  nameWithType: IDispatchTable.ListDispatchAsync
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_Logger
  commentId: P:ArmoniK.Core.Common.Storage.IDispatchTable.Logger
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.Logger
  nameWithType: IDispatchTable.Logger
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_Logger_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.Logger
  nameWithType: IDispatchTable.Logger
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.TryAcquireDispatchAsync(System.String,System.String,System.String,IDictionary{System.String,System.String},CancellationToken)
  name: TryAcquireDispatchAsync(String, String, String, IDictionary<String, String>, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_TryAcquireDispatchAsync_System_String_System_String_System_String_IDictionary_System_String_System_String__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IDispatchTable.TryAcquireDispatchAsync(System.String,System.String,System.String,IDictionary{System.String,System.String},CancellationToken)
  name.vb: TryAcquireDispatchAsync(String, String, String, IDictionary(Of String, String), CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.TryAcquireDispatchAsync(System.String, System.String, System.String, IDictionary<System.String, System.String>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.IDispatchTable.TryAcquireDispatchAsync(System.String, System.String, System.String, IDictionary(Of System.String, System.String), CancellationToken)
  nameWithType: IDispatchTable.TryAcquireDispatchAsync(String, String, String, IDictionary<String, String>, CancellationToken)
  nameWithType.vb: IDispatchTable.TryAcquireDispatchAsync(String, String, String, IDictionary(Of String, String), CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IDispatchTable.TryAcquireDispatchAsync*
  name: TryAcquireDispatchAsync
  href: api/ArmoniK.Core.Common.Storage.IDispatchTable.html#ArmoniK_Core_Common_Storage_IDispatchTable_TryAcquireDispatchAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IDispatchTable.TryAcquireDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IDispatchTable.TryAcquireDispatchAsync
  nameWithType: IDispatchTable.TryAcquireDispatchAsync
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage
  name: ILockedQueueStorage
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html
  commentId: T:ArmoniK.Core.Common.Storage.ILockedQueueStorage
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage
  nameWithType: ILockedQueueStorage
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.AreMessagesUnique
  name: AreMessagesUnique
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_AreMessagesUnique
  commentId: P:ArmoniK.Core.Common.Storage.ILockedQueueStorage.AreMessagesUnique
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.AreMessagesUnique
  nameWithType: ILockedQueueStorage.AreMessagesUnique
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.AreMessagesUnique*
  name: AreMessagesUnique
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_AreMessagesUnique_
  commentId: Overload:ArmoniK.Core.Common.Storage.ILockedQueueStorage.AreMessagesUnique
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.AreMessagesUnique
  nameWithType: ILockedQueueStorage.AreMessagesUnique
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshExtension
  name: LockRefreshExtension
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_LockRefreshExtension
  commentId: P:ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshExtension
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshExtension
  nameWithType: ILockedQueueStorage.LockRefreshExtension
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshExtension*
  name: LockRefreshExtension
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_LockRefreshExtension_
  commentId: Overload:ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshExtension
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshExtension
  nameWithType: ILockedQueueStorage.LockRefreshExtension
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshPeriodicity
  name: LockRefreshPeriodicity
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_LockRefreshPeriodicity
  commentId: P:ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshPeriodicity
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshPeriodicity
  nameWithType: ILockedQueueStorage.LockRefreshPeriodicity
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshPeriodicity*
  name: LockRefreshPeriodicity
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_LockRefreshPeriodicity_
  commentId: Overload:ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshPeriodicity
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.LockRefreshPeriodicity
  nameWithType: ILockedQueueStorage.LockRefreshPeriodicity
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageProcessedAsync(System.String,CancellationToken)
  name: MessageProcessedAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_MessageProcessedAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageProcessedAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageProcessedAsync(System.String, CancellationToken)
  nameWithType: ILockedQueueStorage.MessageProcessedAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageProcessedAsync*
  name: MessageProcessedAsync
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_MessageProcessedAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageProcessedAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageProcessedAsync
  nameWithType: ILockedQueueStorage.MessageProcessedAsync
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageRejectedAsync(System.String,CancellationToken)
  name: MessageRejectedAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_MessageRejectedAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageRejectedAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageRejectedAsync(System.String, CancellationToken)
  nameWithType: ILockedQueueStorage.MessageRejectedAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageRejectedAsync*
  name: MessageRejectedAsync
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_MessageRejectedAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageRejectedAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.MessageRejectedAsync
  nameWithType: ILockedQueueStorage.MessageRejectedAsync
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.ReleaseMessageAsync(System.String,CancellationToken)
  name: ReleaseMessageAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_ReleaseMessageAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ILockedQueueStorage.ReleaseMessageAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.ReleaseMessageAsync(System.String, CancellationToken)
  nameWithType: ILockedQueueStorage.ReleaseMessageAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.ReleaseMessageAsync*
  name: ReleaseMessageAsync
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_ReleaseMessageAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ILockedQueueStorage.ReleaseMessageAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.ReleaseMessageAsync
  nameWithType: ILockedQueueStorage.ReleaseMessageAsync
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.RenewDeadlineAsync(System.String,CancellationToken)
  name: RenewDeadlineAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_RenewDeadlineAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ILockedQueueStorage.RenewDeadlineAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.RenewDeadlineAsync(System.String, CancellationToken)
  nameWithType: ILockedQueueStorage.RenewDeadlineAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.RenewDeadlineAsync*
  name: RenewDeadlineAsync
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_RenewDeadlineAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ILockedQueueStorage.RenewDeadlineAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.RenewDeadlineAsync
  nameWithType: ILockedQueueStorage.RenewDeadlineAsync
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.RequeueMessageAsync(System.String,CancellationToken)
  name: RequeueMessageAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_RequeueMessageAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ILockedQueueStorage.RequeueMessageAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.RequeueMessageAsync(System.String, CancellationToken)
  nameWithType: ILockedQueueStorage.RequeueMessageAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ILockedQueueStorage.RequeueMessageAsync*
  name: RequeueMessageAsync
  href: api/ArmoniK.Core.Common.Storage.ILockedQueueStorage.html#ArmoniK_Core_Common_Storage_ILockedQueueStorage_RequeueMessageAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ILockedQueueStorage.RequeueMessageAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ILockedQueueStorage.RequeueMessageAsync
  nameWithType: ILockedQueueStorage.RequeueMessageAsync
- uid: ArmoniK.Core.Common.Storage.IObjectStorage
  name: IObjectStorage
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html
  commentId: T:ArmoniK.Core.Common.Storage.IObjectStorage
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage
  nameWithType: IObjectStorage
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{ReadOnlyMemory{System.Byte}},CancellationToken)
  name: AddOrUpdateAsync(String, IAsyncEnumerable<ReadOnlyMemory<Byte>>, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_AddOrUpdateAsync_System_String_IAsyncEnumerable_ReadOnlyMemory_System_Byte___CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{ReadOnlyMemory{System.Byte}},CancellationToken)
  name.vb: AddOrUpdateAsync(String, IAsyncEnumerable(Of ReadOnlyMemory(Of Byte)), CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable<ReadOnlyMemory<System.Byte>>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable(Of ReadOnlyMemory(Of System.Byte)), CancellationToken)
  nameWithType: IObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable<ReadOnlyMemory<Byte>>, CancellationToken)
  nameWithType.vb: IObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable(Of ReadOnlyMemory(Of Byte)), CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{System.Byte[]},CancellationToken)
  name: AddOrUpdateAsync(String, IAsyncEnumerable<Byte[]>, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_AddOrUpdateAsync_System_String_IAsyncEnumerable_System_Byte____CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync(System.String,IAsyncEnumerable{System.Byte[]},CancellationToken)
  name.vb: AddOrUpdateAsync(String, IAsyncEnumerable(Of Byte()), CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable<System.Byte[]>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync(System.String, IAsyncEnumerable(Of System.Byte()), CancellationToken)
  nameWithType: IObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable<Byte[]>, CancellationToken)
  nameWithType.vb: IObjectStorage.AddOrUpdateAsync(String, IAsyncEnumerable(Of Byte()), CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync*
  name: AddOrUpdateAsync
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_AddOrUpdateAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.AddOrUpdateAsync
  nameWithType: IObjectStorage.AddOrUpdateAsync
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.GetValuesAsync(System.String,CancellationToken)
  name: GetValuesAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_GetValuesAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IObjectStorage.GetValuesAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.GetValuesAsync(System.String, CancellationToken)
  nameWithType: IObjectStorage.GetValuesAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.GetValuesAsync*
  name: GetValuesAsync
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_GetValuesAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IObjectStorage.GetValuesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.GetValuesAsync
  nameWithType: IObjectStorage.GetValuesAsync
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.ListKeysAsync(CancellationToken)
  name: ListKeysAsync(CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_ListKeysAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IObjectStorage.ListKeysAsync(CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.ListKeysAsync(CancellationToken)
  nameWithType: IObjectStorage.ListKeysAsync(CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.ListKeysAsync*
  name: ListKeysAsync
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_ListKeysAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IObjectStorage.ListKeysAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.ListKeysAsync
  nameWithType: IObjectStorage.ListKeysAsync
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.TryDeleteAsync(System.String,CancellationToken)
  name: TryDeleteAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_TryDeleteAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IObjectStorage.TryDeleteAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.TryDeleteAsync(System.String, CancellationToken)
  nameWithType: IObjectStorage.TryDeleteAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IObjectStorage.TryDeleteAsync*
  name: TryDeleteAsync
  href: api/ArmoniK.Core.Common.Storage.IObjectStorage.html#ArmoniK_Core_Common_Storage_IObjectStorage_TryDeleteAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IObjectStorage.TryDeleteAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IObjectStorage.TryDeleteAsync
  nameWithType: IObjectStorage.TryDeleteAsync
- uid: ArmoniK.Core.Common.Storage.IObjectStorageFactory
  name: IObjectStorageFactory
  href: api/ArmoniK.Core.Common.Storage.IObjectStorageFactory.html
  commentId: T:ArmoniK.Core.Common.Storage.IObjectStorageFactory
  fullName: ArmoniK.Core.Common.Storage.IObjectStorageFactory
  nameWithType: IObjectStorageFactory
- uid: ArmoniK.Core.Common.Storage.IObjectStorageFactory.CreateObjectStorage(System.String)
  name: CreateObjectStorage(String)
  href: api/ArmoniK.Core.Common.Storage.IObjectStorageFactory.html#ArmoniK_Core_Common_Storage_IObjectStorageFactory_CreateObjectStorage_System_String_
  commentId: M:ArmoniK.Core.Common.Storage.IObjectStorageFactory.CreateObjectStorage(System.String)
  fullName: ArmoniK.Core.Common.Storage.IObjectStorageFactory.CreateObjectStorage(System.String)
  nameWithType: IObjectStorageFactory.CreateObjectStorage(String)
- uid: ArmoniK.Core.Common.Storage.IObjectStorageFactory.CreateObjectStorage*
  name: CreateObjectStorage
  href: api/ArmoniK.Core.Common.Storage.IObjectStorageFactory.html#ArmoniK_Core_Common_Storage_IObjectStorageFactory_CreateObjectStorage_
  commentId: Overload:ArmoniK.Core.Common.Storage.IObjectStorageFactory.CreateObjectStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IObjectStorageFactory.CreateObjectStorage
  nameWithType: IObjectStorageFactory.CreateObjectStorage
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler
  name: IQueueMessageHandler
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html
  commentId: T:ArmoniK.Core.Common.Storage.IQueueMessageHandler
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler
  nameWithType: IQueueMessageHandler
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler.CancellationToken
  name: CancellationToken
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html#ArmoniK_Core_Common_Storage_IQueueMessageHandler_CancellationToken
  commentId: P:ArmoniK.Core.Common.Storage.IQueueMessageHandler.CancellationToken
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler.CancellationToken
  nameWithType: IQueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler.CancellationToken*
  name: CancellationToken
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html#ArmoniK_Core_Common_Storage_IQueueMessageHandler_CancellationToken_
  commentId: Overload:ArmoniK.Core.Common.Storage.IQueueMessageHandler.CancellationToken
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler.CancellationToken
  nameWithType: IQueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler.MessageId
  name: MessageId
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html#ArmoniK_Core_Common_Storage_IQueueMessageHandler_MessageId
  commentId: P:ArmoniK.Core.Common.Storage.IQueueMessageHandler.MessageId
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler.MessageId
  nameWithType: IQueueMessageHandler.MessageId
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler.MessageId*
  name: MessageId
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html#ArmoniK_Core_Common_Storage_IQueueMessageHandler_MessageId_
  commentId: Overload:ArmoniK.Core.Common.Storage.IQueueMessageHandler.MessageId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler.MessageId
  nameWithType: IQueueMessageHandler.MessageId
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler.Status
  name: Status
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html#ArmoniK_Core_Common_Storage_IQueueMessageHandler_Status
  commentId: P:ArmoniK.Core.Common.Storage.IQueueMessageHandler.Status
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler.Status
  nameWithType: IQueueMessageHandler.Status
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler.Status*
  name: Status
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html#ArmoniK_Core_Common_Storage_IQueueMessageHandler_Status_
  commentId: Overload:ArmoniK.Core.Common.Storage.IQueueMessageHandler.Status
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler.Status
  nameWithType: IQueueMessageHandler.Status
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler.TaskId
  name: TaskId
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html#ArmoniK_Core_Common_Storage_IQueueMessageHandler_TaskId
  commentId: P:ArmoniK.Core.Common.Storage.IQueueMessageHandler.TaskId
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler.TaskId
  nameWithType: IQueueMessageHandler.TaskId
- uid: ArmoniK.Core.Common.Storage.IQueueMessageHandler.TaskId*
  name: TaskId
  href: api/ArmoniK.Core.Common.Storage.IQueueMessageHandler.html#ArmoniK_Core_Common_Storage_IQueueMessageHandler_TaskId_
  commentId: Overload:ArmoniK.Core.Common.Storage.IQueueMessageHandler.TaskId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IQueueMessageHandler.TaskId
  nameWithType: IQueueMessageHandler.TaskId
- uid: ArmoniK.Core.Common.Storage.IQueueStorage
  name: IQueueStorage
  href: api/ArmoniK.Core.Common.Storage.IQueueStorage.html
  commentId: T:ArmoniK.Core.Common.Storage.IQueueStorage
  fullName: ArmoniK.Core.Common.Storage.IQueueStorage
  nameWithType: IQueueStorage
- uid: ArmoniK.Core.Common.Storage.IQueueStorageBase
  name: IQueueStorageBase
  href: api/ArmoniK.Core.Common.Storage.IQueueStorageBase.html
  commentId: T:ArmoniK.Core.Common.Storage.IQueueStorageBase
  fullName: ArmoniK.Core.Common.Storage.IQueueStorageBase
  nameWithType: IQueueStorageBase
- uid: ArmoniK.Core.Common.Storage.IQueueStorageBase.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name: EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IQueueStorageBase.html#ArmoniK_Core_Common_Storage_IQueueStorageBase_EnqueueMessagesAsync_IEnumerable_System_String__System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IQueueStorageBase.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name.vb: EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IQueueStorageBase.EnqueueMessagesAsync(IEnumerable<System.String>, System.Int32, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.IQueueStorageBase.EnqueueMessagesAsync(IEnumerable(Of System.String), System.Int32, CancellationToken)
  nameWithType: IQueueStorageBase.EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  nameWithType.vb: IQueueStorageBase.EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IQueueStorageBase.EnqueueMessagesAsync*
  name: EnqueueMessagesAsync
  href: api/ArmoniK.Core.Common.Storage.IQueueStorageBase.html#ArmoniK_Core_Common_Storage_IQueueStorageBase_EnqueueMessagesAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IQueueStorageBase.EnqueueMessagesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IQueueStorageBase.EnqueueMessagesAsync
  nameWithType: IQueueStorageBase.EnqueueMessagesAsync
- uid: ArmoniK.Core.Common.Storage.IQueueStorageBase.MaxPriority
  name: MaxPriority
  href: api/ArmoniK.Core.Common.Storage.IQueueStorageBase.html#ArmoniK_Core_Common_Storage_IQueueStorageBase_MaxPriority
  commentId: P:ArmoniK.Core.Common.Storage.IQueueStorageBase.MaxPriority
  fullName: ArmoniK.Core.Common.Storage.IQueueStorageBase.MaxPriority
  nameWithType: IQueueStorageBase.MaxPriority
- uid: ArmoniK.Core.Common.Storage.IQueueStorageBase.MaxPriority*
  name: MaxPriority
  href: api/ArmoniK.Core.Common.Storage.IQueueStorageBase.html#ArmoniK_Core_Common_Storage_IQueueStorageBase_MaxPriority_
  commentId: Overload:ArmoniK.Core.Common.Storage.IQueueStorageBase.MaxPriority
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IQueueStorageBase.MaxPriority
  nameWithType: IQueueStorageBase.MaxPriority
- uid: ArmoniK.Core.Common.Storage.IQueueStorageBase.PullAsync(System.Int32,CancellationToken)
  name: PullAsync(Int32, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IQueueStorageBase.html#ArmoniK_Core_Common_Storage_IQueueStorageBase_PullAsync_System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IQueueStorageBase.PullAsync(System.Int32,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IQueueStorageBase.PullAsync(System.Int32, CancellationToken)
  nameWithType: IQueueStorageBase.PullAsync(Int32, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IQueueStorageBase.PullAsync*
  name: PullAsync
  href: api/ArmoniK.Core.Common.Storage.IQueueStorageBase.html#ArmoniK_Core_Common_Storage_IQueueStorageBase_PullAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IQueueStorageBase.PullAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IQueueStorageBase.PullAsync
  nameWithType: IQueueStorageBase.PullAsync
- uid: ArmoniK.Core.Common.Storage.IResultTable
  name: IResultTable
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html
  commentId: T:ArmoniK.Core.Common.Storage.IResultTable
  fullName: ArmoniK.Core.Common.Storage.IResultTable
  nameWithType: IResultTable
- uid: ArmoniK.Core.Common.Storage.IResultTable.AreResultsAvailableAsync(System.String,IEnumerable{System.String},CancellationToken)
  name: AreResultsAvailableAsync(String, IEnumerable<String>, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_AreResultsAvailableAsync_System_String_IEnumerable_System_String__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.AreResultsAvailableAsync(System.String,IEnumerable{System.String},CancellationToken)
  name.vb: AreResultsAvailableAsync(String, IEnumerable(Of String), CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.AreResultsAvailableAsync(System.String, IEnumerable<System.String>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.IResultTable.AreResultsAvailableAsync(System.String, IEnumerable(Of System.String), CancellationToken)
  nameWithType: IResultTable.AreResultsAvailableAsync(String, IEnumerable<String>, CancellationToken)
  nameWithType.vb: IResultTable.AreResultsAvailableAsync(String, IEnumerable(Of String), CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.AreResultsAvailableAsync*
  name: AreResultsAvailableAsync
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_AreResultsAvailableAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.AreResultsAvailableAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.AreResultsAvailableAsync
  nameWithType: IResultTable.AreResultsAvailableAsync
- uid: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultDispatch(System.String,System.String,System.String,CancellationToken)
  name: ChangeResultDispatch(String, String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_ChangeResultDispatch_System_String_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.ChangeResultDispatch(System.String,System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultDispatch(System.String, System.String, System.String, CancellationToken)
  nameWithType: IResultTable.ChangeResultDispatch(String, String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultDispatch*
  name: ChangeResultDispatch
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_ChangeResultDispatch_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.ChangeResultDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultDispatch
  nameWithType: IResultTable.ChangeResultDispatch
- uid: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultOwnership(System.String,IEnumerable{System.String},System.String,System.String,CancellationToken)
  name: ChangeResultOwnership(String, IEnumerable<String>, String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_ChangeResultOwnership_System_String_IEnumerable_System_String__System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.ChangeResultOwnership(System.String,IEnumerable{System.String},System.String,System.String,CancellationToken)
  name.vb: ChangeResultOwnership(String, IEnumerable(Of String), String, String, CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultOwnership(System.String, IEnumerable<System.String>, System.String, System.String, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultOwnership(System.String, IEnumerable(Of System.String), System.String, System.String, CancellationToken)
  nameWithType: IResultTable.ChangeResultOwnership(String, IEnumerable<String>, String, String, CancellationToken)
  nameWithType.vb: IResultTable.ChangeResultOwnership(String, IEnumerable(Of String), String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultOwnership*
  name: ChangeResultOwnership
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_ChangeResultOwnership_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.ChangeResultOwnership
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.ChangeResultOwnership
  nameWithType: IResultTable.ChangeResultOwnership
- uid: ArmoniK.Core.Common.Storage.IResultTable.Create(IEnumerable{Result},CancellationToken)
  name: Create(IEnumerable<Result>, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_Create_IEnumerable_Result__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.Create(IEnumerable{Result},CancellationToken)
  name.vb: Create(IEnumerable(Of Result), CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.Create(IEnumerable<Result>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.IResultTable.Create(IEnumerable(Of Result), CancellationToken)
  nameWithType: IResultTable.Create(IEnumerable<Result>, CancellationToken)
  nameWithType.vb: IResultTable.Create(IEnumerable(Of Result), CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.Create*
  name: Create
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_Create_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.Create
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.Create
  nameWithType: IResultTable.Create
- uid: ArmoniK.Core.Common.Storage.IResultTable.DeleteResult(System.String,System.String,CancellationToken)
  name: DeleteResult(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_DeleteResult_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.DeleteResult(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.DeleteResult(System.String, System.String, CancellationToken)
  nameWithType: IResultTable.DeleteResult(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.DeleteResult*
  name: DeleteResult
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_DeleteResult_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.DeleteResult
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.DeleteResult
  nameWithType: IResultTable.DeleteResult
- uid: ArmoniK.Core.Common.Storage.IResultTable.DeleteResults(System.String,CancellationToken)
  name: DeleteResults(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_DeleteResults_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.DeleteResults(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.DeleteResults(System.String, CancellationToken)
  nameWithType: IResultTable.DeleteResults(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.DeleteResults*
  name: DeleteResults
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_DeleteResults_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.DeleteResults
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.DeleteResults
  nameWithType: IResultTable.DeleteResults
- uid: ArmoniK.Core.Common.Storage.IResultTable.GetResult(System.String,System.String,CancellationToken)
  name: GetResult(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_GetResult_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.GetResult(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.GetResult(System.String, System.String, CancellationToken)
  nameWithType: IResultTable.GetResult(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.GetResult*
  name: GetResult
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_GetResult_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.GetResult
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.GetResult
  nameWithType: IResultTable.GetResult
- uid: ArmoniK.Core.Common.Storage.IResultTable.ListResultsAsync(System.String,CancellationToken)
  name: ListResultsAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_ListResultsAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.ListResultsAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.ListResultsAsync(System.String, CancellationToken)
  nameWithType: IResultTable.ListResultsAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.ListResultsAsync*
  name: ListResultsAsync
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_ListResultsAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.ListResultsAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.ListResultsAsync
  nameWithType: IResultTable.ListResultsAsync
- uid: ArmoniK.Core.Common.Storage.IResultTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_Logger
  commentId: P:ArmoniK.Core.Common.Storage.IResultTable.Logger
  fullName: ArmoniK.Core.Common.Storage.IResultTable.Logger
  nameWithType: IResultTable.Logger
- uid: ArmoniK.Core.Common.Storage.IResultTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_Logger_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.Logger
  nameWithType: IResultTable.Logger
- uid: ArmoniK.Core.Common.Storage.IResultTable.SetResult(System.String,System.String,System.String,CancellationToken)
  name: SetResult(String, String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_SetResult_System_String_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.SetResult(System.String,System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.SetResult(System.String, System.String, System.String, CancellationToken)
  nameWithType: IResultTable.SetResult(String, String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.SetResult(System.String,System.String,System.String,System.Byte[],CancellationToken)
  name: SetResult(String, String, String, Byte[], CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_SetResult_System_String_System_String_System_String_System_Byte___CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.IResultTable.SetResult(System.String,System.String,System.String,System.Byte[],CancellationToken)
  name.vb: SetResult(String, String, String, Byte(), CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.IResultTable.SetResult(System.String, System.String, System.String, System.Byte[], CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.IResultTable.SetResult(System.String, System.String, System.String, System.Byte(), CancellationToken)
  nameWithType: IResultTable.SetResult(String, String, String, Byte[], CancellationToken)
  nameWithType.vb: IResultTable.SetResult(String, String, String, Byte(), CancellationToken)
- uid: ArmoniK.Core.Common.Storage.IResultTable.SetResult*
  name: SetResult
  href: api/ArmoniK.Core.Common.Storage.IResultTable.html#ArmoniK_Core_Common_Storage_IResultTable_SetResult_
  commentId: Overload:ArmoniK.Core.Common.Storage.IResultTable.SetResult
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.IResultTable.SetResult
  nameWithType: IResultTable.SetResult
- uid: ArmoniK.Core.Common.Storage.ISessionTable
  name: ISessionTable
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html
  commentId: T:ArmoniK.Core.Common.Storage.ISessionTable
  fullName: ArmoniK.Core.Common.Storage.ISessionTable
  nameWithType: ISessionTable
- uid: ArmoniK.Core.Common.Storage.ISessionTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  name: CancelDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_CancelDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.CancelDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: ISessionTable.CancelDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.CancelDispatchAsync*
  name: CancelDispatchAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_CancelDispatchAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.CancelDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.CancelDispatchAsync
  nameWithType: ISessionTable.CancelDispatchAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.CancelSessionAsync(System.String,CancellationToken)
  name: CancelSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_CancelSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.CancelSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.CancelSessionAsync(System.String, CancellationToken)
  nameWithType: ISessionTable.CancelSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.CancelSessionAsync*
  name: CancelSessionAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_CancelSessionAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.CancelSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.CancelSessionAsync
  nameWithType: ISessionTable.CancelSessionAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.CreateSessionDataAsync(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  name: CreateSessionDataAsync(String, String, String, TaskOptions, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_CreateSessionDataAsync_System_String_System_String_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.CreateSessionDataAsync(System.String,System.String,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.CreateSessionDataAsync(System.String, System.String, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, CancellationToken)
  nameWithType: ISessionTable.CreateSessionDataAsync(String, String, String, TaskOptions, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.CreateSessionDataAsync*
  name: CreateSessionDataAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_CreateSessionDataAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.CreateSessionDataAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.CreateSessionDataAsync
  nameWithType: ISessionTable.CreateSessionDataAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.DeleteDispatchAsync(System.String,System.String,CancellationToken)
  name: DeleteDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_DeleteDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.DeleteDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.DeleteDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: ISessionTable.DeleteDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.DeleteDispatchAsync*
  name: DeleteDispatchAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_DeleteDispatchAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.DeleteDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.DeleteDispatchAsync
  nameWithType: ISessionTable.DeleteDispatchAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.DeleteSessionAsync(System.String,CancellationToken)
  name: DeleteSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_DeleteSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.DeleteSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.DeleteSessionAsync(System.String, CancellationToken)
  nameWithType: ISessionTable.DeleteSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.DeleteSessionAsync*
  name: DeleteSessionAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_DeleteSessionAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.DeleteSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.DeleteSessionAsync
  nameWithType: ISessionTable.DeleteSessionAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.GetDefaultTaskOptionAsync(System.String,CancellationToken)
  name: GetDefaultTaskOptionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_GetDefaultTaskOptionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.GetDefaultTaskOptionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.GetDefaultTaskOptionAsync(System.String, CancellationToken)
  nameWithType: ISessionTable.GetDefaultTaskOptionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.GetDefaultTaskOptionAsync*
  name: GetDefaultTaskOptionAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_GetDefaultTaskOptionAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.GetDefaultTaskOptionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.GetDefaultTaskOptionAsync
  nameWithType: ISessionTable.GetDefaultTaskOptionAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.GetSessionAsync(System.String,CancellationToken)
  name: GetSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_GetSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.GetSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.GetSessionAsync(System.String, CancellationToken)
  nameWithType: ISessionTable.GetSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.GetSessionAsync*
  name: GetSessionAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_GetSessionAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.GetSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.GetSessionAsync
  nameWithType: ISessionTable.GetSessionAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.IsDispatchCancelledAsync(System.String,System.String,CancellationToken)
  name: IsDispatchCancelledAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_IsDispatchCancelledAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.IsDispatchCancelledAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.IsDispatchCancelledAsync(System.String, System.String, CancellationToken)
  nameWithType: ISessionTable.IsDispatchCancelledAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.IsDispatchCancelledAsync*
  name: IsDispatchCancelledAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_IsDispatchCancelledAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.IsDispatchCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.IsDispatchCancelledAsync
  nameWithType: ISessionTable.IsDispatchCancelledAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.IsSessionCancelledAsync(System.String,CancellationToken)
  name: IsSessionCancelledAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_IsSessionCancelledAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.IsSessionCancelledAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.IsSessionCancelledAsync(System.String, CancellationToken)
  nameWithType: ISessionTable.IsSessionCancelledAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.IsSessionCancelledAsync*
  name: IsSessionCancelledAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_IsSessionCancelledAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.IsSessionCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.IsSessionCancelledAsync
  nameWithType: ISessionTable.IsSessionCancelledAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.ListDispatchesAsync(System.String,CancellationToken)
  name: ListDispatchesAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_ListDispatchesAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.ListDispatchesAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.ListDispatchesAsync(System.String, CancellationToken)
  nameWithType: ISessionTable.ListDispatchesAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.ListDispatchesAsync*
  name: ListDispatchesAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_ListDispatchesAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.ListDispatchesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.ListDispatchesAsync
  nameWithType: ISessionTable.ListDispatchesAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.ListSessionsAsync(CancellationToken)
  name: ListSessionsAsync(CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_ListSessionsAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ISessionTable.ListSessionsAsync(CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.ListSessionsAsync(CancellationToken)
  nameWithType: ISessionTable.ListSessionsAsync(CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ISessionTable.ListSessionsAsync*
  name: ListSessionsAsync
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_ListSessionsAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.ListSessionsAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.ListSessionsAsync
  nameWithType: ISessionTable.ListSessionsAsync
- uid: ArmoniK.Core.Common.Storage.ISessionTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_Logger
  commentId: P:ArmoniK.Core.Common.Storage.ISessionTable.Logger
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.Logger
  nameWithType: ISessionTable.Logger
- uid: ArmoniK.Core.Common.Storage.ISessionTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Common.Storage.ISessionTable.html#ArmoniK_Core_Common_Storage_ISessionTable_Logger_
  commentId: Overload:ArmoniK.Core.Common.Storage.ISessionTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ISessionTable.Logger
  nameWithType: ISessionTable.Logger
- uid: ArmoniK.Core.Common.Storage.ITaskTable
  name: ITaskTable
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html
  commentId: T:ArmoniK.Core.Common.Storage.ITaskTable
  fullName: ArmoniK.Core.Common.Storage.ITaskTable
  nameWithType: ITaskTable
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  name: CancelDispatchAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CancelDispatchAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.CancelDispatchAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CancelDispatchAsync(System.String, System.String, CancellationToken)
  nameWithType: ITaskTable.CancelDispatchAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CancelDispatchAsync*
  name: CancelDispatchAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CancelDispatchAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.CancelDispatchAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CancelDispatchAsync
  nameWithType: ITaskTable.CancelDispatchAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CancelSessionAsync(System.String,CancellationToken)
  name: CancelSessionAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CancelSessionAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.CancelSessionAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CancelSessionAsync(System.String, CancellationToken)
  nameWithType: ITaskTable.CancelSessionAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CancelSessionAsync*
  name: CancelSessionAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CancelSessionAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.CancelSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CancelSessionAsync
  nameWithType: ITaskTable.CancelSessionAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.ChangeTaskDispatch(System.String,System.String,CancellationToken)
  name: ChangeTaskDispatch(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_ChangeTaskDispatch_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.ChangeTaskDispatch(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.ChangeTaskDispatch(System.String, System.String, CancellationToken)
  nameWithType: ITaskTable.ChangeTaskDispatch(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.ChangeTaskDispatch*
  name: ChangeTaskDispatch
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_ChangeTaskDispatch_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.ChangeTaskDispatch
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.ChangeTaskDispatch
  nameWithType: ITaskTable.ChangeTaskDispatch
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: CountAllTasksAsync(TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CountAllTasksAsync_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CountAllTasksAsync(ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: ITaskTable.CountAllTasksAsync(TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CountAllTasksAsync*
  name: CountAllTasksAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CountAllTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.CountAllTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CountAllTasksAsync
  nameWithType: ITaskTable.CountAllTasksAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CountTasksAsync(TaskFilter,CancellationToken)
  name: CountTasksAsync(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CountTasksAsync_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.CountTasksAsync(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CountTasksAsync(TaskFilter, CancellationToken)
  nameWithType: ITaskTable.CountTasksAsync(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CountTasksAsync*
  name: CountTasksAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CountTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.CountTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CountTasksAsync
  nameWithType: ITaskTable.CountTasksAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CreateTasks(IEnumerable{TaskData},CancellationToken)
  name: CreateTasks(IEnumerable<TaskData>, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CreateTasks_IEnumerable_TaskData__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.CreateTasks(IEnumerable{TaskData},CancellationToken)
  name.vb: CreateTasks(IEnumerable(Of TaskData), CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CreateTasks(IEnumerable<TaskData>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.ITaskTable.CreateTasks(IEnumerable(Of TaskData), CancellationToken)
  nameWithType: ITaskTable.CreateTasks(IEnumerable<TaskData>, CancellationToken)
  nameWithType.vb: ITaskTable.CreateTasks(IEnumerable(Of TaskData), CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.CreateTasks*
  name: CreateTasks
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_CreateTasks_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.CreateTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.CreateTasks
  nameWithType: ITaskTable.CreateTasks
- uid: ArmoniK.Core.Common.Storage.ITaskTable.DeleteTaskAsync(System.String,CancellationToken)
  name: DeleteTaskAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_DeleteTaskAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.DeleteTaskAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.DeleteTaskAsync(System.String, CancellationToken)
  nameWithType: ITaskTable.DeleteTaskAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.DeleteTaskAsync*
  name: DeleteTaskAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_DeleteTaskAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.DeleteTaskAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.DeleteTaskAsync
  nameWithType: ITaskTable.DeleteTaskAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskAncestorDispatchIds(System.String,CancellationToken)
  name: GetTaskAncestorDispatchIds(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskAncestorDispatchIds_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskAncestorDispatchIds(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskAncestorDispatchIds(System.String, CancellationToken)
  nameWithType: ITaskTable.GetTaskAncestorDispatchIds(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskAncestorDispatchIds*
  name: GetTaskAncestorDispatchIds
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskAncestorDispatchIds_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskAncestorDispatchIds
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskAncestorDispatchIds
  nameWithType: ITaskTable.GetTaskAncestorDispatchIds
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskDispatchId(System.String,CancellationToken)
  name: GetTaskDispatchId(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskDispatchId_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskDispatchId(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskDispatchId(System.String, CancellationToken)
  nameWithType: ITaskTable.GetTaskDispatchId(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskDispatchId*
  name: GetTaskDispatchId
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskDispatchId_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskDispatchId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskDispatchId
  nameWithType: ITaskTable.GetTaskDispatchId
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskExpectedOutputKeys(System.String,CancellationToken)
  name: GetTaskExpectedOutputKeys(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskExpectedOutputKeys_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskExpectedOutputKeys(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskExpectedOutputKeys(System.String, CancellationToken)
  nameWithType: ITaskTable.GetTaskExpectedOutputKeys(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskExpectedOutputKeys*
  name: GetTaskExpectedOutputKeys
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskExpectedOutputKeys_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskExpectedOutputKeys
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskExpectedOutputKeys
  nameWithType: ITaskTable.GetTaskExpectedOutputKeys
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskOutput(System.String,CancellationToken)
  name: GetTaskOutput(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskOutput_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskOutput(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskOutput(System.String, CancellationToken)
  nameWithType: ITaskTable.GetTaskOutput(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskOutput*
  name: GetTaskOutput
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskOutput_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskOutput
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskOutput
  nameWithType: ITaskTable.GetTaskOutput
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskStatus(System.String,CancellationToken)
  name: GetTaskStatus(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskStatus_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskStatus(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskStatus(System.String, CancellationToken)
  nameWithType: ITaskTable.GetTaskStatus(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskStatus*
  name: GetTaskStatus
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_GetTaskStatus_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.GetTaskStatus
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.GetTaskStatus
  nameWithType: ITaskTable.GetTaskStatus
- uid: ArmoniK.Core.Common.Storage.ITaskTable.IsTaskCancelledAsync(System.String,CancellationToken)
  name: IsTaskCancelledAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_IsTaskCancelledAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.IsTaskCancelledAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.IsTaskCancelledAsync(System.String, CancellationToken)
  nameWithType: ITaskTable.IsTaskCancelledAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.IsTaskCancelledAsync*
  name: IsTaskCancelledAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_IsTaskCancelledAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.IsTaskCancelledAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.IsTaskCancelledAsync
  nameWithType: ITaskTable.IsTaskCancelledAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.ListTasksAsync(TaskFilter,CancellationToken)
  name: ListTasksAsync(TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_ListTasksAsync_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.ListTasksAsync(TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.ListTasksAsync(TaskFilter, CancellationToken)
  nameWithType: ITaskTable.ListTasksAsync(TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.ListTasksAsync*
  name: ListTasksAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_ListTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.ListTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.ListTasksAsync
  nameWithType: ITaskTable.ListTasksAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.Logger
  name: Logger
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_Logger
  commentId: P:ArmoniK.Core.Common.Storage.ITaskTable.Logger
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.Logger
  nameWithType: ITaskTable.Logger
- uid: ArmoniK.Core.Common.Storage.ITaskTable.Logger*
  name: Logger
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_Logger_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.Logger
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.Logger
  nameWithType: ITaskTable.Logger
- uid: ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMax
  name: PollingDelayMax
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_PollingDelayMax
  commentId: P:ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMax
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMax
  nameWithType: ITaskTable.PollingDelayMax
- uid: ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMax*
  name: PollingDelayMax
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_PollingDelayMax_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMax
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMax
  nameWithType: ITaskTable.PollingDelayMax
- uid: ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMin
  name: PollingDelayMin
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_PollingDelayMin
  commentId: P:ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMin
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMin
  nameWithType: ITaskTable.PollingDelayMin
- uid: ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMin*
  name: PollingDelayMin
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_PollingDelayMin_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMin
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.PollingDelayMin
  nameWithType: ITaskTable.PollingDelayMin
- uid: ArmoniK.Core.Common.Storage.ITaskTable.ReadTaskAsync(System.String,CancellationToken)
  name: ReadTaskAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_ReadTaskAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.ReadTaskAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.ReadTaskAsync(System.String, CancellationToken)
  nameWithType: ITaskTable.ReadTaskAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.ReadTaskAsync*
  name: ReadTaskAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_ReadTaskAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.ReadTaskAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.ReadTaskAsync
  nameWithType: ITaskTable.ReadTaskAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.SetTaskErrorAsync(System.String,System.String,CancellationToken)
  name: SetTaskErrorAsync(String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_SetTaskErrorAsync_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.SetTaskErrorAsync(System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.SetTaskErrorAsync(System.String, System.String, CancellationToken)
  nameWithType: ITaskTable.SetTaskErrorAsync(String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.SetTaskErrorAsync*
  name: SetTaskErrorAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_SetTaskErrorAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.SetTaskErrorAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.SetTaskErrorAsync
  nameWithType: ITaskTable.SetTaskErrorAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.SetTaskSuccessAsync(System.String,CancellationToken)
  name: SetTaskSuccessAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_SetTaskSuccessAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.SetTaskSuccessAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.SetTaskSuccessAsync(System.String, CancellationToken)
  nameWithType: ITaskTable.SetTaskSuccessAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.SetTaskSuccessAsync*
  name: SetTaskSuccessAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_SetTaskSuccessAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.SetTaskSuccessAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.SetTaskSuccessAsync
  nameWithType: ITaskTable.SetTaskSuccessAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.UpdateAllTaskStatusAsync(TaskFilter,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: UpdateAllTaskStatusAsync(TaskFilter, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_UpdateAllTaskStatusAsync_TaskFilter_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.UpdateAllTaskStatusAsync(TaskFilter,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.UpdateAllTaskStatusAsync(TaskFilter, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: ITaskTable.UpdateAllTaskStatusAsync(TaskFilter, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.UpdateAllTaskStatusAsync*
  name: UpdateAllTaskStatusAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_UpdateAllTaskStatusAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.UpdateAllTaskStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.UpdateAllTaskStatusAsync
  nameWithType: ITaskTable.UpdateAllTaskStatusAsync
- uid: ArmoniK.Core.Common.Storage.ITaskTable.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  name: UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_UpdateTaskStatusAsync_System_String_ArmoniK_Api_gRPC_V1_TaskStatus_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.ITaskTable.UpdateTaskStatusAsync(System.String,ArmoniK.Api.gRPC.V1.TaskStatus,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.UpdateTaskStatusAsync(System.String, ArmoniK.Api.gRPC.V1.TaskStatus, CancellationToken)
  nameWithType: ITaskTable.UpdateTaskStatusAsync(String, TaskStatus, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.ITaskTable.UpdateTaskStatusAsync*
  name: UpdateTaskStatusAsync
  href: api/ArmoniK.Core.Common.Storage.ITaskTable.html#ArmoniK_Core_Common_Storage_ITaskTable_UpdateTaskStatusAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.ITaskTable.UpdateTaskStatusAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ITaskTable.UpdateTaskStatusAsync
  nameWithType: ITaskTable.UpdateTaskStatusAsync
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler
  name: LockedQueueMessageDeadlineHandler
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.html
  commentId: T:ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler
  nameWithType: LockedQueueMessageDeadlineHandler
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.#ctor(ArmoniK.Core.Common.Storage.ILockedQueueStorage,System.String,ILogger,CancellationToken)
  name: LockedQueueMessageDeadlineHandler(ILockedQueueStorage, String, ILogger, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageDeadlineHandler__ctor_ArmoniK_Core_Common_Storage_ILockedQueueStorage_System_String_ILogger_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.#ctor(ArmoniK.Core.Common.Storage.ILockedQueueStorage,System.String,ILogger,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.LockedQueueMessageDeadlineHandler(ArmoniK.Core.Common.Storage.ILockedQueueStorage, System.String, ILogger, CancellationToken)
  nameWithType: LockedQueueMessageDeadlineHandler.LockedQueueMessageDeadlineHandler(ILockedQueueStorage, String, ILogger, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.#ctor*
  name: LockedQueueMessageDeadlineHandler
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageDeadlineHandler__ctor_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.LockedQueueMessageDeadlineHandler
  nameWithType: LockedQueueMessageDeadlineHandler.LockedQueueMessageDeadlineHandler
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.DisposeAsync
  name: DisposeAsync()
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageDeadlineHandler_DisposeAsync
  commentId: M:ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.DisposeAsync
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.DisposeAsync()
  nameWithType: LockedQueueMessageDeadlineHandler.DisposeAsync()
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.DisposeAsync*
  name: DisposeAsync
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageDeadlineHandler_DisposeAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.DisposeAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.DisposeAsync
  nameWithType: LockedQueueMessageDeadlineHandler.DisposeAsync
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.MessageLockLost
  name: MessageLockLost
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageDeadlineHandler_MessageLockLost
  commentId: P:ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.MessageLockLost
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.MessageLockLost
  nameWithType: LockedQueueMessageDeadlineHandler.MessageLockLost
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.MessageLockLost*
  name: MessageLockLost
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageDeadlineHandler_MessageLockLost_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.MessageLockLost
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler.MessageLockLost
  nameWithType: LockedQueueMessageDeadlineHandler.MessageLockLost
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler
  name: LockedQueueMessageHandler
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html
  commentId: T:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler
  nameWithType: LockedQueueMessageHandler
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.#ctor(ArmoniK.Core.Common.Storage.ILockedQueueStorage,System.String,System.String,ILogger,CancellationToken)
  name: LockedQueueMessageHandler(ILockedQueueStorage, String, String, ILogger, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler__ctor_ArmoniK_Core_Common_Storage_ILockedQueueStorage_System_String_System_String_ILogger_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.#ctor(ArmoniK.Core.Common.Storage.ILockedQueueStorage,System.String,System.String,ILogger,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.LockedQueueMessageHandler(ArmoniK.Core.Common.Storage.ILockedQueueStorage, System.String, System.String, ILogger, CancellationToken)
  nameWithType: LockedQueueMessageHandler.LockedQueueMessageHandler(ILockedQueueStorage, String, String, ILogger, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.#ctor*
  name: LockedQueueMessageHandler
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler__ctor_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.LockedQueueMessageHandler
  nameWithType: LockedQueueMessageHandler.LockedQueueMessageHandler
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.CancellationToken
  name: CancellationToken
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_CancellationToken
  commentId: P:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.CancellationToken
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.CancellationToken
  nameWithType: LockedQueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.CancellationToken*
  name: CancellationToken
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_CancellationToken_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.CancellationToken
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.CancellationToken
  nameWithType: LockedQueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.DisposeAsync
  name: DisposeAsync()
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_DisposeAsync
  commentId: M:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.DisposeAsync
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.DisposeAsync()
  nameWithType: LockedQueueMessageHandler.DisposeAsync()
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.DisposeAsync*
  name: DisposeAsync
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_DisposeAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.DisposeAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.DisposeAsync
  nameWithType: LockedQueueMessageHandler.DisposeAsync
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.MessageId
  name: MessageId
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_MessageId
  commentId: P:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.MessageId
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.MessageId
  nameWithType: LockedQueueMessageHandler.MessageId
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.MessageId*
  name: MessageId
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_MessageId_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.MessageId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.MessageId
  nameWithType: LockedQueueMessageHandler.MessageId
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.Status
  name: Status
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_Status
  commentId: P:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.Status
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.Status
  nameWithType: LockedQueueMessageHandler.Status
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.Status*
  name: Status
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_Status_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.Status
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.Status
  nameWithType: LockedQueueMessageHandler.Status
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.TaskId
  name: TaskId
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_TaskId
  commentId: P:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.TaskId
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.TaskId
  nameWithType: LockedQueueMessageHandler.TaskId
- uid: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.TaskId*
  name: TaskId
  href: api/ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedQueueMessageHandler_TaskId_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.TaskId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueMessageHandler.TaskId
  nameWithType: LockedQueueMessageHandler.TaskId
- uid: ArmoniK.Core.Common.Storage.LockedQueueStorageExt
  name: LockedQueueStorageExt
  href: api/ArmoniK.Core.Common.Storage.LockedQueueStorageExt.html
  commentId: T:ArmoniK.Core.Common.Storage.LockedQueueStorageExt
  fullName: ArmoniK.Core.Common.Storage.LockedQueueStorageExt
  nameWithType: LockedQueueStorageExt
- uid: ArmoniK.Core.Common.Storage.LockedQueueStorageExt.EnqueueAsync(ArmoniK.Core.Common.Storage.ILockedQueueStorage,System.String,System.Int32,CancellationToken)
  name: EnqueueAsync(ILockedQueueStorage, String, Int32, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedQueueStorageExt.html#ArmoniK_Core_Common_Storage_LockedQueueStorageExt_EnqueueAsync_ArmoniK_Core_Common_Storage_ILockedQueueStorage_System_String_System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedQueueStorageExt.EnqueueAsync(ArmoniK.Core.Common.Storage.ILockedQueueStorage,System.String,System.Int32,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedQueueStorageExt.EnqueueAsync(ArmoniK.Core.Common.Storage.ILockedQueueStorage, System.String, System.Int32, CancellationToken)
  nameWithType: LockedQueueStorageExt.EnqueueAsync(ILockedQueueStorage, String, Int32, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedQueueStorageExt.EnqueueAsync*
  name: EnqueueAsync
  href: api/ArmoniK.Core.Common.Storage.LockedQueueStorageExt.html#ArmoniK_Core_Common_Storage_LockedQueueStorageExt_EnqueueAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueStorageExt.EnqueueAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueStorageExt.EnqueueAsync
  nameWithType: LockedQueueStorageExt.EnqueueAsync
- uid: ArmoniK.Core.Common.Storage.LockedQueueStorageExt.GetDeadlineHandler(ArmoniK.Core.Common.Storage.ILockedQueueStorage,System.String,ILogger,CancellationToken)
  name: GetDeadlineHandler(ILockedQueueStorage, String, ILogger, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedQueueStorageExt.html#ArmoniK_Core_Common_Storage_LockedQueueStorageExt_GetDeadlineHandler_ArmoniK_Core_Common_Storage_ILockedQueueStorage_System_String_ILogger_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedQueueStorageExt.GetDeadlineHandler(ArmoniK.Core.Common.Storage.ILockedQueueStorage,System.String,ILogger,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedQueueStorageExt.GetDeadlineHandler(ArmoniK.Core.Common.Storage.ILockedQueueStorage, System.String, ILogger, CancellationToken)
  nameWithType: LockedQueueStorageExt.GetDeadlineHandler(ILockedQueueStorage, String, ILogger, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedQueueStorageExt.GetDeadlineHandler*
  name: GetDeadlineHandler
  href: api/ArmoniK.Core.Common.Storage.LockedQueueStorageExt.html#ArmoniK_Core_Common_Storage_LockedQueueStorageExt_GetDeadlineHandler_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedQueueStorageExt.GetDeadlineHandler
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedQueueStorageExt.GetDeadlineHandler
  nameWithType: LockedQueueStorageExt.GetDeadlineHandler
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler
  name: LockedWrapperQueueMessageHandler
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html
  commentId: T:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler
  nameWithType: LockedWrapperQueueMessageHandler
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.#ctor(ArmoniK.Core.Common.Storage.IQueueMessageHandler,ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler,CancellationToken)
  name: LockedWrapperQueueMessageHandler(IQueueMessageHandler, LockedQueueMessageDeadlineHandler, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler__ctor_ArmoniK_Core_Common_Storage_IQueueMessageHandler_ArmoniK_Core_Common_Storage_LockedQueueMessageDeadlineHandler_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.#ctor(ArmoniK.Core.Common.Storage.IQueueMessageHandler,ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.LockedWrapperQueueMessageHandler(ArmoniK.Core.Common.Storage.IQueueMessageHandler, ArmoniK.Core.Common.Storage.LockedQueueMessageDeadlineHandler, CancellationToken)
  nameWithType: LockedWrapperQueueMessageHandler.LockedWrapperQueueMessageHandler(IQueueMessageHandler, LockedQueueMessageDeadlineHandler, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.#ctor*
  name: LockedWrapperQueueMessageHandler
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler__ctor_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.LockedWrapperQueueMessageHandler
  nameWithType: LockedWrapperQueueMessageHandler.LockedWrapperQueueMessageHandler
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.CancellationToken
  name: CancellationToken
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_CancellationToken
  commentId: P:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.CancellationToken
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.CancellationToken
  nameWithType: LockedWrapperQueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.CancellationToken*
  name: CancellationToken
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_CancellationToken_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.CancellationToken
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.CancellationToken
  nameWithType: LockedWrapperQueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.DisposeAsync
  name: DisposeAsync()
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_DisposeAsync
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.DisposeAsync
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.DisposeAsync()
  nameWithType: LockedWrapperQueueMessageHandler.DisposeAsync()
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.DisposeAsync*
  name: DisposeAsync
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_DisposeAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.DisposeAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.DisposeAsync
  nameWithType: LockedWrapperQueueMessageHandler.DisposeAsync
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.MessageId
  name: MessageId
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_MessageId
  commentId: P:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.MessageId
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.MessageId
  nameWithType: LockedWrapperQueueMessageHandler.MessageId
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.MessageId*
  name: MessageId
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_MessageId_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.MessageId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.MessageId
  nameWithType: LockedWrapperQueueMessageHandler.MessageId
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.Status
  name: Status
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_Status
  commentId: P:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.Status
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.Status
  nameWithType: LockedWrapperQueueMessageHandler.Status
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.Status*
  name: Status
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_Status_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.Status
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.Status
  nameWithType: LockedWrapperQueueMessageHandler.Status
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.TaskId
  name: TaskId
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_TaskId
  commentId: P:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.TaskId
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.TaskId
  nameWithType: LockedWrapperQueueMessageHandler.TaskId
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.TaskId*
  name: TaskId
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueMessageHandler_TaskId_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.TaskId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueMessageHandler.TaskId
  nameWithType: LockedWrapperQueueMessageHandler.TaskId
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage
  name: LockedWrapperQueueStorage
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html
  commentId: T:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage
  nameWithType: LockedWrapperQueueStorage
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.#ctor(ArmoniK.Core.Common.Storage.ILockedQueueStorage,ILogger{ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage})
  name: LockedWrapperQueueStorage(ILockedQueueStorage, ILogger<LockedWrapperQueueStorage>)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage__ctor_ArmoniK_Core_Common_Storage_ILockedQueueStorage_ILogger_ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage__
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.#ctor(ArmoniK.Core.Common.Storage.ILockedQueueStorage,ILogger{ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage})
  name.vb: LockedWrapperQueueStorage(ILockedQueueStorage, ILogger(Of LockedWrapperQueueStorage))
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.LockedWrapperQueueStorage(ArmoniK.Core.Common.Storage.ILockedQueueStorage, ILogger<ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage>)
  fullName.vb: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.LockedWrapperQueueStorage(ArmoniK.Core.Common.Storage.ILockedQueueStorage, ILogger(Of ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage))
  nameWithType: LockedWrapperQueueStorage.LockedWrapperQueueStorage(ILockedQueueStorage, ILogger<LockedWrapperQueueStorage>)
  nameWithType.vb: LockedWrapperQueueStorage.LockedWrapperQueueStorage(ILockedQueueStorage, ILogger(Of LockedWrapperQueueStorage))
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.#ctor*
  name: LockedWrapperQueueStorage
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage__ctor_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.LockedWrapperQueueStorage
  nameWithType: LockedWrapperQueueStorage.LockedWrapperQueueStorage
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  name: Check(HealthCheckTag)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_Check_ArmoniK_Core_Common_HealthCheckTag_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Check(ArmoniK.Core.Common.HealthCheckTag)
  nameWithType: LockedWrapperQueueStorage.Check(HealthCheckTag)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Check*
  name: Check
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_Check_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Check
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Check
  nameWithType: LockedWrapperQueueStorage.Check
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name: EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_EnqueueMessagesAsync_IEnumerable_System_String__System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.EnqueueMessagesAsync(IEnumerable{System.String},System.Int32,CancellationToken)
  name.vb: EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.EnqueueMessagesAsync(IEnumerable<System.String>, System.Int32, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.EnqueueMessagesAsync(IEnumerable(Of System.String), System.Int32, CancellationToken)
  nameWithType: LockedWrapperQueueStorage.EnqueueMessagesAsync(IEnumerable<String>, Int32, CancellationToken)
  nameWithType.vb: LockedWrapperQueueStorage.EnqueueMessagesAsync(IEnumerable(Of String), Int32, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.EnqueueMessagesAsync*
  name: EnqueueMessagesAsync
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_EnqueueMessagesAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.EnqueueMessagesAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.EnqueueMessagesAsync
  nameWithType: LockedWrapperQueueStorage.EnqueueMessagesAsync
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Init(CancellationToken)
  name: Init(CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_Init_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Init(CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Init(CancellationToken)
  nameWithType: LockedWrapperQueueStorage.Init(CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Init*
  name: Init
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_Init_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.Init
  nameWithType: LockedWrapperQueueStorage.Init
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MaxPriority
  name: MaxPriority
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_MaxPriority
  commentId: P:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MaxPriority
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MaxPriority
  nameWithType: LockedWrapperQueueStorage.MaxPriority
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MaxPriority*
  name: MaxPriority
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_MaxPriority_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MaxPriority
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MaxPriority
  nameWithType: LockedWrapperQueueStorage.MaxPriority
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageProcessedAsync(System.String,CancellationToken)
  name: MessageProcessedAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_MessageProcessedAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageProcessedAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageProcessedAsync(System.String, CancellationToken)
  nameWithType: LockedWrapperQueueStorage.MessageProcessedAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageProcessedAsync*
  name: MessageProcessedAsync
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_MessageProcessedAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageProcessedAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageProcessedAsync
  nameWithType: LockedWrapperQueueStorage.MessageProcessedAsync
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageRejectedAsync(System.String,CancellationToken)
  name: MessageRejectedAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_MessageRejectedAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageRejectedAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageRejectedAsync(System.String, CancellationToken)
  nameWithType: LockedWrapperQueueStorage.MessageRejectedAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageRejectedAsync*
  name: MessageRejectedAsync
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_MessageRejectedAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageRejectedAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.MessageRejectedAsync
  nameWithType: LockedWrapperQueueStorage.MessageRejectedAsync
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.PullAsync(System.Int32,CancellationToken)
  name: PullAsync(Int32, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_PullAsync_System_Int32_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.PullAsync(System.Int32,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.PullAsync(System.Int32, CancellationToken)
  nameWithType: LockedWrapperQueueStorage.PullAsync(Int32, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.PullAsync*
  name: PullAsync
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_PullAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.PullAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.PullAsync
  nameWithType: LockedWrapperQueueStorage.PullAsync
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.ReleaseMessageAsync(System.String,CancellationToken)
  name: ReleaseMessageAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_ReleaseMessageAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.ReleaseMessageAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.ReleaseMessageAsync(System.String, CancellationToken)
  nameWithType: LockedWrapperQueueStorage.ReleaseMessageAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.ReleaseMessageAsync*
  name: ReleaseMessageAsync
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_ReleaseMessageAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.ReleaseMessageAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.ReleaseMessageAsync
  nameWithType: LockedWrapperQueueStorage.ReleaseMessageAsync
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.RequeueMessageAsync(System.String,CancellationToken)
  name: RequeueMessageAsync(String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_RequeueMessageAsync_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.RequeueMessageAsync(System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.RequeueMessageAsync(System.String, CancellationToken)
  nameWithType: LockedWrapperQueueStorage.RequeueMessageAsync(String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.RequeueMessageAsync*
  name: RequeueMessageAsync
  href: api/ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.html#ArmoniK_Core_Common_Storage_LockedWrapperQueueStorage_RequeueMessageAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.RequeueMessageAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.LockedWrapperQueueStorage.RequeueMessageAsync
  nameWithType: LockedWrapperQueueStorage.RequeueMessageAsync
- uid: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt
  name: ObjectStorageFactoryExt
  href: api/ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.html
  commentId: T:ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt
  fullName: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt
  nameWithType: ObjectStorageFactoryExt
- uid: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreatePayloadStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory,System.String)
  name: CreatePayloadStorage(IObjectStorageFactory, String)
  href: api/ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.html#ArmoniK_Core_Common_Storage_ObjectStorageFactoryExt_CreatePayloadStorage_ArmoniK_Core_Common_Storage_IObjectStorageFactory_System_String_
  commentId: M:ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreatePayloadStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory,System.String)
  fullName: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreatePayloadStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory, System.String)
  nameWithType: ObjectStorageFactoryExt.CreatePayloadStorage(IObjectStorageFactory, String)
- uid: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreatePayloadStorage*
  name: CreatePayloadStorage
  href: api/ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.html#ArmoniK_Core_Common_Storage_ObjectStorageFactoryExt_CreatePayloadStorage_
  commentId: Overload:ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreatePayloadStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreatePayloadStorage
  nameWithType: ObjectStorageFactoryExt.CreatePayloadStorage
- uid: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResourcesStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory)
  name: CreateResourcesStorage(IObjectStorageFactory)
  href: api/ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.html#ArmoniK_Core_Common_Storage_ObjectStorageFactoryExt_CreateResourcesStorage_ArmoniK_Core_Common_Storage_IObjectStorageFactory_
  commentId: M:ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResourcesStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory)
  fullName: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResourcesStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory)
  nameWithType: ObjectStorageFactoryExt.CreateResourcesStorage(IObjectStorageFactory)
- uid: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResourcesStorage*
  name: CreateResourcesStorage
  href: api/ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.html#ArmoniK_Core_Common_Storage_ObjectStorageFactoryExt_CreateResourcesStorage_
  commentId: Overload:ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResourcesStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResourcesStorage
  nameWithType: ObjectStorageFactoryExt.CreateResourcesStorage
- uid: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResultStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory,System.String)
  name: CreateResultStorage(IObjectStorageFactory, String)
  href: api/ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.html#ArmoniK_Core_Common_Storage_ObjectStorageFactoryExt_CreateResultStorage_ArmoniK_Core_Common_Storage_IObjectStorageFactory_System_String_
  commentId: M:ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResultStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory,System.String)
  fullName: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResultStorage(ArmoniK.Core.Common.Storage.IObjectStorageFactory, System.String)
  nameWithType: ObjectStorageFactoryExt.CreateResultStorage(IObjectStorageFactory, String)
- uid: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResultStorage*
  name: CreateResultStorage
  href: api/ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.html#ArmoniK_Core_Common_Storage_ObjectStorageFactoryExt_CreateResultStorage_
  commentId: Overload:ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResultStorage
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.ObjectStorageFactoryExt.CreateResultStorage
  nameWithType: ObjectStorageFactoryExt.CreateResultStorage
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler
  name: QueueMessageHandler
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html
  commentId: T:ArmoniK.Core.Common.Storage.QueueMessageHandler
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler
  nameWithType: QueueMessageHandler
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.#ctor(System.String,System.String,Func{ArmoniK.Core.Common.Storage.QueueMessageStatus,Task},ILogger,CancellationToken)
  name: QueueMessageHandler(String, String, Func<QueueMessageStatus, Task>, ILogger, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler__ctor_System_String_System_String_Func_ArmoniK_Core_Common_Storage_QueueMessageStatus_Task__ILogger_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.QueueMessageHandler.#ctor(System.String,System.String,Func{ArmoniK.Core.Common.Storage.QueueMessageStatus,Task},ILogger,CancellationToken)
  name.vb: QueueMessageHandler(String, String, Func(Of QueueMessageStatus, Task), ILogger, CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.QueueMessageHandler(System.String, System.String, Func<ArmoniK.Core.Common.Storage.QueueMessageStatus, Task>, ILogger, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Storage.QueueMessageHandler.QueueMessageHandler(System.String, System.String, Func(Of ArmoniK.Core.Common.Storage.QueueMessageStatus, Task), ILogger, CancellationToken)
  nameWithType: QueueMessageHandler.QueueMessageHandler(String, String, Func<QueueMessageStatus, Task>, ILogger, CancellationToken)
  nameWithType.vb: QueueMessageHandler.QueueMessageHandler(String, String, Func(Of QueueMessageStatus, Task), ILogger, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.#ctor*
  name: QueueMessageHandler
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler__ctor_
  commentId: Overload:ArmoniK.Core.Common.Storage.QueueMessageHandler.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.QueueMessageHandler
  nameWithType: QueueMessageHandler.QueueMessageHandler
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.CancellationToken
  name: CancellationToken
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_CancellationToken
  commentId: P:ArmoniK.Core.Common.Storage.QueueMessageHandler.CancellationToken
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.CancellationToken
  nameWithType: QueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.CancellationToken*
  name: CancellationToken
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_CancellationToken_
  commentId: Overload:ArmoniK.Core.Common.Storage.QueueMessageHandler.CancellationToken
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.CancellationToken
  nameWithType: QueueMessageHandler.CancellationToken
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.DisposeAsync
  name: DisposeAsync()
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_DisposeAsync
  commentId: M:ArmoniK.Core.Common.Storage.QueueMessageHandler.DisposeAsync
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.DisposeAsync()
  nameWithType: QueueMessageHandler.DisposeAsync()
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.DisposeAsync*
  name: DisposeAsync
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_DisposeAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.QueueMessageHandler.DisposeAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.DisposeAsync
  nameWithType: QueueMessageHandler.DisposeAsync
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.MessageId
  name: MessageId
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_MessageId
  commentId: P:ArmoniK.Core.Common.Storage.QueueMessageHandler.MessageId
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.MessageId
  nameWithType: QueueMessageHandler.MessageId
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.MessageId*
  name: MessageId
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_MessageId_
  commentId: Overload:ArmoniK.Core.Common.Storage.QueueMessageHandler.MessageId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.MessageId
  nameWithType: QueueMessageHandler.MessageId
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.Status
  name: Status
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_Status
  commentId: P:ArmoniK.Core.Common.Storage.QueueMessageHandler.Status
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.Status
  nameWithType: QueueMessageHandler.Status
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.Status*
  name: Status
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_Status_
  commentId: Overload:ArmoniK.Core.Common.Storage.QueueMessageHandler.Status
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.Status
  nameWithType: QueueMessageHandler.Status
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.TaskId
  name: TaskId
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_TaskId
  commentId: P:ArmoniK.Core.Common.Storage.QueueMessageHandler.TaskId
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.TaskId
  nameWithType: QueueMessageHandler.TaskId
- uid: ArmoniK.Core.Common.Storage.QueueMessageHandler.TaskId*
  name: TaskId
  href: api/ArmoniK.Core.Common.Storage.QueueMessageHandler.html#ArmoniK_Core_Common_Storage_QueueMessageHandler_TaskId_
  commentId: Overload:ArmoniK.Core.Common.Storage.QueueMessageHandler.TaskId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.QueueMessageHandler.TaskId
  nameWithType: QueueMessageHandler.TaskId
- uid: ArmoniK.Core.Common.Storage.QueueMessageStatus
  name: QueueMessageStatus
  href: api/ArmoniK.Core.Common.Storage.QueueMessageStatus.html
  commentId: T:ArmoniK.Core.Common.Storage.QueueMessageStatus
  fullName: ArmoniK.Core.Common.Storage.QueueMessageStatus
  nameWithType: QueueMessageStatus
- uid: ArmoniK.Core.Common.Storage.QueueMessageStatus.Cancelled
  name: Cancelled
  href: api/ArmoniK.Core.Common.Storage.QueueMessageStatus.html#ArmoniK_Core_Common_Storage_QueueMessageStatus_Cancelled
  commentId: F:ArmoniK.Core.Common.Storage.QueueMessageStatus.Cancelled
  fullName: ArmoniK.Core.Common.Storage.QueueMessageStatus.Cancelled
  nameWithType: QueueMessageStatus.Cancelled
- uid: ArmoniK.Core.Common.Storage.QueueMessageStatus.Failed
  name: Failed
  href: api/ArmoniK.Core.Common.Storage.QueueMessageStatus.html#ArmoniK_Core_Common_Storage_QueueMessageStatus_Failed
  commentId: F:ArmoniK.Core.Common.Storage.QueueMessageStatus.Failed
  fullName: ArmoniK.Core.Common.Storage.QueueMessageStatus.Failed
  nameWithType: QueueMessageStatus.Failed
- uid: ArmoniK.Core.Common.Storage.QueueMessageStatus.Poisonous
  name: Poisonous
  href: api/ArmoniK.Core.Common.Storage.QueueMessageStatus.html#ArmoniK_Core_Common_Storage_QueueMessageStatus_Poisonous
  commentId: F:ArmoniK.Core.Common.Storage.QueueMessageStatus.Poisonous
  fullName: ArmoniK.Core.Common.Storage.QueueMessageStatus.Poisonous
  nameWithType: QueueMessageStatus.Poisonous
- uid: ArmoniK.Core.Common.Storage.QueueMessageStatus.Postponed
  name: Postponed
  href: api/ArmoniK.Core.Common.Storage.QueueMessageStatus.html#ArmoniK_Core_Common_Storage_QueueMessageStatus_Postponed
  commentId: F:ArmoniK.Core.Common.Storage.QueueMessageStatus.Postponed
  fullName: ArmoniK.Core.Common.Storage.QueueMessageStatus.Postponed
  nameWithType: QueueMessageStatus.Postponed
- uid: ArmoniK.Core.Common.Storage.QueueMessageStatus.Processed
  name: Processed
  href: api/ArmoniK.Core.Common.Storage.QueueMessageStatus.html#ArmoniK_Core_Common_Storage_QueueMessageStatus_Processed
  commentId: F:ArmoniK.Core.Common.Storage.QueueMessageStatus.Processed
  fullName: ArmoniK.Core.Common.Storage.QueueMessageStatus.Processed
  nameWithType: QueueMessageStatus.Processed
- uid: ArmoniK.Core.Common.Storage.QueueMessageStatus.Running
  name: Running
  href: api/ArmoniK.Core.Common.Storage.QueueMessageStatus.html#ArmoniK_Core_Common_Storage_QueueMessageStatus_Running
  commentId: F:ArmoniK.Core.Common.Storage.QueueMessageStatus.Running
  fullName: ArmoniK.Core.Common.Storage.QueueMessageStatus.Running
  nameWithType: QueueMessageStatus.Running
- uid: ArmoniK.Core.Common.Storage.QueueMessageStatus.Waiting
  name: Waiting
  href: api/ArmoniK.Core.Common.Storage.QueueMessageStatus.html#ArmoniK_Core_Common_Storage_QueueMessageStatus_Waiting
  commentId: F:ArmoniK.Core.Common.Storage.QueueMessageStatus.Waiting
  fullName: ArmoniK.Core.Common.Storage.QueueMessageStatus.Waiting
  nameWithType: QueueMessageStatus.Waiting
- uid: ArmoniK.Core.Common.Storage.SessionTableExtensions
  name: SessionTableExtensions
  href: api/ArmoniK.Core.Common.Storage.SessionTableExtensions.html
  commentId: T:ArmoniK.Core.Common.Storage.SessionTableExtensions
  fullName: ArmoniK.Core.Common.Storage.SessionTableExtensions
  nameWithType: SessionTableExtensions
- uid: ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateDispatchedSessionAsync(ArmoniK.Core.Common.Storage.ISessionTable,System.String,System.String,System.String,CancellationToken)
  name: CreateDispatchedSessionAsync(ISessionTable, String, String, String, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.SessionTableExtensions.html#ArmoniK_Core_Common_Storage_SessionTableExtensions_CreateDispatchedSessionAsync_ArmoniK_Core_Common_Storage_ISessionTable_System_String_System_String_System_String_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateDispatchedSessionAsync(ArmoniK.Core.Common.Storage.ISessionTable,System.String,System.String,System.String,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateDispatchedSessionAsync(ArmoniK.Core.Common.Storage.ISessionTable, System.String, System.String, System.String, CancellationToken)
  nameWithType: SessionTableExtensions.CreateDispatchedSessionAsync(ISessionTable, String, String, String, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateDispatchedSessionAsync*
  name: CreateDispatchedSessionAsync
  href: api/ArmoniK.Core.Common.Storage.SessionTableExtensions.html#ArmoniK_Core_Common_Storage_SessionTableExtensions_CreateDispatchedSessionAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateDispatchedSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateDispatchedSessionAsync
  nameWithType: SessionTableExtensions.CreateDispatchedSessionAsync
- uid: ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateSessionAsync(ArmoniK.Core.Common.Storage.ISessionTable,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  name: CreateSessionAsync(ISessionTable, String, TaskOptions, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.SessionTableExtensions.html#ArmoniK_Core_Common_Storage_SessionTableExtensions_CreateSessionAsync_ArmoniK_Core_Common_Storage_ISessionTable_System_String_ArmoniK_Api_gRPC_V1_TaskOptions_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateSessionAsync(ArmoniK.Core.Common.Storage.ISessionTable,System.String,ArmoniK.Api.gRPC.V1.TaskOptions,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateSessionAsync(ArmoniK.Core.Common.Storage.ISessionTable, System.String, ArmoniK.Api.gRPC.V1.TaskOptions, CancellationToken)
  nameWithType: SessionTableExtensions.CreateSessionAsync(ISessionTable, String, TaskOptions, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateSessionAsync*
  name: CreateSessionAsync
  href: api/ArmoniK.Core.Common.Storage.SessionTableExtensions.html#ArmoniK_Core_Common_Storage_SessionTableExtensions_CreateSessionAsync_
  commentId: Overload:ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateSessionAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.SessionTableExtensions.CreateSessionAsync
  nameWithType: SessionTableExtensions.CreateSessionAsync
- uid: ArmoniK.Core.Common.Storage.TaskTableExtensions
  name: TaskTableExtensions
  href: api/ArmoniK.Core.Common.Storage.TaskTableExtensions.html
  commentId: T:ArmoniK.Core.Common.Storage.TaskTableExtensions
  fullName: ArmoniK.Core.Common.Storage.TaskTableExtensions
  nameWithType: TaskTableExtensions
- uid: ArmoniK.Core.Common.Storage.TaskTableExtensions.CancelTasks(ArmoniK.Core.Common.Storage.ITaskTable,TaskFilter,CancellationToken)
  name: CancelTasks(ITaskTable, TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.TaskTableExtensions.html#ArmoniK_Core_Common_Storage_TaskTableExtensions_CancelTasks_ArmoniK_Core_Common_Storage_ITaskTable_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.TaskTableExtensions.CancelTasks(ArmoniK.Core.Common.Storage.ITaskTable,TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.TaskTableExtensions.CancelTasks(ArmoniK.Core.Common.Storage.ITaskTable, TaskFilter, CancellationToken)
  nameWithType: TaskTableExtensions.CancelTasks(ITaskTable, TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.TaskTableExtensions.CancelTasks*
  name: CancelTasks
  href: api/ArmoniK.Core.Common.Storage.TaskTableExtensions.html#ArmoniK_Core_Common_Storage_TaskTableExtensions_CancelTasks_
  commentId: Overload:ArmoniK.Core.Common.Storage.TaskTableExtensions.CancelTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.TaskTableExtensions.CancelTasks
  nameWithType: TaskTableExtensions.CancelTasks
- uid: ArmoniK.Core.Common.Storage.TaskTableExtensions.FinalizeTaskCreation(ArmoniK.Core.Common.Storage.ITaskTable,TaskFilter,CancellationToken)
  name: FinalizeTaskCreation(ITaskTable, TaskFilter, CancellationToken)
  href: api/ArmoniK.Core.Common.Storage.TaskTableExtensions.html#ArmoniK_Core_Common_Storage_TaskTableExtensions_FinalizeTaskCreation_ArmoniK_Core_Common_Storage_ITaskTable_TaskFilter_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Storage.TaskTableExtensions.FinalizeTaskCreation(ArmoniK.Core.Common.Storage.ITaskTable,TaskFilter,CancellationToken)
  fullName: ArmoniK.Core.Common.Storage.TaskTableExtensions.FinalizeTaskCreation(ArmoniK.Core.Common.Storage.ITaskTable, TaskFilter, CancellationToken)
  nameWithType: TaskTableExtensions.FinalizeTaskCreation(ITaskTable, TaskFilter, CancellationToken)
- uid: ArmoniK.Core.Common.Storage.TaskTableExtensions.FinalizeTaskCreation*
  name: FinalizeTaskCreation
  href: api/ArmoniK.Core.Common.Storage.TaskTableExtensions.html#ArmoniK_Core_Common_Storage_TaskTableExtensions_FinalizeTaskCreation_
  commentId: Overload:ArmoniK.Core.Common.Storage.TaskTableExtensions.FinalizeTaskCreation
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Storage.TaskTableExtensions.FinalizeTaskCreation
  nameWithType: TaskTableExtensions.FinalizeTaskCreation
- uid: ArmoniK.Core.Common.Stream.Client
  name: ArmoniK.Core.Common.Stream.Client
  href: api/ArmoniK.Core.Common.Stream.Client.html
  commentId: N:ArmoniK.Core.Common.Stream.Client
  fullName: ArmoniK.Core.Common.Stream.Client
  nameWithType: ArmoniK.Core.Common.Stream.Client
- uid: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt
  name: SubmitterClientExt
  href: api/ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.html
  commentId: T:ArmoniK.Core.Common.Stream.Client.SubmitterClientExt
  fullName: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt
  nameWithType: SubmitterClientExt
- uid: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.CreateTasksAsync(Submitter.SubmitterClient,System.String,TaskOptions,IEnumerable{TaskRequest},CancellationToken)
  name: CreateTasksAsync(Submitter.SubmitterClient, String, TaskOptions, IEnumerable<TaskRequest>, CancellationToken)
  href: api/ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.html#ArmoniK_Core_Common_Stream_Client_SubmitterClientExt_CreateTasksAsync_Submitter_SubmitterClient_System_String_TaskOptions_IEnumerable_TaskRequest__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.CreateTasksAsync(Submitter.SubmitterClient,System.String,TaskOptions,IEnumerable{TaskRequest},CancellationToken)
  name.vb: CreateTasksAsync(Submitter.SubmitterClient, String, TaskOptions, IEnumerable(Of TaskRequest), CancellationToken)
  fullName: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.CreateTasksAsync(Submitter.SubmitterClient, System.String, TaskOptions, IEnumerable<TaskRequest>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.CreateTasksAsync(Submitter.SubmitterClient, System.String, TaskOptions, IEnumerable(Of TaskRequest), CancellationToken)
  nameWithType: SubmitterClientExt.CreateTasksAsync(Submitter.SubmitterClient, String, TaskOptions, IEnumerable<TaskRequest>, CancellationToken)
  nameWithType.vb: SubmitterClientExt.CreateTasksAsync(Submitter.SubmitterClient, String, TaskOptions, IEnumerable(Of TaskRequest), CancellationToken)
- uid: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.CreateTasksAsync*
  name: CreateTasksAsync
  href: api/ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.html#ArmoniK_Core_Common_Stream_Client_SubmitterClientExt_CreateTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.CreateTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.CreateTasksAsync
  nameWithType: SubmitterClientExt.CreateTasksAsync
- uid: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.GetResultAsync(Submitter.SubmitterClient,ResultRequest,CancellationToken)
  name: GetResultAsync(Submitter.SubmitterClient, ResultRequest, CancellationToken)
  href: api/ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.html#ArmoniK_Core_Common_Stream_Client_SubmitterClientExt_GetResultAsync_Submitter_SubmitterClient_ResultRequest_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.GetResultAsync(Submitter.SubmitterClient,ResultRequest,CancellationToken)
  fullName: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.GetResultAsync(Submitter.SubmitterClient, ResultRequest, CancellationToken)
  nameWithType: SubmitterClientExt.GetResultAsync(Submitter.SubmitterClient, ResultRequest, CancellationToken)
- uid: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.GetResultAsync*
  name: GetResultAsync
  href: api/ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.html#ArmoniK_Core_Common_Stream_Client_SubmitterClientExt_GetResultAsync_
  commentId: Overload:ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.GetResultAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.GetResultAsync
  nameWithType: SubmitterClientExt.GetResultAsync
- uid: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream(IEnumerable{TaskRequest},System.String,TaskOptions,System.Int32)
  name: ToRequestStream(IEnumerable<TaskRequest>, String, TaskOptions, Int32)
  href: api/ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.html#ArmoniK_Core_Common_Stream_Client_SubmitterClientExt_ToRequestStream_IEnumerable_TaskRequest__System_String_TaskOptions_System_Int32_
  commentId: M:ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream(IEnumerable{TaskRequest},System.String,TaskOptions,System.Int32)
  name.vb: ToRequestStream(IEnumerable(Of TaskRequest), String, TaskOptions, Int32)
  fullName: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream(IEnumerable<TaskRequest>, System.String, TaskOptions, System.Int32)
  fullName.vb: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream(IEnumerable(Of TaskRequest), System.String, TaskOptions, System.Int32)
  nameWithType: SubmitterClientExt.ToRequestStream(IEnumerable<TaskRequest>, String, TaskOptions, Int32)
  nameWithType.vb: SubmitterClientExt.ToRequestStream(IEnumerable(Of TaskRequest), String, TaskOptions, Int32)
- uid: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream(TaskRequest,System.Boolean,System.Int32)
  name: ToRequestStream(TaskRequest, Boolean, Int32)
  href: api/ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.html#ArmoniK_Core_Common_Stream_Client_SubmitterClientExt_ToRequestStream_TaskRequest_System_Boolean_System_Int32_
  commentId: M:ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream(TaskRequest,System.Boolean,System.Int32)
  fullName: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream(TaskRequest, System.Boolean, System.Int32)
  nameWithType: SubmitterClientExt.ToRequestStream(TaskRequest, Boolean, Int32)
- uid: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream*
  name: ToRequestStream
  href: api/ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.html#ArmoniK_Core_Common_Stream_Client_SubmitterClientExt_ToRequestStream_
  commentId: Overload:ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Client.SubmitterClientExt.ToRequestStream
  nameWithType: SubmitterClientExt.ToRequestStream
- uid: ArmoniK.Core.Common.Stream.Worker
  name: ArmoniK.Core.Common.Stream.Worker
  href: api/ArmoniK.Core.Common.Stream.Worker.html
  commentId: N:ArmoniK.Core.Common.Stream.Worker
  fullName: ArmoniK.Core.Common.Stream.Worker
  nameWithType: ArmoniK.Core.Common.Stream.Worker
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler
  name: ITaskHandler
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html
  commentId: T:ArmoniK.Core.Common.Stream.Worker.ITaskHandler
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler
  nameWithType: ITaskHandler
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Configuration
  name: Configuration
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_Configuration
  commentId: P:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Configuration
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Configuration
  nameWithType: ITaskHandler.Configuration
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Configuration*
  name: Configuration
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_Configuration_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Configuration
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Configuration
  nameWithType: ITaskHandler.Configuration
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.CreateTasksAsync(IEnumerable{TaskRequest},System.Nullable{TaskOptions})
  name: CreateTasksAsync(IEnumerable<TaskRequest>, Nullable<TaskOptions>)
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_CreateTasksAsync_IEnumerable_TaskRequest__System_Nullable_TaskOptions__
  commentId: M:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.CreateTasksAsync(IEnumerable{TaskRequest},System.Nullable{TaskOptions})
  name.vb: CreateTasksAsync(IEnumerable(Of TaskRequest), Nullable(Of TaskOptions))
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.CreateTasksAsync(IEnumerable<TaskRequest>, System.Nullable<TaskOptions>)
  fullName.vb: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.CreateTasksAsync(IEnumerable(Of TaskRequest), System.Nullable(Of TaskOptions))
  nameWithType: ITaskHandler.CreateTasksAsync(IEnumerable<TaskRequest>, Nullable<TaskOptions>)
  nameWithType.vb: ITaskHandler.CreateTasksAsync(IEnumerable(Of TaskRequest), Nullable(Of TaskOptions))
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.CreateTasksAsync*
  name: CreateTasksAsync
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_CreateTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.CreateTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.CreateTasksAsync
  nameWithType: ITaskHandler.CreateTasksAsync
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.DataDependencies
  name: DataDependencies
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_DataDependencies
  commentId: P:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.DataDependencies
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.DataDependencies
  nameWithType: ITaskHandler.DataDependencies
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.DataDependencies*
  name: DataDependencies
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_DataDependencies_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.DataDependencies
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.DataDependencies
  nameWithType: ITaskHandler.DataDependencies
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.ExpectedResults
  name: ExpectedResults
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_ExpectedResults
  commentId: P:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.ExpectedResults
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.ExpectedResults
  nameWithType: ITaskHandler.ExpectedResults
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.ExpectedResults*
  name: ExpectedResults
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_ExpectedResults_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.ExpectedResults
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.ExpectedResults
  nameWithType: ITaskHandler.ExpectedResults
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Payload
  name: Payload
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_Payload
  commentId: P:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Payload
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Payload
  nameWithType: ITaskHandler.Payload
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Payload*
  name: Payload
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_Payload_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Payload
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.Payload
  nameWithType: ITaskHandler.Payload
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestCommonData(System.String)
  name: RequestCommonData(String)
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_RequestCommonData_System_String_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestCommonData(System.String)
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestCommonData(System.String)
  nameWithType: ITaskHandler.RequestCommonData(String)
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestCommonData*
  name: RequestCommonData
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_RequestCommonData_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestCommonData
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestCommonData
  nameWithType: ITaskHandler.RequestCommonData
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestDirectData(System.String)
  name: RequestDirectData(String)
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_RequestDirectData_System_String_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestDirectData(System.String)
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestDirectData(System.String)
  nameWithType: ITaskHandler.RequestDirectData(String)
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestDirectData*
  name: RequestDirectData
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_RequestDirectData_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestDirectData
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestDirectData
  nameWithType: ITaskHandler.RequestDirectData
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestResource(System.String)
  name: RequestResource(String)
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_RequestResource_System_String_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestResource(System.String)
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestResource(System.String)
  nameWithType: ITaskHandler.RequestResource(String)
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestResource*
  name: RequestResource
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_RequestResource_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestResource
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.RequestResource
  nameWithType: ITaskHandler.RequestResource
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SendResult(System.String,System.Byte[])
  name: SendResult(String, Byte[])
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_SendResult_System_String_System_Byte___
  commentId: M:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SendResult(System.String,System.Byte[])
  name.vb: SendResult(String, Byte())
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SendResult(System.String, System.Byte[])
  fullName.vb: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SendResult(System.String, System.Byte())
  nameWithType: ITaskHandler.SendResult(String, Byte[])
  nameWithType.vb: ITaskHandler.SendResult(String, Byte())
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SendResult*
  name: SendResult
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_SendResult_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SendResult
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SendResult
  nameWithType: ITaskHandler.SendResult
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SessionId
  name: SessionId
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_SessionId
  commentId: P:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SessionId
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SessionId
  nameWithType: ITaskHandler.SessionId
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SessionId*
  name: SessionId
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_SessionId_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SessionId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.SessionId
  nameWithType: ITaskHandler.SessionId
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskId
  name: TaskId
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_TaskId
  commentId: P:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskId
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskId
  nameWithType: ITaskHandler.TaskId
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskId*
  name: TaskId
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_TaskId_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskId
  nameWithType: ITaskHandler.TaskId
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskOptions
  name: TaskOptions
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_TaskOptions
  commentId: P:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskOptions
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskOptions
  nameWithType: ITaskHandler.TaskOptions
- uid: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskOptions*
  name: TaskOptions
  href: api/ArmoniK.Core.Common.Stream.Worker.ITaskHandler.html#ArmoniK_Core_Common_Stream_Worker_ITaskHandler_TaskOptions_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskOptions
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.ITaskHandler.TaskOptions
  nameWithType: ITaskHandler.TaskOptions
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler
  name: TaskHandler
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html
  commentId: T:ArmoniK.Core.Common.Stream.Worker.TaskHandler
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler
  nameWithType: TaskHandler
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Configuration
  name: Configuration
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_Configuration
  commentId: P:ArmoniK.Core.Common.Stream.Worker.TaskHandler.Configuration
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Configuration
  nameWithType: TaskHandler.Configuration
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Configuration*
  name: Configuration
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_Configuration_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.Configuration
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Configuration
  nameWithType: TaskHandler.Configuration
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Create(IAsyncStreamReader{ProcessRequest},IServerStreamWriter{ProcessReply},Configuration,ILogger{ArmoniK.Core.Common.Stream.Worker.TaskHandler},CancellationToken)
  name: Create(IAsyncStreamReader<ProcessRequest>, IServerStreamWriter<ProcessReply>, Configuration, ILogger<TaskHandler>, CancellationToken)
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_Create_IAsyncStreamReader_ProcessRequest__IServerStreamWriter_ProcessReply__Configuration_ILogger_ArmoniK_Core_Common_Stream_Worker_TaskHandler__CancellationToken_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskHandler.Create(IAsyncStreamReader{ProcessRequest},IServerStreamWriter{ProcessReply},Configuration,ILogger{ArmoniK.Core.Common.Stream.Worker.TaskHandler},CancellationToken)
  name.vb: Create(IAsyncStreamReader(Of ProcessRequest), IServerStreamWriter(Of ProcessReply), Configuration, ILogger(Of TaskHandler), CancellationToken)
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Create(IAsyncStreamReader<ProcessRequest>, IServerStreamWriter<ProcessReply>, Configuration, ILogger<ArmoniK.Core.Common.Stream.Worker.TaskHandler>, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Create(IAsyncStreamReader(Of ProcessRequest), IServerStreamWriter(Of ProcessReply), Configuration, ILogger(Of ArmoniK.Core.Common.Stream.Worker.TaskHandler), CancellationToken)
  nameWithType: TaskHandler.Create(IAsyncStreamReader<ProcessRequest>, IServerStreamWriter<ProcessReply>, Configuration, ILogger<TaskHandler>, CancellationToken)
  nameWithType.vb: TaskHandler.Create(IAsyncStreamReader(Of ProcessRequest), IServerStreamWriter(Of ProcessReply), Configuration, ILogger(Of TaskHandler), CancellationToken)
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Create*
  name: Create
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_Create_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.Create
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Create
  nameWithType: TaskHandler.Create
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.CreateTasksAsync(IEnumerable{TaskRequest},System.Nullable{TaskOptions})
  name: CreateTasksAsync(IEnumerable<TaskRequest>, Nullable<TaskOptions>)
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_CreateTasksAsync_IEnumerable_TaskRequest__System_Nullable_TaskOptions__
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskHandler.CreateTasksAsync(IEnumerable{TaskRequest},System.Nullable{TaskOptions})
  name.vb: CreateTasksAsync(IEnumerable(Of TaskRequest), Nullable(Of TaskOptions))
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.CreateTasksAsync(IEnumerable<TaskRequest>, System.Nullable<TaskOptions>)
  fullName.vb: ArmoniK.Core.Common.Stream.Worker.TaskHandler.CreateTasksAsync(IEnumerable(Of TaskRequest), System.Nullable(Of TaskOptions))
  nameWithType: TaskHandler.CreateTasksAsync(IEnumerable<TaskRequest>, Nullable<TaskOptions>)
  nameWithType.vb: TaskHandler.CreateTasksAsync(IEnumerable(Of TaskRequest), Nullable(Of TaskOptions))
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.CreateTasksAsync*
  name: CreateTasksAsync
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_CreateTasksAsync_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.CreateTasksAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.CreateTasksAsync
  nameWithType: TaskHandler.CreateTasksAsync
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.DataDependencies
  name: DataDependencies
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_DataDependencies
  commentId: P:ArmoniK.Core.Common.Stream.Worker.TaskHandler.DataDependencies
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.DataDependencies
  nameWithType: TaskHandler.DataDependencies
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.DataDependencies*
  name: DataDependencies
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_DataDependencies_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.DataDependencies
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.DataDependencies
  nameWithType: TaskHandler.DataDependencies
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.ExpectedResults
  name: ExpectedResults
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_ExpectedResults
  commentId: P:ArmoniK.Core.Common.Stream.Worker.TaskHandler.ExpectedResults
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.ExpectedResults
  nameWithType: TaskHandler.ExpectedResults
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.ExpectedResults*
  name: ExpectedResults
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_ExpectedResults_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.ExpectedResults
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.ExpectedResults
  nameWithType: TaskHandler.ExpectedResults
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Init
  name: Init()
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_Init
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskHandler.Init
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Init()
  nameWithType: TaskHandler.Init()
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Init*
  name: Init
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_Init_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.Init
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Init
  nameWithType: TaskHandler.Init
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Payload
  name: Payload
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_Payload
  commentId: P:ArmoniK.Core.Common.Stream.Worker.TaskHandler.Payload
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Payload
  nameWithType: TaskHandler.Payload
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Payload*
  name: Payload
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_Payload_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.Payload
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.Payload
  nameWithType: TaskHandler.Payload
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestCommonData(System.String)
  name: RequestCommonData(String)
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_RequestCommonData_System_String_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestCommonData(System.String)
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestCommonData(System.String)
  nameWithType: TaskHandler.RequestCommonData(String)
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestCommonData*
  name: RequestCommonData
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_RequestCommonData_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestCommonData
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestCommonData
  nameWithType: TaskHandler.RequestCommonData
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestDirectData(System.String)
  name: RequestDirectData(String)
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_RequestDirectData_System_String_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestDirectData(System.String)
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestDirectData(System.String)
  nameWithType: TaskHandler.RequestDirectData(String)
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestDirectData*
  name: RequestDirectData
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_RequestDirectData_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestDirectData
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestDirectData
  nameWithType: TaskHandler.RequestDirectData
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestResource(System.String)
  name: RequestResource(String)
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_RequestResource_System_String_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestResource(System.String)
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestResource(System.String)
  nameWithType: TaskHandler.RequestResource(String)
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestResource*
  name: RequestResource
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_RequestResource_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestResource
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.RequestResource
  nameWithType: TaskHandler.RequestResource
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SendResult(System.String,System.Byte[])
  name: SendResult(String, Byte[])
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_SendResult_System_String_System_Byte___
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskHandler.SendResult(System.String,System.Byte[])
  name.vb: SendResult(String, Byte())
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SendResult(System.String, System.Byte[])
  fullName.vb: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SendResult(System.String, System.Byte())
  nameWithType: TaskHandler.SendResult(String, Byte[])
  nameWithType.vb: TaskHandler.SendResult(String, Byte())
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SendResult*
  name: SendResult
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_SendResult_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.SendResult
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SendResult
  nameWithType: TaskHandler.SendResult
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SessionId
  name: SessionId
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_SessionId
  commentId: P:ArmoniK.Core.Common.Stream.Worker.TaskHandler.SessionId
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SessionId
  nameWithType: TaskHandler.SessionId
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SessionId*
  name: SessionId
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_SessionId_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.SessionId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.SessionId
  nameWithType: TaskHandler.SessionId
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskId
  name: TaskId
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_TaskId
  commentId: P:ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskId
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskId
  nameWithType: TaskHandler.TaskId
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskId*
  name: TaskId
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_TaskId_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskId
  nameWithType: TaskHandler.TaskId
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskOptions
  name: TaskOptions
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_TaskOptions
  commentId: P:ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskOptions
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskOptions
  nameWithType: TaskHandler.TaskOptions
- uid: ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskOptions*
  name: TaskOptions
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskHandler.html#ArmoniK_Core_Common_Stream_Worker_TaskHandler_TaskOptions_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskOptions
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskHandler.TaskOptions
  nameWithType: TaskHandler.TaskOptions
- uid: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions
  name: TaskRequestExtensions
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.html
  commentId: T:ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions
  nameWithType: TaskRequestExtensions
- uid: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream(IEnumerable{TaskRequest},System.Nullable{TaskOptions},System.Int32)
  name: ToRequestStream(IEnumerable<TaskRequest>, Nullable<TaskOptions>, Int32)
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.html#ArmoniK_Core_Common_Stream_Worker_TaskRequestExtensions_ToRequestStream_IEnumerable_TaskRequest__System_Nullable_TaskOptions__System_Int32_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream(IEnumerable{TaskRequest},System.Nullable{TaskOptions},System.Int32)
  name.vb: ToRequestStream(IEnumerable(Of TaskRequest), Nullable(Of TaskOptions), Int32)
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream(IEnumerable<TaskRequest>, System.Nullable<TaskOptions>, System.Int32)
  fullName.vb: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream(IEnumerable(Of TaskRequest), System.Nullable(Of TaskOptions), System.Int32)
  nameWithType: TaskRequestExtensions.ToRequestStream(IEnumerable<TaskRequest>, Nullable<TaskOptions>, Int32)
  nameWithType.vb: TaskRequestExtensions.ToRequestStream(IEnumerable(Of TaskRequest), Nullable(Of TaskOptions), Int32)
- uid: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream(TaskRequest,System.Boolean,System.Int32)
  name: ToRequestStream(TaskRequest, Boolean, Int32)
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.html#ArmoniK_Core_Common_Stream_Worker_TaskRequestExtensions_ToRequestStream_TaskRequest_System_Boolean_System_Int32_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream(TaskRequest,System.Boolean,System.Int32)
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream(TaskRequest, System.Boolean, System.Int32)
  nameWithType: TaskRequestExtensions.ToRequestStream(TaskRequest, Boolean, Int32)
- uid: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream*
  name: ToRequestStream
  href: api/ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.html#ArmoniK_Core_Common_Stream_Worker_TaskRequestExtensions_ToRequestStream_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.TaskRequestExtensions.ToRequestStream
  nameWithType: TaskRequestExtensions.ToRequestStream
- uid: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper
  name: WorkerStreamWrapper
  href: api/ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.html
  commentId: T:ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper
  fullName: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper
  nameWithType: WorkerStreamWrapper
- uid: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.#ctor(ILoggerFactory)
  name: WorkerStreamWrapper(ILoggerFactory)
  href: api/ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.html#ArmoniK_Core_Common_Stream_Worker_WorkerStreamWrapper__ctor_ILoggerFactory_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.#ctor(ILoggerFactory)
  fullName: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.WorkerStreamWrapper(ILoggerFactory)
  nameWithType: WorkerStreamWrapper.WorkerStreamWrapper(ILoggerFactory)
- uid: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.#ctor*
  name: WorkerStreamWrapper
  href: api/ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.html#ArmoniK_Core_Common_Stream_Worker_WorkerStreamWrapper__ctor_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.WorkerStreamWrapper
  nameWithType: WorkerStreamWrapper.WorkerStreamWrapper
- uid: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.logger_
  name: logger_
  href: api/ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.html#ArmoniK_Core_Common_Stream_Worker_WorkerStreamWrapper_logger_
  commentId: F:ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.logger_
  fullName: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.logger_
  nameWithType: WorkerStreamWrapper.logger_
- uid: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  name: Process(ITaskHandler)
  href: api/ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.html#ArmoniK_Core_Common_Stream_Worker_WorkerStreamWrapper_Process_ArmoniK_Core_Common_Stream_Worker_ITaskHandler_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  fullName: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  nameWithType: WorkerStreamWrapper.Process(ITaskHandler)
- uid: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process(IAsyncStreamReader{ProcessRequest},IServerStreamWriter{ProcessReply},ServerCallContext)
  name: Process(IAsyncStreamReader<ProcessRequest>, IServerStreamWriter<ProcessReply>, ServerCallContext)
  href: api/ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.html#ArmoniK_Core_Common_Stream_Worker_WorkerStreamWrapper_Process_IAsyncStreamReader_ProcessRequest__IServerStreamWriter_ProcessReply__ServerCallContext_
  commentId: M:ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process(IAsyncStreamReader{ProcessRequest},IServerStreamWriter{ProcessReply},ServerCallContext)
  name.vb: Process(IAsyncStreamReader(Of ProcessRequest), IServerStreamWriter(Of ProcessReply), ServerCallContext)
  fullName: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process(IAsyncStreamReader<ProcessRequest>, IServerStreamWriter<ProcessReply>, ServerCallContext)
  fullName.vb: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process(IAsyncStreamReader(Of ProcessRequest), IServerStreamWriter(Of ProcessReply), ServerCallContext)
  nameWithType: WorkerStreamWrapper.Process(IAsyncStreamReader<ProcessRequest>, IServerStreamWriter<ProcessReply>, ServerCallContext)
  nameWithType.vb: WorkerStreamWrapper.Process(IAsyncStreamReader(Of ProcessRequest), IServerStreamWriter(Of ProcessReply), ServerCallContext)
- uid: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process*
  name: Process
  href: api/ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.html#ArmoniK_Core_Common_Stream_Worker_WorkerStreamWrapper_Process_
  commentId: Overload:ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Stream.Worker.WorkerStreamWrapper.Process
  nameWithType: WorkerStreamWrapper.Process
- uid: ArmoniK.Core.Common.Tests
  name: ArmoniK.Core.Common.Tests
  href: api/ArmoniK.Core.Common.Tests.html
  commentId: N:ArmoniK.Core.Common.Tests
  fullName: ArmoniK.Core.Common.Tests
  nameWithType: ArmoniK.Core.Common.Tests
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest
  name: CreateLargeTaskRequestValidatorTest
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html
  commentId: T:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest
  nameWithType: CreateLargeTaskRequestValidatorTest
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.BlankSessionShouldFail
  name: BlankSessionShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_BlankSessionShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.BlankSessionShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.BlankSessionShouldFail()
  nameWithType: CreateLargeTaskRequestValidatorTest.BlankSessionShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.BlankSessionShouldFail*
  name: BlankSessionShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_BlankSessionShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.BlankSessionShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.BlankSessionShouldFail
  nameWithType: CreateLargeTaskRequestValidatorTest.BlankSessionShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.CompleteInitRequestShouldBeValid
  name: CompleteInitRequestShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_CompleteInitRequestShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.CompleteInitRequestShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.CompleteInitRequestShouldBeValid()
  nameWithType: CreateLargeTaskRequestValidatorTest.CompleteInitRequestShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.CompleteInitRequestShouldBeValid*
  name: CompleteInitRequestShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_CompleteInitRequestShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.CompleteInitRequestShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.CompleteInitRequestShouldBeValid
  nameWithType: CreateLargeTaskRequestValidatorTest.CompleteInitRequestShouldBeValid
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataChunkShouldFail
  name: EmptyDataChunkShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_EmptyDataChunkShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataChunkShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataChunkShouldFail()
  nameWithType: CreateLargeTaskRequestValidatorTest.EmptyDataChunkShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataChunkShouldFail*
  name: EmptyDataChunkShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_EmptyDataChunkShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataChunkShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataChunkShouldFail
  nameWithType: CreateLargeTaskRequestValidatorTest.EmptyDataChunkShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataInDataChunkShouldSucceed
  name: EmptyDataInDataChunkShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_EmptyDataInDataChunkShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataInDataChunkShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataInDataChunkShouldSucceed()
  nameWithType: CreateLargeTaskRequestValidatorTest.EmptyDataInDataChunkShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataInDataChunkShouldSucceed*
  name: EmptyDataInDataChunkShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_EmptyDataInDataChunkShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataInDataChunkShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.EmptyDataInDataChunkShouldSucceed
  nameWithType: CreateLargeTaskRequestValidatorTest.EmptyDataInDataChunkShouldSucceed
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.LargeDataInDataChunkShouldSucceed
  name: LargeDataInDataChunkShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_LargeDataInDataChunkShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.LargeDataInDataChunkShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.LargeDataInDataChunkShouldSucceed()
  nameWithType: CreateLargeTaskRequestValidatorTest.LargeDataInDataChunkShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.LargeDataInDataChunkShouldSucceed*
  name: LargeDataInDataChunkShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_LargeDataInDataChunkShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.LargeDataInDataChunkShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.LargeDataInDataChunkShouldSucceed
  nameWithType: CreateLargeTaskRequestValidatorTest.LargeDataInDataChunkShouldSucceed
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.MissingSessionIdShouldFail
  name: MissingSessionIdShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_MissingSessionIdShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.MissingSessionIdShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.MissingSessionIdShouldFail()
  nameWithType: CreateLargeTaskRequestValidatorTest.MissingSessionIdShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.MissingSessionIdShouldFail*
  name: MissingSessionIdShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_MissingSessionIdShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.MissingSessionIdShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.MissingSessionIdShouldFail
  nameWithType: CreateLargeTaskRequestValidatorTest.MissingSessionIdShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullDataInDataChunkShouldThrowError
  name: NullDataInDataChunkShouldThrowError()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_NullDataInDataChunkShouldThrowError
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullDataInDataChunkShouldThrowError
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullDataInDataChunkShouldThrowError()
  nameWithType: CreateLargeTaskRequestValidatorTest.NullDataInDataChunkShouldThrowError()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullDataInDataChunkShouldThrowError*
  name: NullDataInDataChunkShouldThrowError
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_NullDataInDataChunkShouldThrowError_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullDataInDataChunkShouldThrowError
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullDataInDataChunkShouldThrowError
  nameWithType: CreateLargeTaskRequestValidatorTest.NullDataInDataChunkShouldThrowError
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullPayloadShouldFail
  name: NullPayloadShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_NullPayloadShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullPayloadShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullPayloadShouldFail()
  nameWithType: CreateLargeTaskRequestValidatorTest.NullPayloadShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullPayloadShouldFail*
  name: NullPayloadShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_NullPayloadShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullPayloadShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.NullPayloadShouldFail
  nameWithType: CreateLargeTaskRequestValidatorTest.NullPayloadShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.TooLargeDataInDataChunkShouldFail
  name: TooLargeDataInDataChunkShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_TooLargeDataInDataChunkShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.TooLargeDataInDataChunkShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.TooLargeDataInDataChunkShouldFail()
  nameWithType: CreateLargeTaskRequestValidatorTest.TooLargeDataInDataChunkShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.TooLargeDataInDataChunkShouldFail*
  name: TooLargeDataInDataChunkShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateLargeTaskRequestValidatorTest_TooLargeDataInDataChunkShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.TooLargeDataInDataChunkShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateLargeTaskRequestValidatorTest.TooLargeDataInDataChunkShouldFail
  nameWithType: CreateLargeTaskRequestValidatorTest.TooLargeDataInDataChunkShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest
  name: CreateSessionRequestValidatorTest
  href: api/ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.html
  commentId: T:ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest
  fullName: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest
  nameWithType: CreateSessionRequestValidatorTest
- uid: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.EmptyIdShouldFail
  name: EmptyIdShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSessionRequestValidatorTest_EmptyIdShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.EmptyIdShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.EmptyIdShouldFail()
  nameWithType: CreateSessionRequestValidatorTest.EmptyIdShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.EmptyIdShouldFail*
  name: EmptyIdShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSessionRequestValidatorTest_EmptyIdShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.EmptyIdShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.EmptyIdShouldFail
  nameWithType: CreateSessionRequestValidatorTest.EmptyIdShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.NullDefaultTaskOptionShouldFail
  name: NullDefaultTaskOptionShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSessionRequestValidatorTest_NullDefaultTaskOptionShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.NullDefaultTaskOptionShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.NullDefaultTaskOptionShouldFail()
  nameWithType: CreateSessionRequestValidatorTest.NullDefaultTaskOptionShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.NullDefaultTaskOptionShouldFail*
  name: NullDefaultTaskOptionShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSessionRequestValidatorTest_NullDefaultTaskOptionShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.NullDefaultTaskOptionShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.NullDefaultTaskOptionShouldFail
  nameWithType: CreateSessionRequestValidatorTest.NullDefaultTaskOptionShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.SessionOk
  name: SessionOk()
  href: api/ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSessionRequestValidatorTest_SessionOk
  commentId: M:ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.SessionOk
  fullName: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.SessionOk()
  nameWithType: CreateSessionRequestValidatorTest.SessionOk()
- uid: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.SessionOk*
  name: SessionOk
  href: api/ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSessionRequestValidatorTest_SessionOk_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.SessionOk
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSessionRequestValidatorTest.SessionOk
  nameWithType: CreateSessionRequestValidatorTest.SessionOk
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest
  name: CreateSmallTaskRequestValidatorTest
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html
  commentId: T:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest
  nameWithType: CreateSmallTaskRequestValidatorTest
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.BlankSessionShouldFail
  name: BlankSessionShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_BlankSessionShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.BlankSessionShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.BlankSessionShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.BlankSessionShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.BlankSessionShouldFail*
  name: BlankSessionShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_BlankSessionShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.BlankSessionShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.BlankSessionShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.BlankSessionShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.CompleteRequestShouldBeValid
  name: CompleteRequestShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_CompleteRequestShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.CompleteRequestShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.CompleteRequestShouldBeValid()
  nameWithType: CreateSmallTaskRequestValidatorTest.CompleteRequestShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.CompleteRequestShouldBeValid*
  name: CompleteRequestShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_CompleteRequestShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.CompleteRequestShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.CompleteRequestShouldBeValid
  nameWithType: CreateSmallTaskRequestValidatorTest.CompleteRequestShouldBeValid
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyPayloadShouldFail
  name: EmptyPayloadShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_EmptyPayloadShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyPayloadShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyPayloadShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.EmptyPayloadShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyPayloadShouldFail*
  name: EmptyPayloadShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_EmptyPayloadShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyPayloadShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyPayloadShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.EmptyPayloadShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptySessionShouldFail
  name: EmptySessionShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_EmptySessionShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptySessionShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptySessionShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.EmptySessionShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptySessionShouldFail*
  name: EmptySessionShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_EmptySessionShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptySessionShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptySessionShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.EmptySessionShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyTaskRequestShouldFail
  name: EmptyTaskRequestShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_EmptyTaskRequestShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyTaskRequestShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyTaskRequestShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.EmptyTaskRequestShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyTaskRequestShouldFail*
  name: EmptyTaskRequestShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_EmptyTaskRequestShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyTaskRequestShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.EmptyTaskRequestShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.EmptyTaskRequestShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.MissingSessionIdShouldFail
  name: MissingSessionIdShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_MissingSessionIdShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.MissingSessionIdShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.MissingSessionIdShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.MissingSessionIdShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.MissingSessionIdShouldFail*
  name: MissingSessionIdShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_MissingSessionIdShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.MissingSessionIdShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.MissingSessionIdShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.MissingSessionIdShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativeMaxRetryShouldFail
  name: NegativeMaxRetryShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_NegativeMaxRetryShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativeMaxRetryShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativeMaxRetryShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.NegativeMaxRetryShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativeMaxRetryShouldFail*
  name: NegativeMaxRetryShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_NegativeMaxRetryShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativeMaxRetryShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativeMaxRetryShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.NegativeMaxRetryShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativePriorityShouldFail
  name: NegativePriorityShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_NegativePriorityShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativePriorityShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativePriorityShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.NegativePriorityShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativePriorityShouldFail*
  name: NegativePriorityShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_NegativePriorityShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativePriorityShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.NegativePriorityShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.NegativePriorityShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
  name: OnlyMaxRetryAndPriorityDefinedShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_OnlyMaxRetryAndPriorityDefinedShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid()
  nameWithType: CreateSmallTaskRequestValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid*
  name: OnlyMaxRetryAndPriorityDefinedShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_OnlyMaxRetryAndPriorityDefinedShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
  nameWithType: CreateSmallTaskRequestValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.TooBigPriorityShouldFail
  name: TooBigPriorityShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_TooBigPriorityShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.TooBigPriorityShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.TooBigPriorityShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.TooBigPriorityShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.TooBigPriorityShouldFail*
  name: TooBigPriorityShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_TooBigPriorityShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.TooBigPriorityShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.TooBigPriorityShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.TooBigPriorityShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxDurationShouldBeValid
  name: UndefinedMaxDurationShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedMaxDurationShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxDurationShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxDurationShouldBeValid()
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedMaxDurationShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxDurationShouldBeValid*
  name: UndefinedMaxDurationShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedMaxDurationShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxDurationShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxDurationShouldBeValid
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedMaxDurationShouldBeValid
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxRetriesShouldFail
  name: UndefinedMaxRetriesShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedMaxRetriesShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxRetriesShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxRetriesShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedMaxRetriesShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxRetriesShouldFail*
  name: UndefinedMaxRetriesShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedMaxRetriesShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxRetriesShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedMaxRetriesShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedMaxRetriesShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedOptionsShouldBeValid
  name: UndefinedOptionsShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedOptionsShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedOptionsShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedOptionsShouldBeValid()
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedOptionsShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedOptionsShouldBeValid*
  name: UndefinedOptionsShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedOptionsShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedOptionsShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedOptionsShouldBeValid
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedOptionsShouldBeValid
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPayloadShouldFail
  name: UndefinedPayloadShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedPayloadShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPayloadShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPayloadShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedPayloadShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPayloadShouldFail*
  name: UndefinedPayloadShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedPayloadShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPayloadShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPayloadShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedPayloadShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPriorityShouldFail
  name: UndefinedPriorityShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedPriorityShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPriorityShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPriorityShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedPriorityShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPriorityShouldFail*
  name: UndefinedPriorityShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedPriorityShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPriorityShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedPriorityShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedPriorityShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskOptionShouldFail
  name: UndefinedTaskOptionShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedTaskOptionShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskOptionShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskOptionShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedTaskOptionShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskOptionShouldFail*
  name: UndefinedTaskOptionShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedTaskOptionShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskOptionShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskOptionShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedTaskOptionShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskRequestShouldFail
  name: UndefinedTaskRequestShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedTaskRequestShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskRequestShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskRequestShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedTaskRequestShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskRequestShouldFail*
  name: UndefinedTaskRequestShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_UndefinedTaskRequestShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskRequestShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.UndefinedTaskRequestShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.UndefinedTaskRequestShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroMaxRetryShouldFail
  name: ZeroMaxRetryShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_ZeroMaxRetryShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroMaxRetryShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroMaxRetryShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.ZeroMaxRetryShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroMaxRetryShouldFail*
  name: ZeroMaxRetryShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_ZeroMaxRetryShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroMaxRetryShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroMaxRetryShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.ZeroMaxRetryShouldFail
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroPriorityShouldFail
  name: ZeroPriorityShouldFail()
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_ZeroPriorityShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroPriorityShouldFail
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroPriorityShouldFail()
  nameWithType: CreateSmallTaskRequestValidatorTest.ZeroPriorityShouldFail()
- uid: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroPriorityShouldFail*
  name: ZeroPriorityShouldFail
  href: api/ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.html#ArmoniK_Core_Common_Tests_CreateSmallTaskRequestValidatorTest_ZeroPriorityShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroPriorityShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.CreateSmallTaskRequestValidatorTest.ZeroPriorityShouldFail
  nameWithType: CreateSmallTaskRequestValidatorTest.ZeroPriorityShouldFail
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase
  name: DispatchTableTestBase
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html
  commentId: T:ArmoniK.Core.Common.Tests.DispatchTableTestBase
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase
  nameWithType: DispatchTableTestBase
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchFails
  name: AddStatusToDispatchFails()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_AddStatusToDispatchFails
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchFails
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchFails()
  nameWithType: DispatchTableTestBase.AddStatusToDispatchFails()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchFails*
  name: AddStatusToDispatchFails
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_AddStatusToDispatchFails_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchFails
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchFails
  nameWithType: DispatchTableTestBase.AddStatusToDispatchFails
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchSucceeds
  name: AddStatusToDispatchSucceeds()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_AddStatusToDispatchSucceeds
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchSucceeds
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchSucceeds()
  nameWithType: DispatchTableTestBase.AddStatusToDispatchSucceeds()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchSucceeds*
  name: AddStatusToDispatchSucceeds
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_AddStatusToDispatchSucceeds_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchSucceeds
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.AddStatusToDispatchSucceeds
  nameWithType: DispatchTableTestBase.AddStatusToDispatchSucceeds
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFails
  name: DeleteDispatchFails()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DeleteDispatchFails
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFails
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFails()
  nameWithType: DispatchTableTestBase.DeleteDispatchFails()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFails*
  name: DeleteDispatchFails
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DeleteDispatchFails_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFails
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFails
  nameWithType: DispatchTableTestBase.DeleteDispatchFails
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncFails
  name: DeleteDispatchFromTaskIdAsyncFails()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DeleteDispatchFromTaskIdAsyncFails
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncFails
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncFails()
  nameWithType: DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncFails()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncFails*
  name: DeleteDispatchFromTaskIdAsyncFails
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DeleteDispatchFromTaskIdAsyncFails_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncFails
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncFails
  nameWithType: DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncFails
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncSucceeds
  name: DeleteDispatchFromTaskIdAsyncSucceeds()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DeleteDispatchFromTaskIdAsyncSucceeds
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncSucceeds
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncSucceeds()
  nameWithType: DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncSucceeds()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncSucceeds*
  name: DeleteDispatchFromTaskIdAsyncSucceeds
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DeleteDispatchFromTaskIdAsyncSucceeds_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncSucceeds
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncSucceeds
  nameWithType: DispatchTableTestBase.DeleteDispatchFromTaskIdAsyncSucceeds
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchSucceeds
  name: DeleteDispatchSucceeds()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DeleteDispatchSucceeds
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchSucceeds
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchSucceeds()
  nameWithType: DispatchTableTestBase.DeleteDispatchSucceeds()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchSucceeds*
  name: DeleteDispatchSucceeds
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DeleteDispatchSucceeds_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchSucceeds
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DeleteDispatchSucceeds
  nameWithType: DispatchTableTestBase.DeleteDispatchSucceeds
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DispatchTable
  name: DispatchTable
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_DispatchTable
  commentId: F:ArmoniK.Core.Common.Tests.DispatchTableTestBase.DispatchTable
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.DispatchTable
  nameWithType: DispatchTableTestBase.DispatchTable
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlFails
  name: ExtendDispatchTtlFails()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_ExtendDispatchTtlFails
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlFails
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlFails()
  nameWithType: DispatchTableTestBase.ExtendDispatchTtlFails()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlFails*
  name: ExtendDispatchTtlFails
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_ExtendDispatchTtlFails_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlFails
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlFails
  nameWithType: DispatchTableTestBase.ExtendDispatchTtlFails
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlSucceeds
  name: ExtendDispatchTtlSucceeds()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_ExtendDispatchTtlSucceeds
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlSucceeds
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlSucceeds()
  nameWithType: DispatchTableTestBase.ExtendDispatchTtlSucceeds()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlSucceeds*
  name: ExtendDispatchTtlSucceeds
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_ExtendDispatchTtlSucceeds_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlSucceeds
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.ExtendDispatchTtlSucceeds
  nameWithType: DispatchTableTestBase.ExtendDispatchTtlSucceeds
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncFails
  name: GetDispatchAsyncFails()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_GetDispatchAsyncFails
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncFails
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncFails()
  nameWithType: DispatchTableTestBase.GetDispatchAsyncFails()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncFails*
  name: GetDispatchAsyncFails
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_GetDispatchAsyncFails_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncFails
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncFails
  nameWithType: DispatchTableTestBase.GetDispatchAsyncFails
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncSucceeds
  name: GetDispatchAsyncSucceeds()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_GetDispatchAsyncSucceeds
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncSucceeds
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncSucceeds()
  nameWithType: DispatchTableTestBase.GetDispatchAsyncSucceeds()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncSucceeds*
  name: GetDispatchAsyncSucceeds
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_GetDispatchAsyncSucceeds_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncSucceeds
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchAsyncSucceeds
  nameWithType: DispatchTableTestBase.GetDispatchAsyncSucceeds
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchTableInstance
  name: GetDispatchTableInstance()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_GetDispatchTableInstance
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchTableInstance
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchTableInstance()
  nameWithType: DispatchTableTestBase.GetDispatchTableInstance()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchTableInstance*
  name: GetDispatchTableInstance
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_GetDispatchTableInstance_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.GetDispatchTableInstance
  nameWithType: DispatchTableTestBase.GetDispatchTableInstance
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.RunTests
  name: RunTests
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_RunTests
  commentId: F:ArmoniK.Core.Common.Tests.DispatchTableTestBase.RunTests
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.RunTests
  nameWithType: DispatchTableTestBase.RunTests
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.SetUp
  name: SetUp()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_SetUp
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.SetUp
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.SetUp()
  nameWithType: DispatchTableTestBase.SetUp()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.SetUp*
  name: SetUp
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_SetUp_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.SetUp
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.SetUp
  nameWithType: DispatchTableTestBase.SetUp
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_TearDown
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.TearDown
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TearDown()
  nameWithType: DispatchTableTestBase.TearDown()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_TearDown_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TearDown
  nameWithType: DispatchTableTestBase.TearDown
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncFails
  name: TryAcquireDispatchAsyncFails()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_TryAcquireDispatchAsyncFails
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncFails
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncFails()
  nameWithType: DispatchTableTestBase.TryAcquireDispatchAsyncFails()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncFails*
  name: TryAcquireDispatchAsyncFails
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_TryAcquireDispatchAsyncFails_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncFails
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncFails
  nameWithType: DispatchTableTestBase.TryAcquireDispatchAsyncFails
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncSucceeds
  name: TryAcquireDispatchAsyncSucceeds()
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_TryAcquireDispatchAsyncSucceeds
  commentId: M:ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncSucceeds
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncSucceeds()
  nameWithType: DispatchTableTestBase.TryAcquireDispatchAsyncSucceeds()
- uid: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncSucceeds*
  name: TryAcquireDispatchAsyncSucceeds
  href: api/ArmoniK.Core.Common.Tests.DispatchTableTestBase.html#ArmoniK_Core_Common_Tests_DispatchTableTestBase_TryAcquireDispatchAsyncSucceeds_
  commentId: Overload:ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncSucceeds
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.DispatchTableTestBase.TryAcquireDispatchAsyncSucceeds
  nameWithType: DispatchTableTestBase.TryAcquireDispatchAsyncSucceeds
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase
  name: ObjectStorageTestBase
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html
  commentId: T:ArmoniK.Core.Common.Tests.ObjectStorageTestBase
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase
  nameWithType: ObjectStorageTestBase
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.AddValuesAsyncWithoutChunkShouldFail
  name: AddValuesAsyncWithoutChunkShouldFail()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_AddValuesAsyncWithoutChunkShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.AddValuesAsyncWithoutChunkShouldFail
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.AddValuesAsyncWithoutChunkShouldFail()
  nameWithType: ObjectStorageTestBase.AddValuesAsyncWithoutChunkShouldFail()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.AddValuesAsyncWithoutChunkShouldFail*
  name: AddValuesAsyncWithoutChunkShouldFail
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_AddValuesAsyncWithoutChunkShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.AddValuesAsyncWithoutChunkShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.AddValuesAsyncWithoutChunkShouldFail
  nameWithType: ObjectStorageTestBase.AddValuesAsyncWithoutChunkShouldFail
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.EmptyPayload
  name: EmptyPayload()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_EmptyPayload
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.EmptyPayload
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.EmptyPayload()
  nameWithType: ObjectStorageTestBase.EmptyPayload()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.EmptyPayload*
  name: EmptyPayload
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_EmptyPayload_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.EmptyPayload
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.EmptyPayload
  nameWithType: ObjectStorageTestBase.EmptyPayload
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetObjectStorageInstance
  name: GetObjectStorageInstance()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_GetObjectStorageInstance
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetObjectStorageInstance
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetObjectStorageInstance()
  nameWithType: ObjectStorageTestBase.GetObjectStorageInstance()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetObjectStorageInstance*
  name: GetObjectStorageInstance
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_GetObjectStorageInstance_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetObjectStorageInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetObjectStorageInstance
  nameWithType: ObjectStorageTestBase.GetObjectStorageInstance
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldFail
  name: GetValuesAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_GetValuesAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldFail()
  nameWithType: ObjectStorageTestBase.GetValuesAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldFail*
  name: GetValuesAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_GetValuesAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldFail
  nameWithType: ObjectStorageTestBase.GetValuesAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldSucceed
  name: GetValuesAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_GetValuesAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldSucceed()
  nameWithType: ObjectStorageTestBase.GetValuesAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldSucceed*
  name: GetValuesAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_GetValuesAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.GetValuesAsyncShouldSucceed
  nameWithType: ObjectStorageTestBase.GetValuesAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.ObjectStorage
  name: ObjectStorage
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_ObjectStorage
  commentId: F:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.ObjectStorage
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.ObjectStorage
  nameWithType: ObjectStorageTestBase.ObjectStorage
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.Payload2ShouldBeEqual
  name: Payload2ShouldBeEqual()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_Payload2ShouldBeEqual
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.Payload2ShouldBeEqual
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.Payload2ShouldBeEqual()
  nameWithType: ObjectStorageTestBase.Payload2ShouldBeEqual()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.Payload2ShouldBeEqual*
  name: Payload2ShouldBeEqual
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_Payload2ShouldBeEqual_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.Payload2ShouldBeEqual
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.Payload2ShouldBeEqual
  nameWithType: ObjectStorageTestBase.Payload2ShouldBeEqual
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.PayloadShouldBeEqual
  name: PayloadShouldBeEqual()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_PayloadShouldBeEqual
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.PayloadShouldBeEqual
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.PayloadShouldBeEqual()
  nameWithType: ObjectStorageTestBase.PayloadShouldBeEqual()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.PayloadShouldBeEqual*
  name: PayloadShouldBeEqual
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_PayloadShouldBeEqual_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.PayloadShouldBeEqual
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.PayloadShouldBeEqual
  nameWithType: ObjectStorageTestBase.PayloadShouldBeEqual
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.RunTests
  name: RunTests
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_RunTests
  commentId: F:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.RunTests
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.RunTests
  nameWithType: ObjectStorageTestBase.RunTests
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.SetUp
  name: SetUp()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_SetUp
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.SetUp
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.SetUp()
  nameWithType: ObjectStorageTestBase.SetUp()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.SetUp*
  name: SetUp
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_SetUp_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.SetUp
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.SetUp
  nameWithType: ObjectStorageTestBase.SetUp
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_TearDown
  commentId: M:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.TearDown
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.TearDown()
  nameWithType: ObjectStorageTestBase.TearDown()
- uid: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Common.Tests.ObjectStorageTestBase.html#ArmoniK_Core_Common_Tests_ObjectStorageTestBase_TearDown_
  commentId: Overload:ArmoniK.Core.Common.Tests.ObjectStorageTestBase.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ObjectStorageTestBase.TearDown
  nameWithType: ObjectStorageTestBase.TearDown
- uid: ArmoniK.Core.Common.Tests.Pollster
  name: ArmoniK.Core.Common.Tests.Pollster
  href: api/ArmoniK.Core.Common.Tests.Pollster.html
  commentId: N:ArmoniK.Core.Common.Tests.Pollster
  fullName: ArmoniK.Core.Common.Tests.Pollster
  nameWithType: ArmoniK.Core.Common.Tests.Pollster
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest
  name: DataPrefetcherTest
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html
  commentId: T:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest
  nameWithType: DataPrefetcherTest
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndNoDependenciesStateMachine
  name: EmptyPayloadAndNoDependenciesStateMachine()
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndNoDependenciesStateMachine
  commentId: M:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndNoDependenciesStateMachine
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndNoDependenciesStateMachine()
  nameWithType: DataPrefetcherTest.EmptyPayloadAndNoDependenciesStateMachine()
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndNoDependenciesStateMachine*
  name: EmptyPayloadAndNoDependenciesStateMachine
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndNoDependenciesStateMachine_
  commentId: Overload:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndNoDependenciesStateMachine
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndNoDependenciesStateMachine
  nameWithType: DataPrefetcherTest.EmptyPayloadAndNoDependenciesStateMachine
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependency
  name: EmptyPayloadAndOneDependency()
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndOneDependency
  commentId: M:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependency
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependency()
  nameWithType: DataPrefetcherTest.EmptyPayloadAndOneDependency()
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependency*
  name: EmptyPayloadAndOneDependency
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndOneDependency_
  commentId: Overload:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependency
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependency
  nameWithType: DataPrefetcherTest.EmptyPayloadAndOneDependency
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyStateMachine
  name: EmptyPayloadAndOneDependencyStateMachine()
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndOneDependencyStateMachine
  commentId: M:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyStateMachine
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyStateMachine()
  nameWithType: DataPrefetcherTest.EmptyPayloadAndOneDependencyStateMachine()
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyStateMachine*
  name: EmptyPayloadAndOneDependencyStateMachine
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndOneDependencyStateMachine_
  commentId: Overload:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyStateMachine
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyStateMachine
  nameWithType: DataPrefetcherTest.EmptyPayloadAndOneDependencyStateMachine
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyWithDataStateMachine
  name: EmptyPayloadAndOneDependencyWithDataStateMachine()
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndOneDependencyWithDataStateMachine
  commentId: M:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyWithDataStateMachine
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyWithDataStateMachine()
  nameWithType: DataPrefetcherTest.EmptyPayloadAndOneDependencyWithDataStateMachine()
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyWithDataStateMachine*
  name: EmptyPayloadAndOneDependencyWithDataStateMachine
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndOneDependencyWithDataStateMachine_
  commentId: Overload:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyWithDataStateMachine
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndOneDependencyWithDataStateMachine
  nameWithType: DataPrefetcherTest.EmptyPayloadAndOneDependencyWithDataStateMachine
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndTwoDependenciesStateMachine
  name: EmptyPayloadAndTwoDependenciesStateMachine()
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndTwoDependenciesStateMachine
  commentId: M:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndTwoDependenciesStateMachine
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndTwoDependenciesStateMachine()
  nameWithType: DataPrefetcherTest.EmptyPayloadAndTwoDependenciesStateMachine()
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndTwoDependenciesStateMachine*
  name: EmptyPayloadAndTwoDependenciesStateMachine
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_EmptyPayloadAndTwoDependenciesStateMachine_
  commentId: Overload:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndTwoDependenciesStateMachine
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.EmptyPayloadAndTwoDependenciesStateMachine
  nameWithType: DataPrefetcherTest.EmptyPayloadAndTwoDependenciesStateMachine
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.PayloadWithDataAndOneDependencyWithDataStateMachine
  name: PayloadWithDataAndOneDependencyWithDataStateMachine()
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_PayloadWithDataAndOneDependencyWithDataStateMachine
  commentId: M:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.PayloadWithDataAndOneDependencyWithDataStateMachine
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.PayloadWithDataAndOneDependencyWithDataStateMachine()
  nameWithType: DataPrefetcherTest.PayloadWithDataAndOneDependencyWithDataStateMachine()
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.PayloadWithDataAndOneDependencyWithDataStateMachine*
  name: PayloadWithDataAndOneDependencyWithDataStateMachine
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_PayloadWithDataAndOneDependencyWithDataStateMachine_
  commentId: Overload:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.PayloadWithDataAndOneDependencyWithDataStateMachine
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.PayloadWithDataAndOneDependencyWithDataStateMachine
  nameWithType: DataPrefetcherTest.PayloadWithDataAndOneDependencyWithDataStateMachine
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.SetUp
  name: SetUp()
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_SetUp
  commentId: M:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.SetUp
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.SetUp()
  nameWithType: DataPrefetcherTest.SetUp()
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.SetUp*
  name: SetUp
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_SetUp_
  commentId: Overload:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.SetUp
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.SetUp
  nameWithType: DataPrefetcherTest.SetUp
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_TearDown
  commentId: M:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.TearDown
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.TearDown()
  nameWithType: DataPrefetcherTest.TearDown()
- uid: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.html#ArmoniK_Core_Common_Tests_Pollster_DataPrefetcherTest_TearDown_
  commentId: Overload:ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Pollster.DataPrefetcherTest.TearDown
  nameWithType: DataPrefetcherTest.TearDown
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase
  name: ResultTableTestBase
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html
  commentId: T:ArmoniK.Core.Common.Tests.ResultTableTestBase
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase
  nameWithType: ResultTableTestBase
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFail
  name: ChangeResultDispatchShouldFail()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ChangeResultDispatchShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFail
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFail()
  nameWithType: ResultTableTestBase.ChangeResultDispatchShouldFail()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFail*
  name: ChangeResultDispatchShouldFail
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ChangeResultDispatchShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFail
  nameWithType: ResultTableTestBase.ChangeResultDispatchShouldFail
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFailOnBadId
  name: ChangeResultDispatchShouldFailOnBadId()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ChangeResultDispatchShouldFailOnBadId
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFailOnBadId
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFailOnBadId()
  nameWithType: ResultTableTestBase.ChangeResultDispatchShouldFailOnBadId()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFailOnBadId*
  name: ChangeResultDispatchShouldFailOnBadId
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ChangeResultDispatchShouldFailOnBadId_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFailOnBadId
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldFailOnBadId
  nameWithType: ResultTableTestBase.ChangeResultDispatchShouldFailOnBadId
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldSucceed
  name: ChangeResultDispatchShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ChangeResultDispatchShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldSucceed()
  nameWithType: ResultTableTestBase.ChangeResultDispatchShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldSucceed*
  name: ChangeResultDispatchShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ChangeResultDispatchShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultDispatchShouldSucceed
  nameWithType: ResultTableTestBase.ChangeResultDispatchShouldSucceed
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultOwnershipShouldSucceed
  name: ChangeResultOwnershipShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ChangeResultOwnershipShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultOwnershipShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultOwnershipShouldSucceed()
  nameWithType: ResultTableTestBase.ChangeResultOwnershipShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultOwnershipShouldSucceed*
  name: ChangeResultOwnershipShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ChangeResultOwnershipShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultOwnershipShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ChangeResultOwnershipShouldSucceed
  nameWithType: ResultTableTestBase.ChangeResultOwnershipShouldSucceed
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldFail
  name: CreateShouldFail()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_CreateShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldFail
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldFail()
  nameWithType: ResultTableTestBase.CreateShouldFail()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldFail*
  name: CreateShouldFail
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_CreateShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldFail
  nameWithType: ResultTableTestBase.CreateShouldFail
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldSucceed
  name: CreateShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_CreateShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldSucceed()
  nameWithType: ResultTableTestBase.CreateShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldSucceed*
  name: CreateShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_CreateShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.CreateShouldSucceed
  nameWithType: ResultTableTestBase.CreateShouldSucceed
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultShouldRemoveOne
  name: DeleteResultShouldRemoveOne()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_DeleteResultShouldRemoveOne
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultShouldRemoveOne
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultShouldRemoveOne()
  nameWithType: ResultTableTestBase.DeleteResultShouldRemoveOne()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultShouldRemoveOne*
  name: DeleteResultShouldRemoveOne
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_DeleteResultShouldRemoveOne_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultShouldRemoveOne
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultShouldRemoveOne
  nameWithType: ResultTableTestBase.DeleteResultShouldRemoveOne
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultsShouldRemoveAll
  name: DeleteResultsShouldRemoveAll()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_DeleteResultsShouldRemoveAll
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultsShouldRemoveAll
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultsShouldRemoveAll()
  nameWithType: ResultTableTestBase.DeleteResultsShouldRemoveAll()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultsShouldRemoveAll*
  name: DeleteResultsShouldRemoveAll
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_DeleteResultsShouldRemoveAll_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultsShouldRemoveAll
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.DeleteResultsShouldRemoveAll
  nameWithType: ResultTableTestBase.DeleteResultsShouldRemoveAll
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.GetResultTableInstance
  name: GetResultTableInstance()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_GetResultTableInstance
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.GetResultTableInstance
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.GetResultTableInstance()
  nameWithType: ResultTableTestBase.GetResultTableInstance()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.GetResultTableInstance*
  name: GetResultTableInstance
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_GetResultTableInstance_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.GetResultTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.GetResultTableInstance
  nameWithType: ResultTableTestBase.GetResultTableInstance
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldFail
  name: ResultsAreAvailableShouldFail()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ResultsAreAvailableShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldFail
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldFail()
  nameWithType: ResultTableTestBase.ResultsAreAvailableShouldFail()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldFail*
  name: ResultsAreAvailableShouldFail
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ResultsAreAvailableShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldFail
  nameWithType: ResultTableTestBase.ResultsAreAvailableShouldFail
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldSucceed
  name: ResultsAreAvailableShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ResultsAreAvailableShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldSucceed()
  nameWithType: ResultTableTestBase.ResultsAreAvailableShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldSucceed*
  name: ResultsAreAvailableShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ResultsAreAvailableShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultsAreAvailableShouldSucceed
  nameWithType: ResultTableTestBase.ResultsAreAvailableShouldSucceed
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultTable
  name: ResultTable
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_ResultTable
  commentId: F:ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultTable
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.ResultTable
  nameWithType: ResultTableTestBase.ResultTable
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.RunTests
  name: RunTests
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_RunTests
  commentId: F:ArmoniK.Core.Common.Tests.ResultTableTestBase.RunTests
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.RunTests
  nameWithType: ResultTableTestBase.RunTests
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultShouldSucceed
  name: SetResultShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_SetResultShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultShouldSucceed()
  nameWithType: ResultTableTestBase.SetResultShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultShouldSucceed*
  name: SetResultShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_SetResultShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultShouldSucceed
  nameWithType: ResultTableTestBase.SetResultShouldSucceed
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultSmallPayloadShouldSucceed
  name: SetResultSmallPayloadShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_SetResultSmallPayloadShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultSmallPayloadShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultSmallPayloadShouldSucceed()
  nameWithType: ResultTableTestBase.SetResultSmallPayloadShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultSmallPayloadShouldSucceed*
  name: SetResultSmallPayloadShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_SetResultSmallPayloadShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultSmallPayloadShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetResultSmallPayloadShouldSucceed
  nameWithType: ResultTableTestBase.SetResultSmallPayloadShouldSucceed
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetUp
  name: SetUp()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_SetUp
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.SetUp
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetUp()
  nameWithType: ResultTableTestBase.SetUp()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetUp*
  name: SetUp
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_SetUp_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.SetUp
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.SetUp
  nameWithType: ResultTableTestBase.SetUp
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_TearDown
  commentId: M:ArmoniK.Core.Common.Tests.ResultTableTestBase.TearDown
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.TearDown()
  nameWithType: ResultTableTestBase.TearDown()
- uid: ArmoniK.Core.Common.Tests.ResultTableTestBase.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Common.Tests.ResultTableTestBase.html#ArmoniK_Core_Common_Tests_ResultTableTestBase_TearDown_
  commentId: Overload:ArmoniK.Core.Common.Tests.ResultTableTestBase.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.ResultTableTestBase.TearDown
  nameWithType: ResultTableTestBase.TearDown
- uid: ArmoniK.Core.Common.Tests.RpcExtTests
  name: RpcExtTests
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html
  commentId: T:ArmoniK.Core.Common.Tests.RpcExtTests
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests
  nameWithType: RpcExtTests
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.HandleAggregateExceptionsWithStatus(StatusCode)
  name: HandleAggregateExceptionsWithStatus(StatusCode)
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_HandleAggregateExceptionsWithStatus_StatusCode_
  commentId: M:ArmoniK.Core.Common.Tests.RpcExtTests.HandleAggregateExceptionsWithStatus(StatusCode)
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.HandleAggregateExceptionsWithStatus(StatusCode)
  nameWithType: RpcExtTests.HandleAggregateExceptionsWithStatus(StatusCode)
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.HandleAggregateExceptionsWithStatus*
  name: HandleAggregateExceptionsWithStatus
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_HandleAggregateExceptionsWithStatus_
  commentId: Overload:ArmoniK.Core.Common.Tests.RpcExtTests.HandleAggregateExceptionsWithStatus
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.HandleAggregateExceptionsWithStatus
  nameWithType: RpcExtTests.HandleAggregateExceptionsWithStatus
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.HandleRpcExceptionsWithStatus(StatusCode)
  name: HandleRpcExceptionsWithStatus(StatusCode)
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_HandleRpcExceptionsWithStatus_StatusCode_
  commentId: M:ArmoniK.Core.Common.Tests.RpcExtTests.HandleRpcExceptionsWithStatus(StatusCode)
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.HandleRpcExceptionsWithStatus(StatusCode)
  nameWithType: RpcExtTests.HandleRpcExceptionsWithStatus(StatusCode)
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.HandleRpcExceptionsWithStatus*
  name: HandleRpcExceptionsWithStatus
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_HandleRpcExceptionsWithStatus_
  commentId: Overload:ArmoniK.Core.Common.Tests.RpcExtTests.HandleRpcExceptionsWithStatus
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.HandleRpcExceptionsWithStatus
  nameWithType: RpcExtTests.HandleRpcExceptionsWithStatus
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelled
  name: ThrowCancelledExceptionWhenCallWasCancelled()
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_ThrowCancelledExceptionWhenCallWasCancelled
  commentId: M:ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelled
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelled()
  nameWithType: RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelled()
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelled*
  name: ThrowCancelledExceptionWhenCallWasCancelled
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_ThrowCancelledExceptionWhenCallWasCancelled_
  commentId: Overload:ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelled
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelled
  nameWithType: RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelled
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelledAggregated
  name: ThrowCancelledExceptionWhenCallWasCancelledAggregated()
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_ThrowCancelledExceptionWhenCallWasCancelledAggregated
  commentId: M:ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelledAggregated
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelledAggregated()
  nameWithType: RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelledAggregated()
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelledAggregated*
  name: ThrowCancelledExceptionWhenCallWasCancelledAggregated
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_ThrowCancelledExceptionWhenCallWasCancelledAggregated_
  commentId: Overload:ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelledAggregated
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelledAggregated
  nameWithType: RpcExtTests.ThrowCancelledExceptionWhenCallWasCancelledAggregated
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadline
  name: ThrowTimeoutExceptionWhenCallReachedDeadline()
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_ThrowTimeoutExceptionWhenCallReachedDeadline
  commentId: M:ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadline
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadline()
  nameWithType: RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadline()
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadline*
  name: ThrowTimeoutExceptionWhenCallReachedDeadline
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_ThrowTimeoutExceptionWhenCallReachedDeadline_
  commentId: Overload:ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadline
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadline
  nameWithType: RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadline
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated
  name: ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated()
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated
  commentId: M:ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated()
  nameWithType: RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated()
- uid: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated*
  name: ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated
  href: api/ArmoniK.Core.Common.Tests.RpcExtTests.html#ArmoniK_Core_Common_Tests_RpcExtTests_ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated_
  commentId: Overload:ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated
  nameWithType: RpcExtTests.ThrowTimeoutExceptionWhenCallReachedDeadlineAggregated
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase
  name: SessionTableTestBase
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html
  commentId: T:ArmoniK.Core.Common.Tests.SessionTableTestBase
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase
  nameWithType: SessionTableTestBase
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldFail
  name: CancelDispatchAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_CancelDispatchAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldFail()
  nameWithType: SessionTableTestBase.CancelDispatchAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldFail*
  name: CancelDispatchAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_CancelDispatchAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldFail
  nameWithType: SessionTableTestBase.CancelDispatchAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldSucceed
  name: CancelDispatchAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_CancelDispatchAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldSucceed()
  nameWithType: SessionTableTestBase.CancelDispatchAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldSucceed*
  name: CancelDispatchAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_CancelDispatchAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelDispatchAsyncShouldSucceed
  nameWithType: SessionTableTestBase.CancelDispatchAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldFail
  name: CancelSessionAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_CancelSessionAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldFail()
  nameWithType: SessionTableTestBase.CancelSessionAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldFail*
  name: CancelSessionAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_CancelSessionAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldFail
  nameWithType: SessionTableTestBase.CancelSessionAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldSucceed
  name: CancelSessionAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_CancelSessionAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldSucceed()
  nameWithType: SessionTableTestBase.CancelSessionAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldSucceed*
  name: CancelSessionAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_CancelSessionAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.CancelSessionAsyncShouldSucceed
  nameWithType: SessionTableTestBase.CancelSessionAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteDispatchAsyncShouldSucceed
  name: DeleteDispatchAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_DeleteDispatchAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteDispatchAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteDispatchAsyncShouldSucceed()
  nameWithType: SessionTableTestBase.DeleteDispatchAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteDispatchAsyncShouldSucceed*
  name: DeleteDispatchAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_DeleteDispatchAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteDispatchAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteDispatchAsyncShouldSucceed
  nameWithType: SessionTableTestBase.DeleteDispatchAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldFail
  name: DeleteSessionAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_DeleteSessionAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldFail()
  nameWithType: SessionTableTestBase.DeleteSessionAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldFail*
  name: DeleteSessionAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_DeleteSessionAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldFail
  nameWithType: SessionTableTestBase.DeleteSessionAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldSucceed
  name: DeleteSessionAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_DeleteSessionAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldSucceed()
  nameWithType: SessionTableTestBase.DeleteSessionAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldSucceed*
  name: DeleteSessionAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_DeleteSessionAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.DeleteSessionAsyncShouldSucceed
  nameWithType: SessionTableTestBase.DeleteSessionAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetDefaultTaskOptionAsyncShouldSucceed
  name: GetDefaultTaskOptionAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_GetDefaultTaskOptionAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.GetDefaultTaskOptionAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetDefaultTaskOptionAsyncShouldSucceed()
  nameWithType: SessionTableTestBase.GetDefaultTaskOptionAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetDefaultTaskOptionAsyncShouldSucceed*
  name: GetDefaultTaskOptionAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_GetDefaultTaskOptionAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.GetDefaultTaskOptionAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetDefaultTaskOptionAsyncShouldSucceed
  nameWithType: SessionTableTestBase.GetDefaultTaskOptionAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldFail
  name: GetSessionAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_GetSessionAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldFail()
  nameWithType: SessionTableTestBase.GetSessionAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldFail*
  name: GetSessionAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_GetSessionAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldFail
  nameWithType: SessionTableTestBase.GetSessionAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldSucceed
  name: GetSessionAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_GetSessionAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldSucceed()
  nameWithType: SessionTableTestBase.GetSessionAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldSucceed*
  name: GetSessionAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_GetSessionAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionAsyncShouldSucceed
  nameWithType: SessionTableTestBase.GetSessionAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionTableInstance
  name: GetSessionTableInstance()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_GetSessionTableInstance
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionTableInstance
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionTableInstance()
  nameWithType: SessionTableTestBase.GetSessionTableInstance()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionTableInstance*
  name: GetSessionTableInstance
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_GetSessionTableInstance_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.GetSessionTableInstance
  nameWithType: SessionTableTestBase.GetSessionTableInstance
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldFail
  name: IsDispatchCancelledAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_IsDispatchCancelledAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldFail()
  nameWithType: SessionTableTestBase.IsDispatchCancelledAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldFail*
  name: IsDispatchCancelledAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_IsDispatchCancelledAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldFail
  nameWithType: SessionTableTestBase.IsDispatchCancelledAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldSucceed
  name: IsDispatchCancelledAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_IsDispatchCancelledAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldSucceed()
  nameWithType: SessionTableTestBase.IsDispatchCancelledAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldSucceed*
  name: IsDispatchCancelledAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_IsDispatchCancelledAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsDispatchCancelledAsyncShouldSucceed
  nameWithType: SessionTableTestBase.IsDispatchCancelledAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldFail
  name: IsSessionCancelledAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_IsSessionCancelledAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldFail()
  nameWithType: SessionTableTestBase.IsSessionCancelledAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldFail*
  name: IsSessionCancelledAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_IsSessionCancelledAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldFail
  nameWithType: SessionTableTestBase.IsSessionCancelledAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldSucceed
  name: IsSessionCancelledAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_IsSessionCancelledAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldSucceed()
  nameWithType: SessionTableTestBase.IsSessionCancelledAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldSucceed*
  name: IsSessionCancelledAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_IsSessionCancelledAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.IsSessionCancelledAsyncShouldSucceed
  nameWithType: SessionTableTestBase.IsSessionCancelledAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.RunTests
  name: RunTests
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_RunTests
  commentId: F:ArmoniK.Core.Common.Tests.SessionTableTestBase.RunTests
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.RunTests
  nameWithType: SessionTableTestBase.RunTests
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.SessionTable
  name: SessionTable
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_SessionTable
  commentId: F:ArmoniK.Core.Common.Tests.SessionTableTestBase.SessionTable
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.SessionTable
  nameWithType: SessionTableTestBase.SessionTable
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.SetUp
  name: SetUp()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_SetUp
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.SetUp
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.SetUp()
  nameWithType: SessionTableTestBase.SetUp()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.SetUp*
  name: SetUp
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_SetUp_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.SetUp
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.SetUp
  nameWithType: SessionTableTestBase.SetUp
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_TearDown
  commentId: M:ArmoniK.Core.Common.Tests.SessionTableTestBase.TearDown
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.TearDown()
  nameWithType: SessionTableTestBase.TearDown()
- uid: ArmoniK.Core.Common.Tests.SessionTableTestBase.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Common.Tests.SessionTableTestBase.html#ArmoniK_Core_Common_Tests_SessionTableTestBase_TearDown_
  commentId: Overload:ArmoniK.Core.Common.Tests.SessionTableTestBase.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.SessionTableTestBase.TearDown
  nameWithType: SessionTableTestBase.TearDown
- uid: ArmoniK.Core.Common.Tests.StateMachines
  name: ArmoniK.Core.Common.Tests.StateMachines
  href: api/ArmoniK.Core.Common.Tests.StateMachines.html
  commentId: N:ArmoniK.Core.Common.Tests.StateMachines
  fullName: ArmoniK.Core.Common.Tests.StateMachines
  nameWithType: ArmoniK.Core.Common.Tests.StateMachines
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest
  name: ComputeRequestStateMachineTest
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html
  commentId: T:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest
  nameWithType: ComputeRequestStateMachineTest
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataChunkFirstShouldFail
  name: DataChunkFirstShouldFail()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_DataChunkFirstShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataChunkFirstShouldFail
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataChunkFirstShouldFail()
  nameWithType: ComputeRequestStateMachineTest.DataChunkFirstShouldFail()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataChunkFirstShouldFail*
  name: DataChunkFirstShouldFail
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_DataChunkFirstShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataChunkFirstShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataChunkFirstShouldFail
  nameWithType: ComputeRequestStateMachineTest.DataChunkFirstShouldFail
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataDepWithoutChunkShouldFail
  name: DataDepWithoutChunkShouldFail()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_DataDepWithoutChunkShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataDepWithoutChunkShouldFail
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataDepWithoutChunkShouldFail()
  nameWithType: ComputeRequestStateMachineTest.DataDepWithoutChunkShouldFail()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataDepWithoutChunkShouldFail*
  name: DataDepWithoutChunkShouldFail
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_DataDepWithoutChunkShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataDepWithoutChunkShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.DataDepWithoutChunkShouldFail
  nameWithType: ComputeRequestStateMachineTest.DataDepWithoutChunkShouldFail
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GenerateGraphShouldSucceed
  name: GenerateGraphShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_GenerateGraphShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GenerateGraphShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GenerateGraphShouldSucceed()
  nameWithType: ComputeRequestStateMachineTest.GenerateGraphShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GenerateGraphShouldSucceed*
  name: GenerateGraphShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_GenerateGraphShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GenerateGraphShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GenerateGraphShouldSucceed
  nameWithType: ComputeRequestStateMachineTest.GenerateGraphShouldSucceed
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithoutPayloadCompleteShouldFail
  name: GetQueueWithoutPayloadCompleteShouldFail()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_GetQueueWithoutPayloadCompleteShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithoutPayloadCompleteShouldFail
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithoutPayloadCompleteShouldFail()
  nameWithType: ComputeRequestStateMachineTest.GetQueueWithoutPayloadCompleteShouldFail()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithoutPayloadCompleteShouldFail*
  name: GetQueueWithoutPayloadCompleteShouldFail
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_GetQueueWithoutPayloadCompleteShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithoutPayloadCompleteShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithoutPayloadCompleteShouldFail
  nameWithType: ComputeRequestStateMachineTest.GetQueueWithoutPayloadCompleteShouldFail
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithPayloadCompleteShouldSucceed
  name: GetQueueWithPayloadCompleteShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_GetQueueWithPayloadCompleteShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithPayloadCompleteShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithPayloadCompleteShouldSucceed()
  nameWithType: ComputeRequestStateMachineTest.GetQueueWithPayloadCompleteShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithPayloadCompleteShouldSucceed*
  name: GetQueueWithPayloadCompleteShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_GetQueueWithPayloadCompleteShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithPayloadCompleteShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.GetQueueWithPayloadCompleteShouldSucceed
  nameWithType: ComputeRequestStateMachineTest.GetQueueWithPayloadCompleteShouldSucceed
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathMultipleLargeDataShouldSucceed
  name: HappyPathMultipleLargeDataShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathMultipleLargeDataShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathMultipleLargeDataShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathMultipleLargeDataShouldSucceed()
  nameWithType: ComputeRequestStateMachineTest.HappyPathMultipleLargeDataShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathMultipleLargeDataShouldSucceed*
  name: HappyPathMultipleLargeDataShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathMultipleLargeDataShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathMultipleLargeDataShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathMultipleLargeDataShouldSucceed
  nameWithType: ComputeRequestStateMachineTest.HappyPathMultipleLargeDataShouldSucceed
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepNoGetQueueShouldFail
  name: HappyPathNoDataDepNoGetQueueShouldFail()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathNoDataDepNoGetQueueShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepNoGetQueueShouldFail
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepNoGetQueueShouldFail()
  nameWithType: ComputeRequestStateMachineTest.HappyPathNoDataDepNoGetQueueShouldFail()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepNoGetQueueShouldFail*
  name: HappyPathNoDataDepNoGetQueueShouldFail
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathNoDataDepNoGetQueueShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepNoGetQueueShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepNoGetQueueShouldFail
  nameWithType: ComputeRequestStateMachineTest.HappyPathNoDataDepNoGetQueueShouldFail
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepShouldSucceed
  name: HappyPathNoDataDepShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathNoDataDepShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepShouldSucceed()
  nameWithType: ComputeRequestStateMachineTest.HappyPathNoDataDepShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepShouldSucceed*
  name: HappyPathNoDataDepShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathNoDataDepShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathNoDataDepShouldSucceed
  nameWithType: ComputeRequestStateMachineTest.HappyPathNoDataDepShouldSucceed
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathShouldSucceed
  name: HappyPathShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathShouldSucceed()
  nameWithType: ComputeRequestStateMachineTest.HappyPathShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathShouldSucceed*
  name: HappyPathShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathShouldSucceed
  nameWithType: ComputeRequestStateMachineTest.HappyPathShouldSucceed
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathSmallShouldSucceed
  name: HappyPathSmallShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathSmallShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathSmallShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathSmallShouldSucceed()
  nameWithType: ComputeRequestStateMachineTest.HappyPathSmallShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathSmallShouldSucceed*
  name: HappyPathSmallShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_HappyPathSmallShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathSmallShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.HappyPathSmallShouldSucceed
  nameWithType: ComputeRequestStateMachineTest.HappyPathSmallShouldSucceed
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.InitDataFirstShouldFail
  name: InitDataFirstShouldFail()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_InitDataFirstShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.InitDataFirstShouldFail
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.InitDataFirstShouldFail()
  nameWithType: ComputeRequestStateMachineTest.InitDataFirstShouldFail()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.InitDataFirstShouldFail*
  name: InitDataFirstShouldFail
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_InitDataFirstShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.InitDataFirstShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.InitDataFirstShouldFail
  nameWithType: ComputeRequestStateMachineTest.InitDataFirstShouldFail
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.PayloadFirstShouldFail
  name: PayloadFirstShouldFail()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_PayloadFirstShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.PayloadFirstShouldFail
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.PayloadFirstShouldFail()
  nameWithType: ComputeRequestStateMachineTest.PayloadFirstShouldFail()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.PayloadFirstShouldFail*
  name: PayloadFirstShouldFail
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_PayloadFirstShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.PayloadFirstShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.PayloadFirstShouldFail
  nameWithType: ComputeRequestStateMachineTest.PayloadFirstShouldFail
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.Setup
  name: Setup()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_Setup
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.Setup
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.Setup()
  nameWithType: ComputeRequestStateMachineTest.Setup()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.Setup*
  name: Setup
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_Setup_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.Setup
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.Setup
  nameWithType: ComputeRequestStateMachineTest.Setup
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.TwoInitRequestsShouldFail
  name: TwoInitRequestsShouldFail()
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_TwoInitRequestsShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.TwoInitRequestsShouldFail
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.TwoInitRequestsShouldFail()
  nameWithType: ComputeRequestStateMachineTest.TwoInitRequestsShouldFail()
- uid: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.TwoInitRequestsShouldFail*
  name: TwoInitRequestsShouldFail
  href: api/ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.html#ArmoniK_Core_Common_Tests_StateMachines_ComputeRequestStateMachineTest_TwoInitRequestsShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.TwoInitRequestsShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.StateMachines.ComputeRequestStateMachineTest.TwoInitRequestsShouldFail
  nameWithType: ComputeRequestStateMachineTest.TwoInitRequestsShouldFail
- uid: ArmoniK.Core.Common.Tests.Stream
  name: ArmoniK.Core.Common.Tests.Stream
  href: api/ArmoniK.Core.Common.Tests.Stream.html
  commentId: N:ArmoniK.Core.Common.Tests.Stream
  fullName: ArmoniK.Core.Common.Tests.Stream
  nameWithType: ArmoniK.Core.Common.Tests.Stream
- uid: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest
  name: TaskHandlerTest
  href: api/ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.html
  commentId: T:ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest
  fullName: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest
  nameWithType: TaskHandlerTest
- uid: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.EmptyPayloadAndOneDependency
  name: EmptyPayloadAndOneDependency()
  href: api/ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.html#ArmoniK_Core_Common_Tests_Stream_TaskHandlerTest_EmptyPayloadAndOneDependency
  commentId: M:ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.EmptyPayloadAndOneDependency
  fullName: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.EmptyPayloadAndOneDependency()
  nameWithType: TaskHandlerTest.EmptyPayloadAndOneDependency()
- uid: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.EmptyPayloadAndOneDependency*
  name: EmptyPayloadAndOneDependency
  href: api/ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.html#ArmoniK_Core_Common_Tests_Stream_TaskHandlerTest_EmptyPayloadAndOneDependency_
  commentId: Overload:ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.EmptyPayloadAndOneDependency
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.EmptyPayloadAndOneDependency
  nameWithType: TaskHandlerTest.EmptyPayloadAndOneDependency
- uid: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.SetUp
  name: SetUp()
  href: api/ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.html#ArmoniK_Core_Common_Tests_Stream_TaskHandlerTest_SetUp
  commentId: M:ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.SetUp
  fullName: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.SetUp()
  nameWithType: TaskHandlerTest.SetUp()
- uid: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.SetUp*
  name: SetUp
  href: api/ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.html#ArmoniK_Core_Common_Tests_Stream_TaskHandlerTest_SetUp_
  commentId: Overload:ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.SetUp
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.SetUp
  nameWithType: TaskHandlerTest.SetUp
- uid: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.html#ArmoniK_Core_Common_Tests_Stream_TaskHandlerTest_TearDown
  commentId: M:ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.TearDown
  fullName: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.TearDown()
  nameWithType: TaskHandlerTest.TearDown()
- uid: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.html#ArmoniK_Core_Common_Tests_Stream_TaskHandlerTest_TearDown_
  commentId: Overload:ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.Stream.TaskHandlerTest.TearDown
  nameWithType: TaskHandlerTest.TearDown
- uid: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest
  name: TaskFilterValidatorTest
  href: api/ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.html
  commentId: T:ArmoniK.Core.Common.Tests.TaskFilterValidatorTest
  fullName: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest
  nameWithType: TaskFilterValidatorTest
- uid: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleExcludedStatusesShouldBeValid
  name: MultipleExcludedStatusesShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.html#ArmoniK_Core_Common_Tests_TaskFilterValidatorTest_MultipleExcludedStatusesShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleExcludedStatusesShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleExcludedStatusesShouldBeValid()
  nameWithType: TaskFilterValidatorTest.MultipleExcludedStatusesShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleExcludedStatusesShouldBeValid*
  name: MultipleExcludedStatusesShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.html#ArmoniK_Core_Common_Tests_TaskFilterValidatorTest_MultipleExcludedStatusesShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleExcludedStatusesShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleExcludedStatusesShouldBeValid
  nameWithType: TaskFilterValidatorTest.MultipleExcludedStatusesShouldBeValid
- uid: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleIncludedStatusesShouldBeValid
  name: MultipleIncludedStatusesShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.html#ArmoniK_Core_Common_Tests_TaskFilterValidatorTest_MultipleIncludedStatusesShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleIncludedStatusesShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleIncludedStatusesShouldBeValid()
  nameWithType: TaskFilterValidatorTest.MultipleIncludedStatusesShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleIncludedStatusesShouldBeValid*
  name: MultipleIncludedStatusesShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.html#ArmoniK_Core_Common_Tests_TaskFilterValidatorTest_MultipleIncludedStatusesShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleIncludedStatusesShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskFilterValidatorTest.MultipleIncludedStatusesShouldBeValid
  nameWithType: TaskFilterValidatorTest.MultipleIncludedStatusesShouldBeValid
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest
  name: TaskOptionsValidatorTest
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html
  commentId: T:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest
  nameWithType: TaskOptionsValidatorTest
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativeMaxRetryShouldFail
  name: NegativeMaxRetryShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_NegativeMaxRetryShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativeMaxRetryShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativeMaxRetryShouldFail()
  nameWithType: TaskOptionsValidatorTest.NegativeMaxRetryShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativeMaxRetryShouldFail*
  name: NegativeMaxRetryShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_NegativeMaxRetryShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativeMaxRetryShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativeMaxRetryShouldFail
  nameWithType: TaskOptionsValidatorTest.NegativeMaxRetryShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativePriorityShouldFail
  name: NegativePriorityShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_NegativePriorityShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativePriorityShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativePriorityShouldFail()
  nameWithType: TaskOptionsValidatorTest.NegativePriorityShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativePriorityShouldFail*
  name: NegativePriorityShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_NegativePriorityShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativePriorityShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.NegativePriorityShouldFail
  nameWithType: TaskOptionsValidatorTest.NegativePriorityShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
  name: OnlyMaxRetryAndPriorityDefinedShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_OnlyMaxRetryAndPriorityDefinedShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid()
  nameWithType: TaskOptionsValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid*
  name: OnlyMaxRetryAndPriorityDefinedShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_OnlyMaxRetryAndPriorityDefinedShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
  nameWithType: TaskOptionsValidatorTest.OnlyMaxRetryAndPriorityDefinedShouldBeValid
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.TooBigPriorityShouldFail
  name: TooBigPriorityShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_TooBigPriorityShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.TooBigPriorityShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.TooBigPriorityShouldFail()
  nameWithType: TaskOptionsValidatorTest.TooBigPriorityShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.TooBigPriorityShouldFail*
  name: TooBigPriorityShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_TooBigPriorityShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.TooBigPriorityShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.TooBigPriorityShouldFail
  nameWithType: TaskOptionsValidatorTest.TooBigPriorityShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxDurationShouldBeValid
  name: UndefinedMaxDurationShouldBeValid()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_UndefinedMaxDurationShouldBeValid
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxDurationShouldBeValid
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxDurationShouldBeValid()
  nameWithType: TaskOptionsValidatorTest.UndefinedMaxDurationShouldBeValid()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxDurationShouldBeValid*
  name: UndefinedMaxDurationShouldBeValid
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_UndefinedMaxDurationShouldBeValid_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxDurationShouldBeValid
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxDurationShouldBeValid
  nameWithType: TaskOptionsValidatorTest.UndefinedMaxDurationShouldBeValid
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxRetriesShouldFail
  name: UndefinedMaxRetriesShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_UndefinedMaxRetriesShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxRetriesShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxRetriesShouldFail()
  nameWithType: TaskOptionsValidatorTest.UndefinedMaxRetriesShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxRetriesShouldFail*
  name: UndefinedMaxRetriesShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_UndefinedMaxRetriesShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxRetriesShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedMaxRetriesShouldFail
  nameWithType: TaskOptionsValidatorTest.UndefinedMaxRetriesShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedPriorityShouldFail
  name: UndefinedPriorityShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_UndefinedPriorityShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedPriorityShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedPriorityShouldFail()
  nameWithType: TaskOptionsValidatorTest.UndefinedPriorityShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedPriorityShouldFail*
  name: UndefinedPriorityShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_UndefinedPriorityShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedPriorityShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.UndefinedPriorityShouldFail
  nameWithType: TaskOptionsValidatorTest.UndefinedPriorityShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroMaxRetryShouldFail
  name: ZeroMaxRetryShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_ZeroMaxRetryShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroMaxRetryShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroMaxRetryShouldFail()
  nameWithType: TaskOptionsValidatorTest.ZeroMaxRetryShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroMaxRetryShouldFail*
  name: ZeroMaxRetryShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_ZeroMaxRetryShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroMaxRetryShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroMaxRetryShouldFail
  nameWithType: TaskOptionsValidatorTest.ZeroMaxRetryShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroPriorityShouldFail
  name: ZeroPriorityShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_ZeroPriorityShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroPriorityShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroPriorityShouldFail()
  nameWithType: TaskOptionsValidatorTest.ZeroPriorityShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroPriorityShouldFail*
  name: ZeroPriorityShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.html#ArmoniK_Core_Common_Tests_TaskOptionsValidatorTest_ZeroPriorityShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroPriorityShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskOptionsValidatorTest.ZeroPriorityShouldFail
  nameWithType: TaskOptionsValidatorTest.ZeroPriorityShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase
  name: TaskTableTestBase
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html
  commentId: T:ArmoniK.Core.Common.Tests.TaskTableTestBase
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase
  nameWithType: TaskTableTestBase
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldFail
  name: CancelDispatchAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CancelDispatchAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldFail()
  nameWithType: TaskTableTestBase.CancelDispatchAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldFail*
  name: CancelDispatchAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CancelDispatchAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldFail
  nameWithType: TaskTableTestBase.CancelDispatchAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldSucceed
  name: CancelDispatchAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CancelDispatchAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.CancelDispatchAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldSucceed*
  name: CancelDispatchAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CancelDispatchAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelDispatchAsyncShouldSucceed
  nameWithType: TaskTableTestBase.CancelDispatchAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldFail
  name: CancelSessionAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CancelSessionAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldFail()
  nameWithType: TaskTableTestBase.CancelSessionAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldFail*
  name: CancelSessionAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CancelSessionAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldFail
  nameWithType: TaskTableTestBase.CancelSessionAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldSucceed
  name: CancelSessionAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CancelSessionAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.CancelSessionAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldSucceed*
  name: CancelSessionAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CancelSessionAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CancelSessionAsyncShouldSucceed
  nameWithType: TaskTableTestBase.CancelSessionAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.ChangeTaskDispatchShouldSucceed
  name: ChangeTaskDispatchShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_ChangeTaskDispatchShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.ChangeTaskDispatchShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.ChangeTaskDispatchShouldSucceed()
  nameWithType: TaskTableTestBase.ChangeTaskDispatchShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.ChangeTaskDispatchShouldSucceed*
  name: ChangeTaskDispatchShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_ChangeTaskDispatchShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.ChangeTaskDispatchShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.ChangeTaskDispatchShouldSucceed
  nameWithType: TaskTableTestBase.ChangeTaskDispatchShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CountAllTasksAsyncShouldSucceed
  name: CountAllTasksAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CountAllTasksAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.CountAllTasksAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CountAllTasksAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.CountAllTasksAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CountAllTasksAsyncShouldSucceed*
  name: CountAllTasksAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CountAllTasksAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.CountAllTasksAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CountAllTasksAsyncShouldSucceed
  nameWithType: TaskTableTestBase.CountAllTasksAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CountTasksAsyncShouldSucceed
  name: CountTasksAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CountTasksAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.CountTasksAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CountTasksAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.CountTasksAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.CountTasksAsyncShouldSucceed*
  name: CountTasksAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_CountTasksAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.CountTasksAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.CountTasksAsyncShouldSucceed
  nameWithType: TaskTableTestBase.CountTasksAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldFail
  name: GetTaskAncestorDispatchIdsShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskAncestorDispatchIdsShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldFail()
  nameWithType: TaskTableTestBase.GetTaskAncestorDispatchIdsShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldFail*
  name: GetTaskAncestorDispatchIdsShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskAncestorDispatchIdsShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldFail
  nameWithType: TaskTableTestBase.GetTaskAncestorDispatchIdsShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldSucceed
  name: GetTaskAncestorDispatchIdsShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskAncestorDispatchIdsShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldSucceed()
  nameWithType: TaskTableTestBase.GetTaskAncestorDispatchIdsShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldSucceed*
  name: GetTaskAncestorDispatchIdsShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskAncestorDispatchIdsShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskAncestorDispatchIdsShouldSucceed
  nameWithType: TaskTableTestBase.GetTaskAncestorDispatchIdsShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldFail
  name: GetTaskDispatchIdShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskDispatchIdShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldFail()
  nameWithType: TaskTableTestBase.GetTaskDispatchIdShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldFail*
  name: GetTaskDispatchIdShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskDispatchIdShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldFail
  nameWithType: TaskTableTestBase.GetTaskDispatchIdShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldSucceed
  name: GetTaskDispatchIdShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskDispatchIdShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldSucceed()
  nameWithType: TaskTableTestBase.GetTaskDispatchIdShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldSucceed*
  name: GetTaskDispatchIdShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskDispatchIdShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskDispatchIdShouldSucceed
  nameWithType: TaskTableTestBase.GetTaskDispatchIdShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskExpectedOutputKeysShouldSucceed
  name: GetTaskExpectedOutputKeysShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskExpectedOutputKeysShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskExpectedOutputKeysShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskExpectedOutputKeysShouldSucceed()
  nameWithType: TaskTableTestBase.GetTaskExpectedOutputKeysShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskExpectedOutputKeysShouldSucceed*
  name: GetTaskExpectedOutputKeysShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskExpectedOutputKeysShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskExpectedOutputKeysShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskExpectedOutputKeysShouldSucceed
  nameWithType: TaskTableTestBase.GetTaskExpectedOutputKeysShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskOutputShouldSucceed
  name: GetTaskOutputShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskOutputShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskOutputShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskOutputShouldSucceed()
  nameWithType: TaskTableTestBase.GetTaskOutputShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskOutputShouldSucceed*
  name: GetTaskOutputShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskOutputShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskOutputShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskOutputShouldSucceed
  nameWithType: TaskTableTestBase.GetTaskOutputShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskTableInstance
  name: GetTaskTableInstance()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskTableInstance
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskTableInstance
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskTableInstance()
  nameWithType: TaskTableTestBase.GetTaskTableInstance()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskTableInstance*
  name: GetTaskTableInstance
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_GetTaskTableInstance_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskTableInstance
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.GetTaskTableInstance
  nameWithType: TaskTableTestBase.GetTaskTableInstance
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.IsTaskCanceledShouldSucceed
  name: IsTaskCanceledShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_IsTaskCanceledShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.IsTaskCanceledShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.IsTaskCanceledShouldSucceed()
  nameWithType: TaskTableTestBase.IsTaskCanceledShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.IsTaskCanceledShouldSucceed*
  name: IsTaskCanceledShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_IsTaskCanceledShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.IsTaskCanceledShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.IsTaskCanceledShouldSucceed
  nameWithType: TaskTableTestBase.IsTaskCanceledShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldFail
  name: ReadTaskAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_ReadTaskAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldFail()
  nameWithType: TaskTableTestBase.ReadTaskAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldFail*
  name: ReadTaskAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_ReadTaskAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldFail
  nameWithType: TaskTableTestBase.ReadTaskAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldSucceed
  name: ReadTaskAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_ReadTaskAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.ReadTaskAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldSucceed*
  name: ReadTaskAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_ReadTaskAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskAsyncShouldSucceed
  nameWithType: TaskTableTestBase.ReadTaskAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskWithoutPayloadAsyncShouldSucceed
  name: ReadTaskWithoutPayloadAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_ReadTaskWithoutPayloadAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskWithoutPayloadAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskWithoutPayloadAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.ReadTaskWithoutPayloadAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskWithoutPayloadAsyncShouldSucceed*
  name: ReadTaskWithoutPayloadAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_ReadTaskWithoutPayloadAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskWithoutPayloadAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.ReadTaskWithoutPayloadAsyncShouldSucceed
  nameWithType: TaskTableTestBase.ReadTaskWithoutPayloadAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.RunTests
  name: RunTests
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_RunTests
  commentId: F:ArmoniK.Core.Common.Tests.TaskTableTestBase.RunTests
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.RunTests
  nameWithType: TaskTableTestBase.RunTests
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskErrorAsyncShouldSucceed
  name: SetTaskErrorAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_SetTaskErrorAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskErrorAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskErrorAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.SetTaskErrorAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskErrorAsyncShouldSucceed*
  name: SetTaskErrorAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_SetTaskErrorAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskErrorAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskErrorAsyncShouldSucceed
  nameWithType: TaskTableTestBase.SetTaskErrorAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskSuccessAsyncShouldSucceed
  name: SetTaskSuccessAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_SetTaskSuccessAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskSuccessAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskSuccessAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.SetTaskSuccessAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskSuccessAsyncShouldSucceed*
  name: SetTaskSuccessAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_SetTaskSuccessAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskSuccessAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetTaskSuccessAsyncShouldSucceed
  nameWithType: TaskTableTestBase.SetTaskSuccessAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetUp
  name: SetUp()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_SetUp
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.SetUp
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetUp()
  nameWithType: TaskTableTestBase.SetUp()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetUp*
  name: SetUp
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_SetUp_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.SetUp
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.SetUp
  nameWithType: TaskTableTestBase.SetUp
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.TaskTable
  name: TaskTable
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_TaskTable
  commentId: F:ArmoniK.Core.Common.Tests.TaskTableTestBase.TaskTable
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.TaskTable
  nameWithType: TaskTableTestBase.TaskTable
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.TearDown
  name: TearDown()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_TearDown
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.TearDown
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.TearDown()
  nameWithType: TaskTableTestBase.TearDown()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.TearDown*
  name: TearDown
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_TearDown_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.TearDown
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.TearDown
  nameWithType: TaskTableTestBase.TearDown
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldFail
  name: UpdateAllTaskStatusAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateAllTaskStatusAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldFail()
  nameWithType: TaskTableTestBase.UpdateAllTaskStatusAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldFail*
  name: UpdateAllTaskStatusAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateAllTaskStatusAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldFail
  nameWithType: TaskTableTestBase.UpdateAllTaskStatusAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceed
  name: UpdateAllTaskStatusAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateAllTaskStatusAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceed*
  name: UpdateAllTaskStatusAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateAllTaskStatusAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceed
  nameWithType: TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven
  name: UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven()
  nameWithType: TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven*
  name: UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven
  nameWithType: TaskTableTestBase.UpdateAllTaskStatusAsyncShouldSucceedIfNoStatusGiven
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldFail
  name: UpdateTaskStatusAsyncShouldFail()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateTaskStatusAsyncShouldFail
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldFail
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldFail()
  nameWithType: TaskTableTestBase.UpdateTaskStatusAsyncShouldFail()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldFail*
  name: UpdateTaskStatusAsyncShouldFail
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateTaskStatusAsyncShouldFail_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldFail
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldFail
  nameWithType: TaskTableTestBase.UpdateTaskStatusAsyncShouldFail
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldSucceed
  name: UpdateTaskStatusAsyncShouldSucceed()
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateTaskStatusAsyncShouldSucceed
  commentId: M:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldSucceed
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldSucceed()
  nameWithType: TaskTableTestBase.UpdateTaskStatusAsyncShouldSucceed()
- uid: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldSucceed*
  name: UpdateTaskStatusAsyncShouldSucceed
  href: api/ArmoniK.Core.Common.Tests.TaskTableTestBase.html#ArmoniK_Core_Common_Tests_TaskTableTestBase_UpdateTaskStatusAsyncShouldSucceed_
  commentId: Overload:ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldSucceed
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Tests.TaskTableTestBase.UpdateTaskStatusAsyncShouldSucceed
  nameWithType: TaskTableTestBase.UpdateTaskStatusAsyncShouldSucceed
- uid: ArmoniK.Core.Common.Utils
  name: ArmoniK.Core.Common.Utils
  href: api/ArmoniK.Core.Common.Utils.html
  commentId: N:ArmoniK.Core.Common.Utils
  fullName: ArmoniK.Core.Common.Utils
  nameWithType: ArmoniK.Core.Common.Utils
- uid: ArmoniK.Core.Common.Utils.AsyncDisposable
  name: AsyncDisposable
  href: api/ArmoniK.Core.Common.Utils.AsyncDisposable.html
  commentId: T:ArmoniK.Core.Common.Utils.AsyncDisposable
  fullName: ArmoniK.Core.Common.Utils.AsyncDisposable
  nameWithType: AsyncDisposable
- uid: ArmoniK.Core.Common.Utils.AsyncDisposable.Create(Func{ValueTask})
  name: Create(Func<ValueTask>)
  href: api/ArmoniK.Core.Common.Utils.AsyncDisposable.html#ArmoniK_Core_Common_Utils_AsyncDisposable_Create_Func_ValueTask__
  commentId: M:ArmoniK.Core.Common.Utils.AsyncDisposable.Create(Func{ValueTask})
  name.vb: Create(Func(Of ValueTask))
  fullName: ArmoniK.Core.Common.Utils.AsyncDisposable.Create(Func<ValueTask>)
  fullName.vb: ArmoniK.Core.Common.Utils.AsyncDisposable.Create(Func(Of ValueTask))
  nameWithType: AsyncDisposable.Create(Func<ValueTask>)
  nameWithType.vb: AsyncDisposable.Create(Func(Of ValueTask))
- uid: ArmoniK.Core.Common.Utils.AsyncDisposable.Create*
  name: Create
  href: api/ArmoniK.Core.Common.Utils.AsyncDisposable.html#ArmoniK_Core_Common_Utils_AsyncDisposable_Create_
  commentId: Overload:ArmoniK.Core.Common.Utils.AsyncDisposable.Create
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.AsyncDisposable.Create
  nameWithType: AsyncDisposable.Create
- uid: ArmoniK.Core.Common.Utils.AsyncLazy`1
  name: AsyncLazy<T>
  href: api/ArmoniK.Core.Common.Utils.AsyncLazy-1.html
  commentId: T:ArmoniK.Core.Common.Utils.AsyncLazy`1
  name.vb: AsyncLazy(Of T)
  fullName: ArmoniK.Core.Common.Utils.AsyncLazy<T>
  fullName.vb: ArmoniK.Core.Common.Utils.AsyncLazy(Of T)
  nameWithType: AsyncLazy<T>
  nameWithType.vb: AsyncLazy(Of T)
- uid: ArmoniK.Core.Common.Utils.AsyncLazy`1.#ctor(Func{`0})
  name: AsyncLazy(Func<T>)
  href: api/ArmoniK.Core.Common.Utils.AsyncLazy-1.html#ArmoniK_Core_Common_Utils_AsyncLazy_1__ctor_Func__0__
  commentId: M:ArmoniK.Core.Common.Utils.AsyncLazy`1.#ctor(Func{`0})
  name.vb: AsyncLazy(Func(Of T))
  fullName: ArmoniK.Core.Common.Utils.AsyncLazy<T>.AsyncLazy(Func<T>)
  fullName.vb: ArmoniK.Core.Common.Utils.AsyncLazy(Of T).AsyncLazy(Func(Of T))
  nameWithType: AsyncLazy<T>.AsyncLazy(Func<T>)
  nameWithType.vb: AsyncLazy(Of T).AsyncLazy(Func(Of T))
- uid: ArmoniK.Core.Common.Utils.AsyncLazy`1.#ctor(Func{Task{`0}})
  name: AsyncLazy(Func<Task<T>>)
  href: api/ArmoniK.Core.Common.Utils.AsyncLazy-1.html#ArmoniK_Core_Common_Utils_AsyncLazy_1__ctor_Func_Task__0___
  commentId: M:ArmoniK.Core.Common.Utils.AsyncLazy`1.#ctor(Func{Task{`0}})
  name.vb: AsyncLazy(Func(Of Task(Of T)))
  fullName: ArmoniK.Core.Common.Utils.AsyncLazy<T>.AsyncLazy(Func<Task<T>>)
  fullName.vb: ArmoniK.Core.Common.Utils.AsyncLazy(Of T).AsyncLazy(Func(Of Task(Of T)))
  nameWithType: AsyncLazy<T>.AsyncLazy(Func<Task<T>>)
  nameWithType.vb: AsyncLazy(Of T).AsyncLazy(Func(Of Task(Of T)))
- uid: ArmoniK.Core.Common.Utils.AsyncLazy`1.#ctor*
  name: AsyncLazy
  href: api/ArmoniK.Core.Common.Utils.AsyncLazy-1.html#ArmoniK_Core_Common_Utils_AsyncLazy_1__ctor_
  commentId: Overload:ArmoniK.Core.Common.Utils.AsyncLazy`1.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.AsyncLazy<T>.AsyncLazy
  fullName.vb: ArmoniK.Core.Common.Utils.AsyncLazy(Of T).AsyncLazy
  nameWithType: AsyncLazy<T>.AsyncLazy
  nameWithType.vb: AsyncLazy(Of T).AsyncLazy
- uid: ArmoniK.Core.Common.Utils.AsyncLazy`1.GetAwaiter
  name: GetAwaiter()
  href: api/ArmoniK.Core.Common.Utils.AsyncLazy-1.html#ArmoniK_Core_Common_Utils_AsyncLazy_1_GetAwaiter
  commentId: M:ArmoniK.Core.Common.Utils.AsyncLazy`1.GetAwaiter
  fullName: ArmoniK.Core.Common.Utils.AsyncLazy<T>.GetAwaiter()
  fullName.vb: ArmoniK.Core.Common.Utils.AsyncLazy(Of T).GetAwaiter()
  nameWithType: AsyncLazy<T>.GetAwaiter()
  nameWithType.vb: AsyncLazy(Of T).GetAwaiter()
- uid: ArmoniK.Core.Common.Utils.AsyncLazy`1.GetAwaiter*
  name: GetAwaiter
  href: api/ArmoniK.Core.Common.Utils.AsyncLazy-1.html#ArmoniK_Core_Common_Utils_AsyncLazy_1_GetAwaiter_
  commentId: Overload:ArmoniK.Core.Common.Utils.AsyncLazy`1.GetAwaiter
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.AsyncLazy<T>.GetAwaiter
  fullName.vb: ArmoniK.Core.Common.Utils.AsyncLazy(Of T).GetAwaiter
  nameWithType: AsyncLazy<T>.GetAwaiter
  nameWithType.vb: AsyncLazy(Of T).GetAwaiter
- uid: ArmoniK.Core.Common.Utils.Disposable
  name: Disposable
  href: api/ArmoniK.Core.Common.Utils.Disposable.html
  commentId: T:ArmoniK.Core.Common.Utils.Disposable
  fullName: ArmoniK.Core.Common.Utils.Disposable
  nameWithType: Disposable
- uid: ArmoniK.Core.Common.Utils.Disposable.Create(Action)
  name: Create(Action)
  href: api/ArmoniK.Core.Common.Utils.Disposable.html#ArmoniK_Core_Common_Utils_Disposable_Create_Action_
  commentId: M:ArmoniK.Core.Common.Utils.Disposable.Create(Action)
  fullName: ArmoniK.Core.Common.Utils.Disposable.Create(Action)
  nameWithType: Disposable.Create(Action)
- uid: ArmoniK.Core.Common.Utils.Disposable.Create*
  name: Create
  href: api/ArmoniK.Core.Common.Utils.Disposable.html#ArmoniK_Core_Common_Utils_Disposable_Create_
  commentId: Overload:ArmoniK.Core.Common.Utils.Disposable.Create
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.Disposable.Create
  nameWithType: Disposable.Create
- uid: ArmoniK.Core.Common.Utils.DisposableExt
  name: DisposableExt
  href: api/ArmoniK.Core.Common.Utils.DisposableExt.html
  commentId: T:ArmoniK.Core.Common.Utils.DisposableExt
  fullName: ArmoniK.Core.Common.Utils.DisposableExt
  nameWithType: DisposableExt
- uid: ArmoniK.Core.Common.Utils.DisposableExt.Merge(IEnumerable{IAsyncDisposable})
  name: Merge(IEnumerable<IAsyncDisposable>)
  href: api/ArmoniK.Core.Common.Utils.DisposableExt.html#ArmoniK_Core_Common_Utils_DisposableExt_Merge_IEnumerable_IAsyncDisposable__
  commentId: M:ArmoniK.Core.Common.Utils.DisposableExt.Merge(IEnumerable{IAsyncDisposable})
  name.vb: Merge(IEnumerable(Of IAsyncDisposable))
  fullName: ArmoniK.Core.Common.Utils.DisposableExt.Merge(IEnumerable<IAsyncDisposable>)
  fullName.vb: ArmoniK.Core.Common.Utils.DisposableExt.Merge(IEnumerable(Of IAsyncDisposable))
  nameWithType: DisposableExt.Merge(IEnumerable<IAsyncDisposable>)
  nameWithType.vb: DisposableExt.Merge(IEnumerable(Of IAsyncDisposable))
- uid: ArmoniK.Core.Common.Utils.DisposableExt.Merge*
  name: Merge
  href: api/ArmoniK.Core.Common.Utils.DisposableExt.html#ArmoniK_Core_Common_Utils_DisposableExt_Merge_
  commentId: Overload:ArmoniK.Core.Common.Utils.DisposableExt.Merge
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.DisposableExt.Merge
  nameWithType: DisposableExt.Merge
- uid: ArmoniK.Core.Common.Utils.Heart
  name: Heart
  href: api/ArmoniK.Core.Common.Utils.Heart.html
  commentId: T:ArmoniK.Core.Common.Utils.Heart
  fullName: ArmoniK.Core.Common.Utils.Heart
  nameWithType: Heart
- uid: ArmoniK.Core.Common.Utils.Heart.#ctor(Func{CancellationToken,Task{System.Boolean}},TimeSpan,CancellationToken)
  name: Heart(Func<CancellationToken, Task<Boolean>>, TimeSpan, CancellationToken)
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart__ctor_Func_CancellationToken_Task_System_Boolean___TimeSpan_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Utils.Heart.#ctor(Func{CancellationToken,Task{System.Boolean}},TimeSpan,CancellationToken)
  name.vb: Heart(Func(Of CancellationToken, Task(Of Boolean)), TimeSpan, CancellationToken)
  fullName: ArmoniK.Core.Common.Utils.Heart.Heart(Func<CancellationToken, Task<System.Boolean>>, TimeSpan, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Utils.Heart.Heart(Func(Of CancellationToken, Task(Of System.Boolean)), TimeSpan, CancellationToken)
  nameWithType: Heart.Heart(Func<CancellationToken, Task<Boolean>>, TimeSpan, CancellationToken)
  nameWithType.vb: Heart.Heart(Func(Of CancellationToken, Task(Of Boolean)), TimeSpan, CancellationToken)
- uid: ArmoniK.Core.Common.Utils.Heart.#ctor(Func{System.Boolean},TimeSpan,CancellationToken)
  name: Heart(Func<Boolean>, TimeSpan, CancellationToken)
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart__ctor_Func_System_Boolean__TimeSpan_CancellationToken_
  commentId: M:ArmoniK.Core.Common.Utils.Heart.#ctor(Func{System.Boolean},TimeSpan,CancellationToken)
  name.vb: Heart(Func(Of Boolean), TimeSpan, CancellationToken)
  fullName: ArmoniK.Core.Common.Utils.Heart.Heart(Func<System.Boolean>, TimeSpan, CancellationToken)
  fullName.vb: ArmoniK.Core.Common.Utils.Heart.Heart(Func(Of System.Boolean), TimeSpan, CancellationToken)
  nameWithType: Heart.Heart(Func<Boolean>, TimeSpan, CancellationToken)
  nameWithType.vb: Heart.Heart(Func(Of Boolean), TimeSpan, CancellationToken)
- uid: ArmoniK.Core.Common.Utils.Heart.#ctor*
  name: Heart
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart__ctor_
  commentId: Overload:ArmoniK.Core.Common.Utils.Heart.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.Heart.Heart
  nameWithType: Heart.Heart
- uid: ArmoniK.Core.Common.Utils.Heart.HeartStopped
  name: HeartStopped
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart_HeartStopped
  commentId: P:ArmoniK.Core.Common.Utils.Heart.HeartStopped
  fullName: ArmoniK.Core.Common.Utils.Heart.HeartStopped
  nameWithType: Heart.HeartStopped
- uid: ArmoniK.Core.Common.Utils.Heart.HeartStopped*
  name: HeartStopped
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart_HeartStopped_
  commentId: Overload:ArmoniK.Core.Common.Utils.Heart.HeartStopped
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.Heart.HeartStopped
  nameWithType: Heart.HeartStopped
- uid: ArmoniK.Core.Common.Utils.Heart.Start
  name: Start()
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart_Start
  commentId: M:ArmoniK.Core.Common.Utils.Heart.Start
  fullName: ArmoniK.Core.Common.Utils.Heart.Start()
  nameWithType: Heart.Start()
- uid: ArmoniK.Core.Common.Utils.Heart.Start*
  name: Start
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart_Start_
  commentId: Overload:ArmoniK.Core.Common.Utils.Heart.Start
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.Heart.Start
  nameWithType: Heart.Start
- uid: ArmoniK.Core.Common.Utils.Heart.Stop
  name: Stop()
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart_Stop
  commentId: M:ArmoniK.Core.Common.Utils.Heart.Stop
  fullName: ArmoniK.Core.Common.Utils.Heart.Stop()
  nameWithType: Heart.Stop()
- uid: ArmoniK.Core.Common.Utils.Heart.Stop*
  name: Stop
  href: api/ArmoniK.Core.Common.Utils.Heart.html#ArmoniK_Core_Common_Utils_Heart_Stop_
  commentId: Overload:ArmoniK.Core.Common.Utils.Heart.Stop
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.Heart.Stop
  nameWithType: Heart.Stop
- uid: ArmoniK.Core.Common.Utils.TaskExt
  name: TaskExt
  href: api/ArmoniK.Core.Common.Utils.TaskExt.html
  commentId: T:ArmoniK.Core.Common.Utils.TaskExt
  fullName: ArmoniK.Core.Common.Utils.TaskExt
  nameWithType: TaskExt
- uid: ArmoniK.Core.Common.Utils.TaskExt.ToListAsync*
  name: ToListAsync
  href: api/ArmoniK.Core.Common.Utils.TaskExt.html#ArmoniK_Core_Common_Utils_TaskExt_ToListAsync_
  commentId: Overload:ArmoniK.Core.Common.Utils.TaskExt.ToListAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.TaskExt.ToListAsync
  nameWithType: TaskExt.ToListAsync
- uid: ArmoniK.Core.Common.Utils.TaskExt.ToListAsync``1(Task{IEnumerable{``0}})
  name: ToListAsync<T>(Task<IEnumerable<T>>)
  href: api/ArmoniK.Core.Common.Utils.TaskExt.html#ArmoniK_Core_Common_Utils_TaskExt_ToListAsync__1_Task_IEnumerable___0___
  commentId: M:ArmoniK.Core.Common.Utils.TaskExt.ToListAsync``1(Task{IEnumerable{``0}})
  name.vb: ToListAsync(Of T)(Task(Of IEnumerable(Of T)))
  fullName: ArmoniK.Core.Common.Utils.TaskExt.ToListAsync<T>(Task<IEnumerable<T>>)
  fullName.vb: ArmoniK.Core.Common.Utils.TaskExt.ToListAsync(Of T)(Task(Of IEnumerable(Of T)))
  nameWithType: TaskExt.ToListAsync<T>(Task<IEnumerable<T>>)
  nameWithType.vb: TaskExt.ToListAsync(Of T)(Task(Of IEnumerable(Of T)))
- uid: ArmoniK.Core.Common.Utils.TaskExt.WhenAll(IEnumerable{Task})
  name: WhenAll(IEnumerable<Task>)
  href: api/ArmoniK.Core.Common.Utils.TaskExt.html#ArmoniK_Core_Common_Utils_TaskExt_WhenAll_IEnumerable_Task__
  commentId: M:ArmoniK.Core.Common.Utils.TaskExt.WhenAll(IEnumerable{Task})
  name.vb: WhenAll(IEnumerable(Of Task))
  fullName: ArmoniK.Core.Common.Utils.TaskExt.WhenAll(IEnumerable<Task>)
  fullName.vb: ArmoniK.Core.Common.Utils.TaskExt.WhenAll(IEnumerable(Of Task))
  nameWithType: TaskExt.WhenAll(IEnumerable<Task>)
  nameWithType.vb: TaskExt.WhenAll(IEnumerable(Of Task))
- uid: ArmoniK.Core.Common.Utils.TaskExt.WhenAll*
  name: WhenAll
  href: api/ArmoniK.Core.Common.Utils.TaskExt.html#ArmoniK_Core_Common_Utils_TaskExt_WhenAll_
  commentId: Overload:ArmoniK.Core.Common.Utils.TaskExt.WhenAll
  isSpec: "True"
  fullName: ArmoniK.Core.Common.Utils.TaskExt.WhenAll
  nameWithType: TaskExt.WhenAll
- uid: ArmoniK.Core.Common.Utils.TaskExt.WhenAll``1(IEnumerable{Task{``0}})
  name: WhenAll<T>(IEnumerable<Task<T>>)
  href: api/ArmoniK.Core.Common.Utils.TaskExt.html#ArmoniK_Core_Common_Utils_TaskExt_WhenAll__1_IEnumerable_Task___0___
  commentId: M:ArmoniK.Core.Common.Utils.TaskExt.WhenAll``1(IEnumerable{Task{``0}})
  name.vb: WhenAll(Of T)(IEnumerable(Of Task(Of T)))
  fullName: ArmoniK.Core.Common.Utils.TaskExt.WhenAll<T>(IEnumerable<Task<T>>)
  fullName.vb: ArmoniK.Core.Common.Utils.TaskExt.WhenAll(Of T)(IEnumerable(Of Task(Of T)))
  nameWithType: TaskExt.WhenAll<T>(IEnumerable<Task<T>>)
  nameWithType.vb: TaskExt.WhenAll(Of T)(IEnumerable(Of Task(Of T)))
- uid: ArmoniK.Core.Compute.PollingAgent
  name: ArmoniK.Core.Compute.PollingAgent
  href: api/ArmoniK.Core.Compute.PollingAgent.html
  commentId: N:ArmoniK.Core.Compute.PollingAgent
  fullName: ArmoniK.Core.Compute.PollingAgent
  nameWithType: ArmoniK.Core.Compute.PollingAgent
- uid: ArmoniK.Core.Compute.PollingAgent.Program
  name: Program
  href: api/ArmoniK.Core.Compute.PollingAgent.Program.html
  commentId: T:ArmoniK.Core.Compute.PollingAgent.Program
  fullName: ArmoniK.Core.Compute.PollingAgent.Program
  nameWithType: Program
- uid: ArmoniK.Core.Compute.PollingAgent.Program.Main(System.String[])
  name: Main(String[])
  href: api/ArmoniK.Core.Compute.PollingAgent.Program.html#ArmoniK_Core_Compute_PollingAgent_Program_Main_System_String___
  commentId: M:ArmoniK.Core.Compute.PollingAgent.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: ArmoniK.Core.Compute.PollingAgent.Program.Main(System.String[])
  fullName.vb: ArmoniK.Core.Compute.PollingAgent.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: ArmoniK.Core.Compute.PollingAgent.Program.Main*
  name: Main
  href: api/ArmoniK.Core.Compute.PollingAgent.Program.html#ArmoniK_Core_Compute_PollingAgent_Program_Main_
  commentId: Overload:ArmoniK.Core.Compute.PollingAgent.Program.Main
  isSpec: "True"
  fullName: ArmoniK.Core.Compute.PollingAgent.Program.Main
  nameWithType: Program.Main
- uid: ArmoniK.Core.Compute.PollingAgent.Worker
  name: Worker
  href: api/ArmoniK.Core.Compute.PollingAgent.Worker.html
  commentId: T:ArmoniK.Core.Compute.PollingAgent.Worker
  fullName: ArmoniK.Core.Compute.PollingAgent.Worker
  nameWithType: Worker
- uid: ArmoniK.Core.Compute.PollingAgent.Worker.#ctor(ArmoniK.Core.Common.Pollster.Pollster)
  name: Worker(Pollster)
  href: api/ArmoniK.Core.Compute.PollingAgent.Worker.html#ArmoniK_Core_Compute_PollingAgent_Worker__ctor_ArmoniK_Core_Common_Pollster_Pollster_
  commentId: M:ArmoniK.Core.Compute.PollingAgent.Worker.#ctor(ArmoniK.Core.Common.Pollster.Pollster)
  fullName: ArmoniK.Core.Compute.PollingAgent.Worker.Worker(ArmoniK.Core.Common.Pollster.Pollster)
  nameWithType: Worker.Worker(Pollster)
- uid: ArmoniK.Core.Compute.PollingAgent.Worker.#ctor*
  name: Worker
  href: api/ArmoniK.Core.Compute.PollingAgent.Worker.html#ArmoniK_Core_Compute_PollingAgent_Worker__ctor_
  commentId: Overload:ArmoniK.Core.Compute.PollingAgent.Worker.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Compute.PollingAgent.Worker.Worker
  nameWithType: Worker.Worker
- uid: ArmoniK.Core.Compute.PollingAgent.Worker.ExecuteAsync(CancellationToken)
  name: ExecuteAsync(CancellationToken)
  href: api/ArmoniK.Core.Compute.PollingAgent.Worker.html#ArmoniK_Core_Compute_PollingAgent_Worker_ExecuteAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Compute.PollingAgent.Worker.ExecuteAsync(CancellationToken)
  fullName: ArmoniK.Core.Compute.PollingAgent.Worker.ExecuteAsync(CancellationToken)
  nameWithType: Worker.ExecuteAsync(CancellationToken)
- uid: ArmoniK.Core.Compute.PollingAgent.Worker.ExecuteAsync*
  name: ExecuteAsync
  href: api/ArmoniK.Core.Compute.PollingAgent.Worker.html#ArmoniK_Core_Compute_PollingAgent_Worker_ExecuteAsync_
  commentId: Overload:ArmoniK.Core.Compute.PollingAgent.Worker.ExecuteAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Compute.PollingAgent.Worker.ExecuteAsync
  nameWithType: Worker.ExecuteAsync
- uid: ArmoniK.Core.Control.Metrics
  name: ArmoniK.Core.Control.Metrics
  href: api/ArmoniK.Core.Control.Metrics.html
  commentId: N:ArmoniK.Core.Control.Metrics
  fullName: ArmoniK.Core.Control.Metrics
  nameWithType: ArmoniK.Core.Control.Metrics
- uid: ArmoniK.Core.Control.Metrics.ArmoniKMeter
  name: ArmoniKMeter
  href: api/ArmoniK.Core.Control.Metrics.ArmoniKMeter.html
  commentId: T:ArmoniK.Core.Control.Metrics.ArmoniKMeter
  fullName: ArmoniK.Core.Control.Metrics.ArmoniKMeter
  nameWithType: ArmoniKMeter
- uid: ArmoniK.Core.Control.Metrics.ArmoniKMeter.#ctor(ArmoniK.Core.Common.Storage.ITaskTable,ILogger{ArmoniK.Core.Control.Metrics.ArmoniKMeter})
  name: ArmoniKMeter(ITaskTable, ILogger<ArmoniKMeter>)
  href: api/ArmoniK.Core.Control.Metrics.ArmoniKMeter.html#ArmoniK_Core_Control_Metrics_ArmoniKMeter__ctor_ArmoniK_Core_Common_Storage_ITaskTable_ILogger_ArmoniK_Core_Control_Metrics_ArmoniKMeter__
  commentId: M:ArmoniK.Core.Control.Metrics.ArmoniKMeter.#ctor(ArmoniK.Core.Common.Storage.ITaskTable,ILogger{ArmoniK.Core.Control.Metrics.ArmoniKMeter})
  name.vb: ArmoniKMeter(ITaskTable, ILogger(Of ArmoniKMeter))
  fullName: ArmoniK.Core.Control.Metrics.ArmoniKMeter.ArmoniKMeter(ArmoniK.Core.Common.Storage.ITaskTable, ILogger<ArmoniK.Core.Control.Metrics.ArmoniKMeter>)
  fullName.vb: ArmoniK.Core.Control.Metrics.ArmoniKMeter.ArmoniKMeter(ArmoniK.Core.Common.Storage.ITaskTable, ILogger(Of ArmoniK.Core.Control.Metrics.ArmoniKMeter))
  nameWithType: ArmoniKMeter.ArmoniKMeter(ITaskTable, ILogger<ArmoniKMeter>)
  nameWithType.vb: ArmoniKMeter.ArmoniKMeter(ITaskTable, ILogger(Of ArmoniKMeter))
- uid: ArmoniK.Core.Control.Metrics.ArmoniKMeter.#ctor*
  name: ArmoniKMeter
  href: api/ArmoniK.Core.Control.Metrics.ArmoniKMeter.html#ArmoniK_Core_Control_Metrics_ArmoniKMeter__ctor_
  commentId: Overload:ArmoniK.Core.Control.Metrics.ArmoniKMeter.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.ArmoniKMeter.ArmoniKMeter
  nameWithType: ArmoniKMeter.ArmoniKMeter
- uid: ArmoniK.Core.Control.Metrics.ArmoniKMeter.StartAsync(CancellationToken)
  name: StartAsync(CancellationToken)
  href: api/ArmoniK.Core.Control.Metrics.ArmoniKMeter.html#ArmoniK_Core_Control_Metrics_ArmoniKMeter_StartAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Control.Metrics.ArmoniKMeter.StartAsync(CancellationToken)
  fullName: ArmoniK.Core.Control.Metrics.ArmoniKMeter.StartAsync(CancellationToken)
  nameWithType: ArmoniKMeter.StartAsync(CancellationToken)
- uid: ArmoniK.Core.Control.Metrics.ArmoniKMeter.StartAsync*
  name: StartAsync
  href: api/ArmoniK.Core.Control.Metrics.ArmoniKMeter.html#ArmoniK_Core_Control_Metrics_ArmoniKMeter_StartAsync_
  commentId: Overload:ArmoniK.Core.Control.Metrics.ArmoniKMeter.StartAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.ArmoniKMeter.StartAsync
  nameWithType: ArmoniKMeter.StartAsync
- uid: ArmoniK.Core.Control.Metrics.ArmoniKMeter.StopAsync(CancellationToken)
  name: StopAsync(CancellationToken)
  href: api/ArmoniK.Core.Control.Metrics.ArmoniKMeter.html#ArmoniK_Core_Control_Metrics_ArmoniKMeter_StopAsync_CancellationToken_
  commentId: M:ArmoniK.Core.Control.Metrics.ArmoniKMeter.StopAsync(CancellationToken)
  fullName: ArmoniK.Core.Control.Metrics.ArmoniKMeter.StopAsync(CancellationToken)
  nameWithType: ArmoniKMeter.StopAsync(CancellationToken)
- uid: ArmoniK.Core.Control.Metrics.ArmoniKMeter.StopAsync*
  name: StopAsync
  href: api/ArmoniK.Core.Control.Metrics.ArmoniKMeter.html#ArmoniK_Core_Control_Metrics_ArmoniKMeter_StopAsync_
  commentId: Overload:ArmoniK.Core.Control.Metrics.ArmoniKMeter.StopAsync
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.ArmoniKMeter.StopAsync
  nameWithType: ArmoniKMeter.StopAsync
- uid: ArmoniK.Core.Control.Metrics.Options
  name: ArmoniK.Core.Control.Metrics.Options
  href: api/ArmoniK.Core.Control.Metrics.Options.html
  commentId: N:ArmoniK.Core.Control.Metrics.Options
  fullName: ArmoniK.Core.Control.Metrics.Options
  nameWithType: ArmoniK.Core.Control.Metrics.Options
- uid: ArmoniK.Core.Control.Metrics.Options.DescribedObject
  name: DescribedObject
  href: api/ArmoniK.Core.Control.Metrics.Options.DescribedObject.html
  commentId: T:ArmoniK.Core.Control.Metrics.Options.DescribedObject
  fullName: ArmoniK.Core.Control.Metrics.Options.DescribedObject
  nameWithType: DescribedObject
- uid: ArmoniK.Core.Control.Metrics.Options.DescribedObject.ApiVersion
  name: ApiVersion
  href: api/ArmoniK.Core.Control.Metrics.Options.DescribedObject.html#ArmoniK_Core_Control_Metrics_Options_DescribedObject_ApiVersion
  commentId: P:ArmoniK.Core.Control.Metrics.Options.DescribedObject.ApiVersion
  fullName: ArmoniK.Core.Control.Metrics.Options.DescribedObject.ApiVersion
  nameWithType: DescribedObject.ApiVersion
- uid: ArmoniK.Core.Control.Metrics.Options.DescribedObject.ApiVersion*
  name: ApiVersion
  href: api/ArmoniK.Core.Control.Metrics.Options.DescribedObject.html#ArmoniK_Core_Control_Metrics_Options_DescribedObject_ApiVersion_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Options.DescribedObject.ApiVersion
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Options.DescribedObject.ApiVersion
  nameWithType: DescribedObject.ApiVersion
- uid: ArmoniK.Core.Control.Metrics.Options.DescribedObject.Name
  name: Name
  href: api/ArmoniK.Core.Control.Metrics.Options.DescribedObject.html#ArmoniK_Core_Control_Metrics_Options_DescribedObject_Name
  commentId: P:ArmoniK.Core.Control.Metrics.Options.DescribedObject.Name
  fullName: ArmoniK.Core.Control.Metrics.Options.DescribedObject.Name
  nameWithType: DescribedObject.Name
- uid: ArmoniK.Core.Control.Metrics.Options.DescribedObject.Name*
  name: Name
  href: api/ArmoniK.Core.Control.Metrics.Options.DescribedObject.html#ArmoniK_Core_Control_Metrics_Options_DescribedObject_Name_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Options.DescribedObject.Name
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Options.DescribedObject.Name
  nameWithType: DescribedObject.Name
- uid: ArmoniK.Core.Control.Metrics.Options.DescribedObject.Namespace
  name: Namespace
  href: api/ArmoniK.Core.Control.Metrics.Options.DescribedObject.html#ArmoniK_Core_Control_Metrics_Options_DescribedObject_Namespace
  commentId: P:ArmoniK.Core.Control.Metrics.Options.DescribedObject.Namespace
  fullName: ArmoniK.Core.Control.Metrics.Options.DescribedObject.Namespace
  nameWithType: DescribedObject.Namespace
- uid: ArmoniK.Core.Control.Metrics.Options.DescribedObject.Namespace*
  name: Namespace
  href: api/ArmoniK.Core.Control.Metrics.Options.DescribedObject.html#ArmoniK_Core_Control_Metrics_Options_DescribedObject_Namespace_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Options.DescribedObject.Namespace
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Options.DescribedObject.Namespace
  nameWithType: DescribedObject.Namespace
- uid: ArmoniK.Core.Control.Metrics.Options.DescribedObject.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Control.Metrics.Options.DescribedObject.html#ArmoniK_Core_Control_Metrics_Options_DescribedObject_SettingSection
  commentId: F:ArmoniK.Core.Control.Metrics.Options.DescribedObject.SettingSection
  fullName: ArmoniK.Core.Control.Metrics.Options.DescribedObject.SettingSection
  nameWithType: DescribedObject.SettingSection
- uid: ArmoniK.Core.Control.Metrics.Options.Metrics
  name: Metrics
  href: api/ArmoniK.Core.Control.Metrics.Options.Metrics.html
  commentId: T:ArmoniK.Core.Control.Metrics.Options.Metrics
  fullName: ArmoniK.Core.Control.Metrics.Options.Metrics
  nameWithType: Metrics
- uid: ArmoniK.Core.Control.Metrics.Options.Metrics.ApiVersion
  name: ApiVersion
  href: api/ArmoniK.Core.Control.Metrics.Options.Metrics.html#ArmoniK_Core_Control_Metrics_Options_Metrics_ApiVersion
  commentId: P:ArmoniK.Core.Control.Metrics.Options.Metrics.ApiVersion
  fullName: ArmoniK.Core.Control.Metrics.Options.Metrics.ApiVersion
  nameWithType: Metrics.ApiVersion
- uid: ArmoniK.Core.Control.Metrics.Options.Metrics.ApiVersion*
  name: ApiVersion
  href: api/ArmoniK.Core.Control.Metrics.Options.Metrics.html#ArmoniK_Core_Control_Metrics_Options_Metrics_ApiVersion_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Options.Metrics.ApiVersion
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Options.Metrics.ApiVersion
  nameWithType: Metrics.ApiVersion
- uid: ArmoniK.Core.Control.Metrics.Options.Metrics.DescribedObject
  name: DescribedObject
  href: api/ArmoniK.Core.Control.Metrics.Options.Metrics.html#ArmoniK_Core_Control_Metrics_Options_Metrics_DescribedObject
  commentId: P:ArmoniK.Core.Control.Metrics.Options.Metrics.DescribedObject
  fullName: ArmoniK.Core.Control.Metrics.Options.Metrics.DescribedObject
  nameWithType: Metrics.DescribedObject
- uid: ArmoniK.Core.Control.Metrics.Options.Metrics.DescribedObject*
  name: DescribedObject
  href: api/ArmoniK.Core.Control.Metrics.Options.Metrics.html#ArmoniK_Core_Control_Metrics_Options_Metrics_DescribedObject_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Options.Metrics.DescribedObject
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Options.Metrics.DescribedObject
  nameWithType: Metrics.DescribedObject
- uid: ArmoniK.Core.Control.Metrics.Options.Metrics.SettingSection
  name: SettingSection
  href: api/ArmoniK.Core.Control.Metrics.Options.Metrics.html#ArmoniK_Core_Control_Metrics_Options_Metrics_SettingSection
  commentId: F:ArmoniK.Core.Control.Metrics.Options.Metrics.SettingSection
  fullName: ArmoniK.Core.Control.Metrics.Options.Metrics.SettingSection
  nameWithType: Metrics.SettingSection
- uid: ArmoniK.Core.Control.Metrics.Program
  name: Program
  href: api/ArmoniK.Core.Control.Metrics.Program.html
  commentId: T:ArmoniK.Core.Control.Metrics.Program
  fullName: ArmoniK.Core.Control.Metrics.Program
  nameWithType: Program
- uid: ArmoniK.Core.Control.Metrics.Program.Main(System.String[])
  name: Main(String[])
  href: api/ArmoniK.Core.Control.Metrics.Program.html#ArmoniK_Core_Control_Metrics_Program_Main_System_String___
  commentId: M:ArmoniK.Core.Control.Metrics.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: ArmoniK.Core.Control.Metrics.Program.Main(System.String[])
  fullName.vb: ArmoniK.Core.Control.Metrics.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: ArmoniK.Core.Control.Metrics.Program.Main*
  name: Main
  href: api/ArmoniK.Core.Control.Metrics.Program.html#ArmoniK_Core_Control_Metrics_Program_Main_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.Main
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.Main
  nameWithType: Program.Main
- uid: ArmoniK.Core.Control.Metrics.Program.Metric
  name: Program.Metric
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html
  commentId: T:ArmoniK.Core.Control.Metrics.Program.Metric
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric
  nameWithType: Program.Metric
- uid: ArmoniK.Core.Control.Metrics.Program.Metric.DescribedObject
  name: DescribedObject
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html#ArmoniK_Core_Control_Metrics_Program_Metric_DescribedObject
  commentId: P:ArmoniK.Core.Control.Metrics.Program.Metric.DescribedObject
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric.DescribedObject
  nameWithType: Program.Metric.DescribedObject
- uid: ArmoniK.Core.Control.Metrics.Program.Metric.DescribedObject*
  name: DescribedObject
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html#ArmoniK_Core_Control_Metrics_Program_Metric_DescribedObject_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.Metric.DescribedObject
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric.DescribedObject
  nameWithType: Program.Metric.DescribedObject
- uid: ArmoniK.Core.Control.Metrics.Program.Metric.MetricName
  name: MetricName
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html#ArmoniK_Core_Control_Metrics_Program_Metric_MetricName
  commentId: P:ArmoniK.Core.Control.Metrics.Program.Metric.MetricName
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric.MetricName
  nameWithType: Program.Metric.MetricName
- uid: ArmoniK.Core.Control.Metrics.Program.Metric.MetricName*
  name: MetricName
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html#ArmoniK_Core_Control_Metrics_Program_Metric_MetricName_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.Metric.MetricName
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric.MetricName
  nameWithType: Program.Metric.MetricName
- uid: ArmoniK.Core.Control.Metrics.Program.Metric.Timestamp
  name: Timestamp
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html#ArmoniK_Core_Control_Metrics_Program_Metric_Timestamp
  commentId: P:ArmoniK.Core.Control.Metrics.Program.Metric.Timestamp
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric.Timestamp
  nameWithType: Program.Metric.Timestamp
- uid: ArmoniK.Core.Control.Metrics.Program.Metric.Timestamp*
  name: Timestamp
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html#ArmoniK_Core_Control_Metrics_Program_Metric_Timestamp_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.Metric.Timestamp
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric.Timestamp
  nameWithType: Program.Metric.Timestamp
- uid: ArmoniK.Core.Control.Metrics.Program.Metric.Value
  name: Value
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html#ArmoniK_Core_Control_Metrics_Program_Metric_Value
  commentId: P:ArmoniK.Core.Control.Metrics.Program.Metric.Value
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric.Value
  nameWithType: Program.Metric.Value
- uid: ArmoniK.Core.Control.Metrics.Program.Metric.Value*
  name: Value
  href: api/ArmoniK.Core.Control.Metrics.Program.Metric.html#ArmoniK_Core_Control_Metrics_Program_Metric_Value_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.Metric.Value
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.Metric.Value
  nameWithType: Program.Metric.Value
- uid: ArmoniK.Core.Control.Metrics.Program.MetricGenerator
  name: Program.MetricGenerator
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricGenerator.html
  commentId: T:ArmoniK.Core.Control.Metrics.Program.MetricGenerator
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricGenerator
  nameWithType: Program.MetricGenerator
- uid: ArmoniK.Core.Control.Metrics.Program.MetricGenerator.#ctor(ArmoniK.Core.Common.Storage.ITaskTable,ArmoniK.Core.Control.Metrics.Options.Metrics)
  name: MetricGenerator(ITaskTable, Metrics)
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricGenerator.html#ArmoniK_Core_Control_Metrics_Program_MetricGenerator__ctor_ArmoniK_Core_Common_Storage_ITaskTable_ArmoniK_Core_Control_Metrics_Options_Metrics_
  commentId: M:ArmoniK.Core.Control.Metrics.Program.MetricGenerator.#ctor(ArmoniK.Core.Common.Storage.ITaskTable,ArmoniK.Core.Control.Metrics.Options.Metrics)
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricGenerator.MetricGenerator(ArmoniK.Core.Common.Storage.ITaskTable, ArmoniK.Core.Control.Metrics.Options.Metrics)
  nameWithType: Program.MetricGenerator.MetricGenerator(ITaskTable, Metrics)
- uid: ArmoniK.Core.Control.Metrics.Program.MetricGenerator.#ctor*
  name: MetricGenerator
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricGenerator.html#ArmoniK_Core_Control_Metrics_Program_MetricGenerator__ctor_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.MetricGenerator.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricGenerator.MetricGenerator
  nameWithType: Program.MetricGenerator.MetricGenerator
- uid: ArmoniK.Core.Control.Metrics.Program.MetricGenerator.GetMetrics
  name: GetMetrics()
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricGenerator.html#ArmoniK_Core_Control_Metrics_Program_MetricGenerator_GetMetrics
  commentId: M:ArmoniK.Core.Control.Metrics.Program.MetricGenerator.GetMetrics
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricGenerator.GetMetrics()
  nameWithType: Program.MetricGenerator.GetMetrics()
- uid: ArmoniK.Core.Control.Metrics.Program.MetricGenerator.GetMetrics*
  name: GetMetrics
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricGenerator.html#ArmoniK_Core_Control_Metrics_Program_MetricGenerator_GetMetrics_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.MetricGenerator.GetMetrics
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricGenerator.GetMetrics
  nameWithType: Program.MetricGenerator.GetMetrics
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList
  name: Program.MetricList
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html
  commentId: T:ArmoniK.Core.Control.Metrics.Program.MetricList
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList
  nameWithType: Program.MetricList
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList.ApiVersion
  name: ApiVersion
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html#ArmoniK_Core_Control_Metrics_Program_MetricList_ApiVersion
  commentId: P:ArmoniK.Core.Control.Metrics.Program.MetricList.ApiVersion
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList.ApiVersion
  nameWithType: Program.MetricList.ApiVersion
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList.ApiVersion*
  name: ApiVersion
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html#ArmoniK_Core_Control_Metrics_Program_MetricList_ApiVersion_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.MetricList.ApiVersion
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList.ApiVersion
  nameWithType: Program.MetricList.ApiVersion
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList.Items
  name: Items
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html#ArmoniK_Core_Control_Metrics_Program_MetricList_Items
  commentId: P:ArmoniK.Core.Control.Metrics.Program.MetricList.Items
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList.Items
  nameWithType: Program.MetricList.Items
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList.Items*
  name: Items
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html#ArmoniK_Core_Control_Metrics_Program_MetricList_Items_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.MetricList.Items
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList.Items
  nameWithType: Program.MetricList.Items
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList.Kind
  name: Kind
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html#ArmoniK_Core_Control_Metrics_Program_MetricList_Kind
  commentId: P:ArmoniK.Core.Control.Metrics.Program.MetricList.Kind
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList.Kind
  nameWithType: Program.MetricList.Kind
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList.Kind*
  name: Kind
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html#ArmoniK_Core_Control_Metrics_Program_MetricList_Kind_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.MetricList.Kind
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList.Kind
  nameWithType: Program.MetricList.Kind
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList.Metadata
  name: Metadata
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html#ArmoniK_Core_Control_Metrics_Program_MetricList_Metadata
  commentId: P:ArmoniK.Core.Control.Metrics.Program.MetricList.Metadata
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList.Metadata
  nameWithType: Program.MetricList.Metadata
- uid: ArmoniK.Core.Control.Metrics.Program.MetricList.Metadata*
  name: Metadata
  href: api/ArmoniK.Core.Control.Metrics.Program.MetricList.html#ArmoniK_Core_Control_Metrics_Program_MetricList_Metadata_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.MetricList.Metadata
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.MetricList.Metadata
  nameWithType: Program.MetricList.Metadata
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription
  name: Program.ObjectDescription
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html
  commentId: T:ArmoniK.Core.Control.Metrics.Program.ObjectDescription
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription
  nameWithType: Program.ObjectDescription
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.ApiVersion
  name: ApiVersion
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html#ArmoniK_Core_Control_Metrics_Program_ObjectDescription_ApiVersion
  commentId: P:ArmoniK.Core.Control.Metrics.Program.ObjectDescription.ApiVersion
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.ApiVersion
  nameWithType: Program.ObjectDescription.ApiVersion
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.ApiVersion*
  name: ApiVersion
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html#ArmoniK_Core_Control_Metrics_Program_ObjectDescription_ApiVersion_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.ObjectDescription.ApiVersion
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.ApiVersion
  nameWithType: Program.ObjectDescription.ApiVersion
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Kind
  name: Kind
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html#ArmoniK_Core_Control_Metrics_Program_ObjectDescription_Kind
  commentId: P:ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Kind
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Kind
  nameWithType: Program.ObjectDescription.Kind
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Kind*
  name: Kind
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html#ArmoniK_Core_Control_Metrics_Program_ObjectDescription_Kind_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Kind
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Kind
  nameWithType: Program.ObjectDescription.Kind
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.KubernetesNamespace
  name: KubernetesNamespace
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html#ArmoniK_Core_Control_Metrics_Program_ObjectDescription_KubernetesNamespace
  commentId: P:ArmoniK.Core.Control.Metrics.Program.ObjectDescription.KubernetesNamespace
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.KubernetesNamespace
  nameWithType: Program.ObjectDescription.KubernetesNamespace
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.KubernetesNamespace*
  name: KubernetesNamespace
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html#ArmoniK_Core_Control_Metrics_Program_ObjectDescription_KubernetesNamespace_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.ObjectDescription.KubernetesNamespace
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.KubernetesNamespace
  nameWithType: Program.ObjectDescription.KubernetesNamespace
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Name
  name: Name
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html#ArmoniK_Core_Control_Metrics_Program_ObjectDescription_Name
  commentId: P:ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Name
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Name
  nameWithType: Program.ObjectDescription.Name
- uid: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Name*
  name: Name
  href: api/ArmoniK.Core.Control.Metrics.Program.ObjectDescription.html#ArmoniK_Core_Control_Metrics_Program_ObjectDescription_Name_
  commentId: Overload:ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Name
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Metrics.Program.ObjectDescription.Name
  nameWithType: Program.ObjectDescription.Name
- uid: ArmoniK.Core.Control.Submitter
  name: ArmoniK.Core.Control.Submitter
  href: api/ArmoniK.Core.Control.Submitter.html
  commentId: N:ArmoniK.Core.Control.Submitter
  fullName: ArmoniK.Core.Control.Submitter
  nameWithType: ArmoniK.Core.Control.Submitter
- uid: ArmoniK.Core.Control.Submitter.GrpcHealthCheckService
  name: GrpcHealthCheckService
  href: api/ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.html
  commentId: T:ArmoniK.Core.Control.Submitter.GrpcHealthCheckService
  fullName: ArmoniK.Core.Control.Submitter.GrpcHealthCheckService
  nameWithType: GrpcHealthCheckService
- uid: ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.#ctor(HealthCheckService)
  name: GrpcHealthCheckService(HealthCheckService)
  href: api/ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.html#ArmoniK_Core_Control_Submitter_GrpcHealthCheckService__ctor_HealthCheckService_
  commentId: M:ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.#ctor(HealthCheckService)
  fullName: ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.GrpcHealthCheckService(HealthCheckService)
  nameWithType: GrpcHealthCheckService.GrpcHealthCheckService(HealthCheckService)
- uid: ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.#ctor*
  name: GrpcHealthCheckService
  href: api/ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.html#ArmoniK_Core_Control_Submitter_GrpcHealthCheckService__ctor_
  commentId: Overload:ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.GrpcHealthCheckService.GrpcHealthCheckService
  nameWithType: GrpcHealthCheckService.GrpcHealthCheckService
- uid: ArmoniK.Core.Control.Submitter.Program
  name: Program
  href: api/ArmoniK.Core.Control.Submitter.Program.html
  commentId: T:ArmoniK.Core.Control.Submitter.Program
  fullName: ArmoniK.Core.Control.Submitter.Program
  nameWithType: Program
- uid: ArmoniK.Core.Control.Submitter.Program.Main(System.String[])
  name: Main(String[])
  href: api/ArmoniK.Core.Control.Submitter.Program.html#ArmoniK_Core_Control_Submitter_Program_Main_System_String___
  commentId: M:ArmoniK.Core.Control.Submitter.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: ArmoniK.Core.Control.Submitter.Program.Main(System.String[])
  fullName.vb: ArmoniK.Core.Control.Submitter.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: ArmoniK.Core.Control.Submitter.Program.Main*
  name: Main
  href: api/ArmoniK.Core.Control.Submitter.Program.html#ArmoniK_Core_Control_Submitter_Program_Main_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Program.Main
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Program.Main
  nameWithType: Program.Main
- uid: ArmoniK.Core.Control.Submitter.Services
  name: ArmoniK.Core.Control.Submitter.Services
  href: api/ArmoniK.Core.Control.Submitter.Services.html
  commentId: N:ArmoniK.Core.Control.Submitter.Services
  fullName: ArmoniK.Core.Control.Submitter.Services
  nameWithType: ArmoniK.Core.Control.Submitter.Services
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService
  name: GrpcSubmitterService
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html
  commentId: T:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService
  nameWithType: GrpcSubmitterService
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.#ctor(ArmoniK.Core.Common.gRPC.Services.ISubmitter)
  name: GrpcSubmitterService(ISubmitter)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService__ctor_ArmoniK_Core_Common_gRPC_Services_ISubmitter_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.#ctor(ArmoniK.Core.Common.gRPC.Services.ISubmitter)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GrpcSubmitterService(ArmoniK.Core.Common.gRPC.Services.ISubmitter)
  nameWithType: GrpcSubmitterService.GrpcSubmitterService(ISubmitter)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.#ctor*
  name: GrpcSubmitterService
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService__ctor_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.#ctor
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GrpcSubmitterService
  nameWithType: GrpcSubmitterService.GrpcSubmitterService
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelSession(Session,ServerCallContext)
  name: CancelSession(Session, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CancelSession_Session_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelSession(Session,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelSession(Session, ServerCallContext)
  nameWithType: GrpcSubmitterService.CancelSession(Session, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelSession*
  name: CancelSession
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CancelSession_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelSession
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelSession
  nameWithType: GrpcSubmitterService.CancelSession
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelTasks(TaskFilter,ServerCallContext)
  name: CancelTasks(TaskFilter, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CancelTasks_TaskFilter_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelTasks(TaskFilter,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelTasks(TaskFilter, ServerCallContext)
  nameWithType: GrpcSubmitterService.CancelTasks(TaskFilter, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelTasks*
  name: CancelTasks
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CancelTasks_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CancelTasks
  nameWithType: GrpcSubmitterService.CancelTasks
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CountTasks(TaskFilter,ServerCallContext)
  name: CountTasks(TaskFilter, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CountTasks_TaskFilter_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CountTasks(TaskFilter,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CountTasks(TaskFilter, ServerCallContext)
  nameWithType: GrpcSubmitterService.CountTasks(TaskFilter, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CountTasks*
  name: CountTasks
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CountTasks_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CountTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CountTasks
  nameWithType: GrpcSubmitterService.CountTasks
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateLargeTasks(IAsyncStreamReader{ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest},ServerCallContext)
  name: CreateLargeTasks(IAsyncStreamReader<CreateLargeTaskRequest>, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CreateLargeTasks_IAsyncStreamReader_ArmoniK_Api_gRPC_V1_CreateLargeTaskRequest__ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateLargeTasks(IAsyncStreamReader{ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest},ServerCallContext)
  name.vb: CreateLargeTasks(IAsyncStreamReader(Of CreateLargeTaskRequest), ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateLargeTasks(IAsyncStreamReader<ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest>, ServerCallContext)
  fullName.vb: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateLargeTasks(IAsyncStreamReader(Of ArmoniK.Api.gRPC.V1.CreateLargeTaskRequest), ServerCallContext)
  nameWithType: GrpcSubmitterService.CreateLargeTasks(IAsyncStreamReader<CreateLargeTaskRequest>, ServerCallContext)
  nameWithType.vb: GrpcSubmitterService.CreateLargeTasks(IAsyncStreamReader(Of CreateLargeTaskRequest), ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateLargeTasks*
  name: CreateLargeTasks
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CreateLargeTasks_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateLargeTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateLargeTasks
  nameWithType: GrpcSubmitterService.CreateLargeTasks
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSession(CreateSessionRequest,ServerCallContext)
  name: CreateSession(CreateSessionRequest, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CreateSession_CreateSessionRequest_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSession(CreateSessionRequest,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSession(CreateSessionRequest, ServerCallContext)
  nameWithType: GrpcSubmitterService.CreateSession(CreateSessionRequest, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSession*
  name: CreateSession
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CreateSession_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSession
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSession
  nameWithType: GrpcSubmitterService.CreateSession
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSmallTasks(CreateSmallTaskRequest,ServerCallContext)
  name: CreateSmallTasks(CreateSmallTaskRequest, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CreateSmallTasks_CreateSmallTaskRequest_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSmallTasks(CreateSmallTaskRequest,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSmallTasks(CreateSmallTaskRequest, ServerCallContext)
  nameWithType: GrpcSubmitterService.CreateSmallTasks(CreateSmallTaskRequest, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSmallTasks*
  name: CreateSmallTasks
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_CreateSmallTasks_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSmallTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.CreateSmallTasks
  nameWithType: GrpcSubmitterService.CreateSmallTasks
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetServiceConfiguration(Empty,ServerCallContext)
  name: GetServiceConfiguration(Empty, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_GetServiceConfiguration_Empty_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetServiceConfiguration(Empty,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetServiceConfiguration(Empty, ServerCallContext)
  nameWithType: GrpcSubmitterService.GetServiceConfiguration(Empty, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetServiceConfiguration*
  name: GetServiceConfiguration
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_GetServiceConfiguration_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetServiceConfiguration
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetServiceConfiguration
  nameWithType: GrpcSubmitterService.GetServiceConfiguration
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetStatus(GetStatusrequest,ServerCallContext)
  name: GetStatus(GetStatusrequest, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_GetStatus_GetStatusrequest_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetStatus(GetStatusrequest,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetStatus(GetStatusrequest, ServerCallContext)
  nameWithType: GrpcSubmitterService.GetStatus(GetStatusrequest, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetStatus*
  name: GetStatus
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_GetStatus_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetStatus
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.GetStatus
  nameWithType: GrpcSubmitterService.GetStatus
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.ListTasks(TaskFilter,ServerCallContext)
  name: ListTasks(TaskFilter, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_ListTasks_TaskFilter_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.ListTasks(TaskFilter,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.ListTasks(TaskFilter, ServerCallContext)
  nameWithType: GrpcSubmitterService.ListTasks(TaskFilter, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.ListTasks*
  name: ListTasks
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_ListTasks_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.ListTasks
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.ListTasks
  nameWithType: GrpcSubmitterService.ListTasks
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetResultStream(ResultRequest,IServerStreamWriter{ResultReply},ServerCallContext)
  name: TryGetResultStream(ResultRequest, IServerStreamWriter<ResultReply>, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_TryGetResultStream_ResultRequest_IServerStreamWriter_ResultReply__ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetResultStream(ResultRequest,IServerStreamWriter{ResultReply},ServerCallContext)
  name.vb: TryGetResultStream(ResultRequest, IServerStreamWriter(Of ResultReply), ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetResultStream(ResultRequest, IServerStreamWriter<ResultReply>, ServerCallContext)
  fullName.vb: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetResultStream(ResultRequest, IServerStreamWriter(Of ResultReply), ServerCallContext)
  nameWithType: GrpcSubmitterService.TryGetResultStream(ResultRequest, IServerStreamWriter<ResultReply>, ServerCallContext)
  nameWithType.vb: GrpcSubmitterService.TryGetResultStream(ResultRequest, IServerStreamWriter(Of ResultReply), ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetResultStream*
  name: TryGetResultStream
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_TryGetResultStream_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetResultStream
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetResultStream
  nameWithType: GrpcSubmitterService.TryGetResultStream
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetTaskOutput(ResultRequest,ServerCallContext)
  name: TryGetTaskOutput(ResultRequest, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_TryGetTaskOutput_ResultRequest_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetTaskOutput(ResultRequest,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetTaskOutput(ResultRequest, ServerCallContext)
  nameWithType: GrpcSubmitterService.TryGetTaskOutput(ResultRequest, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetTaskOutput*
  name: TryGetTaskOutput
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_TryGetTaskOutput_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetTaskOutput
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.TryGetTaskOutput
  nameWithType: GrpcSubmitterService.TryGetTaskOutput
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForAvailability(ResultRequest,ServerCallContext)
  name: WaitForAvailability(ResultRequest, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_WaitForAvailability_ResultRequest_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForAvailability(ResultRequest,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForAvailability(ResultRequest, ServerCallContext)
  nameWithType: GrpcSubmitterService.WaitForAvailability(ResultRequest, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForAvailability*
  name: WaitForAvailability
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_WaitForAvailability_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForAvailability
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForAvailability
  nameWithType: GrpcSubmitterService.WaitForAvailability
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForCompletion(WaitRequest,ServerCallContext)
  name: WaitForCompletion(WaitRequest, ServerCallContext)
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_WaitForCompletion_WaitRequest_ServerCallContext_
  commentId: M:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForCompletion(WaitRequest,ServerCallContext)
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForCompletion(WaitRequest, ServerCallContext)
  nameWithType: GrpcSubmitterService.WaitForCompletion(WaitRequest, ServerCallContext)
- uid: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForCompletion*
  name: WaitForCompletion
  href: api/ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.html#ArmoniK_Core_Control_Submitter_Services_GrpcSubmitterService_WaitForCompletion_
  commentId: Overload:ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForCompletion
  isSpec: "True"
  fullName: ArmoniK.Core.Control.Submitter.Services.GrpcSubmitterService.WaitForCompletion
  nameWithType: GrpcSubmitterService.WaitForCompletion
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options
  name: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.html
  commentId: N:ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options
  nameWithType: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc
  name: Grpc
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.html
  commentId: T:ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc
  nameWithType: Grpc
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.Endpoint
  name: Endpoint
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Client_Options_Grpc_Endpoint
  commentId: P:ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.Endpoint
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.Endpoint
  nameWithType: Grpc.Endpoint
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.Endpoint*
  name: Endpoint
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Client_Options_Grpc_Endpoint_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.Endpoint
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.Endpoint
  nameWithType: Grpc.Endpoint
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.SettingSection
  name: SettingSection
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Client_Options_Grpc_SettingSection
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.SettingSection
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Client.Options.Grpc.SettingSection
  nameWithType: Grpc.SettingSection
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common
  name: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.html
  commentId: N:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common
  nameWithType: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload
  name: TestPayload
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html
  commentId: T:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload
  nameWithType: TestPayload
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.DataBytes
  name: DataBytes
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_DataBytes
  commentId: P:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.DataBytes
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.DataBytes
  nameWithType: TestPayload.DataBytes
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.DataBytes*
  name: DataBytes
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_DataBytes_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.DataBytes
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.DataBytes
  nameWithType: TestPayload.DataBytes
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Deserialize(System.Byte[])
  name: Deserialize(Byte[])
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_Deserialize_System_Byte___
  commentId: M:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Deserialize(System.Byte[])
  name.vb: Deserialize(Byte())
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Deserialize(System.Byte[])
  fullName.vb: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Deserialize(System.Byte())
  nameWithType: TestPayload.Deserialize(Byte[])
  nameWithType.vb: TestPayload.Deserialize(Byte())
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Deserialize*
  name: Deserialize
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_Deserialize_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Deserialize
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Deserialize
  nameWithType: TestPayload.Deserialize
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.ResultKey
  name: ResultKey
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_ResultKey
  commentId: P:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.ResultKey
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.ResultKey
  nameWithType: TestPayload.ResultKey
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.ResultKey*
  name: ResultKey
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_ResultKey_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.ResultKey
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.ResultKey
  nameWithType: TestPayload.ResultKey
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Serialize
  name: Serialize()
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_Serialize
  commentId: M:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Serialize
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Serialize()
  nameWithType: TestPayload.Serialize()
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Serialize*
  name: Serialize
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_Serialize_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Serialize
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Serialize
  nameWithType: TestPayload.Serialize
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType
  name: TestPayload.TaskType
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html
  commentId: T:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType
  nameWithType: TestPayload.TaskType
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Compute
  name: Compute
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_Compute
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Compute
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Compute
  nameWithType: TestPayload.TaskType.Compute
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.DatadepCompute
  name: DatadepCompute
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_DatadepCompute
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.DatadepCompute
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.DatadepCompute
  nameWithType: TestPayload.TaskType.DatadepCompute
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.DatadepTransfer
  name: DatadepTransfer
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_DatadepTransfer
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.DatadepTransfer
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.DatadepTransfer
  nameWithType: TestPayload.TaskType.DatadepTransfer
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Error
  name: Error
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_Error
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Error
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Error
  nameWithType: TestPayload.TaskType.Error
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.None
  name: None
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_None
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.None
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.None
  nameWithType: TestPayload.TaskType.None
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.PayloadCheckSum
  name: PayloadCheckSum
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_PayloadCheckSum
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.PayloadCheckSum
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.PayloadCheckSum
  nameWithType: TestPayload.TaskType.PayloadCheckSum
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Result
  name: Result
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_Result
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Result
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Result
  nameWithType: TestPayload.TaskType.Result
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.ReturnFailed
  name: ReturnFailed
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_ReturnFailed
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.ReturnFailed
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.ReturnFailed
  nameWithType: TestPayload.TaskType.ReturnFailed
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Transfer
  name: Transfer
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_Transfer
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Transfer
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Transfer
  nameWithType: TestPayload.TaskType.Transfer
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Undefined
  name: Undefined
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_TaskType_Undefined
  commentId: F:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Undefined
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.TaskType.Undefined
  nameWithType: TestPayload.TaskType.Undefined
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Type
  name: Type
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_Type
  commentId: P:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Type
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Type
  nameWithType: TestPayload.Type
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Type*
  name: Type
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_TestPayload_Type_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Type
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.TestPayload.Type
  nameWithType: TestPayload.Type
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService
  name: WorkerService
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.html
  commentId: T:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService
  nameWithType: WorkerService
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.#ctor(ILoggerFactory)
  name: WorkerService(ILoggerFactory)
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_WorkerService__ctor_ILoggerFactory_
  commentId: M:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.#ctor(ILoggerFactory)
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.WorkerService(ILoggerFactory)
  nameWithType: WorkerService.WorkerService(ILoggerFactory)
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.#ctor*
  name: WorkerService
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_WorkerService__ctor_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.#ctor
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.WorkerService
  nameWithType: WorkerService.WorkerService
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  name: Process(ITaskHandler)
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_WorkerService_Process_ArmoniK_Core_Common_Stream_Worker_ITaskHandler_
  commentId: M:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  nameWithType: WorkerService.Process(ITaskHandler)
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.Process*
  name: Process
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Common_WorkerService_Process_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.Process
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Common.WorkerService.Process
  nameWithType: WorkerService.Process
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server
  name: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.html
  commentId: N:ArmoniK.Extensions.Common.StreamWrapper.Tests.Server
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server
  nameWithType: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager
  name: ApplicationLifeTimeManager
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.html
  commentId: T:ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager
  nameWithType: ApplicationLifeTimeManager
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.#ctor(ILogger{ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager},IHostApplicationLifetime)
  name: ApplicationLifeTimeManager(ILogger<ApplicationLifeTimeManager>, IHostApplicationLifetime)
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Server_ApplicationLifeTimeManager__ctor_ILogger_ArmoniK_Extensions_Common_StreamWrapper_Tests_Server_ApplicationLifeTimeManager__IHostApplicationLifetime_
  commentId: M:ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.#ctor(ILogger{ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager},IHostApplicationLifetime)
  name.vb: ApplicationLifeTimeManager(ILogger(Of ApplicationLifeTimeManager), IHostApplicationLifetime)
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger<ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager>, IHostApplicationLifetime)
  fullName.vb: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger(Of ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager), IHostApplicationLifetime)
  nameWithType: ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger<ApplicationLifeTimeManager>, IHostApplicationLifetime)
  nameWithType.vb: ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger(Of ApplicationLifeTimeManager), IHostApplicationLifetime)
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.#ctor*
  name: ApplicationLifeTimeManager
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Server_ApplicationLifeTimeManager__ctor_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.#ctor
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.ApplicationLifeTimeManager.ApplicationLifeTimeManager
  nameWithType: ApplicationLifeTimeManager.ApplicationLifeTimeManager
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program
  name: Program
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.html
  commentId: T:ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program
  nameWithType: Program
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.Main(System.String[])
  name: Main(String[])
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Server_Program_Main_System_String___
  commentId: M:ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.Main(System.String[])
  fullName.vb: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.Main*
  name: Main
  href: api/ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.html#ArmoniK_Extensions_Common_StreamWrapper_Tests_Server_Program_Main_
  commentId: Overload:ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.Main
  isSpec: "True"
  fullName: ArmoniK.Extensions.Common.StreamWrapper.Tests.Server.Program.Main
  nameWithType: Program.Main
- uid: ArmoniK.Samples.HtcMock.Client
  name: ArmoniK.Samples.HtcMock.Client
  href: api/ArmoniK.Samples.HtcMock.Client.html
  commentId: N:ArmoniK.Samples.HtcMock.Client
  fullName: ArmoniK.Samples.HtcMock.Client
  nameWithType: ArmoniK.Samples.HtcMock.Client
- uid: ArmoniK.Samples.HtcMock.Client.GridClient
  name: GridClient
  href: api/ArmoniK.Samples.HtcMock.Client.GridClient.html
  commentId: T:ArmoniK.Samples.HtcMock.Client.GridClient
  fullName: ArmoniK.Samples.HtcMock.Client.GridClient
  nameWithType: GridClient
- uid: ArmoniK.Samples.HtcMock.Client.GridClient.#ctor(Submitter.SubmitterClient,ILoggerFactory)
  name: GridClient(Submitter.SubmitterClient, ILoggerFactory)
  href: api/ArmoniK.Samples.HtcMock.Client.GridClient.html#ArmoniK_Samples_HtcMock_Client_GridClient__ctor_Submitter_SubmitterClient_ILoggerFactory_
  commentId: M:ArmoniK.Samples.HtcMock.Client.GridClient.#ctor(Submitter.SubmitterClient,ILoggerFactory)
  fullName: ArmoniK.Samples.HtcMock.Client.GridClient.GridClient(Submitter.SubmitterClient, ILoggerFactory)
  nameWithType: GridClient.GridClient(Submitter.SubmitterClient, ILoggerFactory)
- uid: ArmoniK.Samples.HtcMock.Client.GridClient.#ctor*
  name: GridClient
  href: api/ArmoniK.Samples.HtcMock.Client.GridClient.html#ArmoniK_Samples_HtcMock_Client_GridClient__ctor_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.GridClient.#ctor
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.GridClient.GridClient
  nameWithType: GridClient.GridClient
- uid: ArmoniK.Samples.HtcMock.Client.GridClient.CreateSession
  name: CreateSession()
  href: api/ArmoniK.Samples.HtcMock.Client.GridClient.html#ArmoniK_Samples_HtcMock_Client_GridClient_CreateSession
  commentId: M:ArmoniK.Samples.HtcMock.Client.GridClient.CreateSession
  fullName: ArmoniK.Samples.HtcMock.Client.GridClient.CreateSession()
  nameWithType: GridClient.CreateSession()
- uid: ArmoniK.Samples.HtcMock.Client.GridClient.CreateSession*
  name: CreateSession
  href: api/ArmoniK.Samples.HtcMock.Client.GridClient.html#ArmoniK_Samples_HtcMock_Client_GridClient_CreateSession_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.GridClient.CreateSession
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.GridClient.CreateSession
  nameWithType: GridClient.CreateSession
- uid: ArmoniK.Samples.HtcMock.Client.GridClient.CreateSubSession(System.String)
  name: CreateSubSession(String)
  href: api/ArmoniK.Samples.HtcMock.Client.GridClient.html#ArmoniK_Samples_HtcMock_Client_GridClient_CreateSubSession_System_String_
  commentId: M:ArmoniK.Samples.HtcMock.Client.GridClient.CreateSubSession(System.String)
  fullName: ArmoniK.Samples.HtcMock.Client.GridClient.CreateSubSession(System.String)
  nameWithType: GridClient.CreateSubSession(String)
- uid: ArmoniK.Samples.HtcMock.Client.GridClient.CreateSubSession*
  name: CreateSubSession
  href: api/ArmoniK.Samples.HtcMock.Client.GridClient.html#ArmoniK_Samples_HtcMock_Client_GridClient_CreateSubSession_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.GridClient.CreateSubSession
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.GridClient.CreateSubSession
  nameWithType: GridClient.CreateSubSession
- uid: ArmoniK.Samples.HtcMock.Client.HtcMockClient
  name: HtcMockClient
  href: api/ArmoniK.Samples.HtcMock.Client.HtcMockClient.html
  commentId: T:ArmoniK.Samples.HtcMock.Client.HtcMockClient
  fullName: ArmoniK.Samples.HtcMock.Client.HtcMockClient
  nameWithType: HtcMockClient
- uid: ArmoniK.Samples.HtcMock.Client.HtcMockClient.#ctor(ArmoniK.Samples.HtcMock.Client.GridClient,ILogger{Htc.Mock.Client})
  name: HtcMockClient(GridClient, ILogger<Htc.Mock.Client>)
  href: api/ArmoniK.Samples.HtcMock.Client.HtcMockClient.html#ArmoniK_Samples_HtcMock_Client_HtcMockClient__ctor_ArmoniK_Samples_HtcMock_Client_GridClient_ILogger_Htc_Mock_Client__
  commentId: M:ArmoniK.Samples.HtcMock.Client.HtcMockClient.#ctor(ArmoniK.Samples.HtcMock.Client.GridClient,ILogger{Htc.Mock.Client})
  name.vb: HtcMockClient(GridClient, ILogger(Of Htc.Mock.Client))
  fullName: ArmoniK.Samples.HtcMock.Client.HtcMockClient.HtcMockClient(ArmoniK.Samples.HtcMock.Client.GridClient, ILogger<Htc.Mock.Client>)
  fullName.vb: ArmoniK.Samples.HtcMock.Client.HtcMockClient.HtcMockClient(ArmoniK.Samples.HtcMock.Client.GridClient, ILogger(Of Htc.Mock.Client))
  nameWithType: HtcMockClient.HtcMockClient(GridClient, ILogger<Htc.Mock.Client>)
  nameWithType.vb: HtcMockClient.HtcMockClient(GridClient, ILogger(Of Htc.Mock.Client))
- uid: ArmoniK.Samples.HtcMock.Client.HtcMockClient.#ctor*
  name: HtcMockClient
  href: api/ArmoniK.Samples.HtcMock.Client.HtcMockClient.html#ArmoniK_Samples_HtcMock_Client_HtcMockClient__ctor_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.HtcMockClient.#ctor
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.HtcMockClient.HtcMockClient
  nameWithType: HtcMockClient.HtcMockClient
- uid: ArmoniK.Samples.HtcMock.Client.HtcMockClient.Start(RunConfiguration)
  name: Start(RunConfiguration)
  href: api/ArmoniK.Samples.HtcMock.Client.HtcMockClient.html#ArmoniK_Samples_HtcMock_Client_HtcMockClient_Start_RunConfiguration_
  commentId: M:ArmoniK.Samples.HtcMock.Client.HtcMockClient.Start(RunConfiguration)
  fullName: ArmoniK.Samples.HtcMock.Client.HtcMockClient.Start(RunConfiguration)
  nameWithType: HtcMockClient.Start(RunConfiguration)
- uid: ArmoniK.Samples.HtcMock.Client.HtcMockClient.Start*
  name: Start
  href: api/ArmoniK.Samples.HtcMock.Client.HtcMockClient.html#ArmoniK_Samples_HtcMock_Client_HtcMockClient_Start_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.HtcMockClient.Start
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.HtcMockClient.Start
  nameWithType: HtcMockClient.Start
- uid: ArmoniK.Samples.HtcMock.Client.Options
  name: ArmoniK.Samples.HtcMock.Client.Options
  href: api/ArmoniK.Samples.HtcMock.Client.Options.html
  commentId: N:ArmoniK.Samples.HtcMock.Client.Options
  fullName: ArmoniK.Samples.HtcMock.Client.Options
  nameWithType: ArmoniK.Samples.HtcMock.Client.Options
- uid: ArmoniK.Samples.HtcMock.Client.Options.Grpc
  name: Grpc
  href: api/ArmoniK.Samples.HtcMock.Client.Options.Grpc.html
  commentId: T:ArmoniK.Samples.HtcMock.Client.Options.Grpc
  fullName: ArmoniK.Samples.HtcMock.Client.Options.Grpc
  nameWithType: Grpc
- uid: ArmoniK.Samples.HtcMock.Client.Options.Grpc.Endpoint
  name: Endpoint
  href: api/ArmoniK.Samples.HtcMock.Client.Options.Grpc.html#ArmoniK_Samples_HtcMock_Client_Options_Grpc_Endpoint
  commentId: P:ArmoniK.Samples.HtcMock.Client.Options.Grpc.Endpoint
  fullName: ArmoniK.Samples.HtcMock.Client.Options.Grpc.Endpoint
  nameWithType: Grpc.Endpoint
- uid: ArmoniK.Samples.HtcMock.Client.Options.Grpc.Endpoint*
  name: Endpoint
  href: api/ArmoniK.Samples.HtcMock.Client.Options.Grpc.html#ArmoniK_Samples_HtcMock_Client_Options_Grpc_Endpoint_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.Options.Grpc.Endpoint
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.Options.Grpc.Endpoint
  nameWithType: Grpc.Endpoint
- uid: ArmoniK.Samples.HtcMock.Client.Options.Grpc.SettingSection
  name: SettingSection
  href: api/ArmoniK.Samples.HtcMock.Client.Options.Grpc.html#ArmoniK_Samples_HtcMock_Client_Options_Grpc_SettingSection
  commentId: F:ArmoniK.Samples.HtcMock.Client.Options.Grpc.SettingSection
  fullName: ArmoniK.Samples.HtcMock.Client.Options.Grpc.SettingSection
  nameWithType: Grpc.SettingSection
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock
  name: HtcMock
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html
  commentId: T:ArmoniK.Samples.HtcMock.Client.Options.HtcMock
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock
  nameWithType: HtcMock
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.DataSize
  name: DataSize
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_DataSize
  commentId: P:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.DataSize
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.DataSize
  nameWithType: HtcMock.DataSize
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.DataSize*
  name: DataSize
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_DataSize_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.DataSize
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.DataSize
  nameWithType: HtcMock.DataSize
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.MemorySize
  name: MemorySize
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_MemorySize
  commentId: P:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.MemorySize
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.MemorySize
  nameWithType: HtcMock.MemorySize
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.MemorySize*
  name: MemorySize
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_MemorySize_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.MemorySize
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.MemorySize
  nameWithType: HtcMock.MemorySize
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.NTasks
  name: NTasks
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_NTasks
  commentId: P:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.NTasks
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.NTasks
  nameWithType: HtcMock.NTasks
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.NTasks*
  name: NTasks
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_NTasks_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.NTasks
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.NTasks
  nameWithType: HtcMock.NTasks
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SettingSection
  name: SettingSection
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_SettingSection
  commentId: F:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SettingSection
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SettingSection
  nameWithType: HtcMock.SettingSection
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SubTasksLevels
  name: SubTasksLevels
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_SubTasksLevels
  commentId: P:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SubTasksLevels
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SubTasksLevels
  nameWithType: HtcMock.SubTasksLevels
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SubTasksLevels*
  name: SubTasksLevels
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_SubTasksLevels_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SubTasksLevels
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.SubTasksLevels
  nameWithType: HtcMock.SubTasksLevels
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.TotalCalculationTime
  name: TotalCalculationTime
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_TotalCalculationTime
  commentId: P:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.TotalCalculationTime
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.TotalCalculationTime
  nameWithType: HtcMock.TotalCalculationTime
- uid: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.TotalCalculationTime*
  name: TotalCalculationTime
  href: api/ArmoniK.Samples.HtcMock.Client.Options.HtcMock.html#ArmoniK_Samples_HtcMock_Client_Options_HtcMock_TotalCalculationTime_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.Options.HtcMock.TotalCalculationTime
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.Options.HtcMock.TotalCalculationTime
  nameWithType: HtcMock.TotalCalculationTime
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient
  name: SessionClient
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html
  commentId: T:ArmoniK.Samples.HtcMock.Client.SessionClient
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient
  nameWithType: SessionClient
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.#ctor(Submitter.SubmitterClient,System.String,ILogger{ArmoniK.Samples.HtcMock.Client.GridClient})
  name: SessionClient(Submitter.SubmitterClient, String, ILogger<GridClient>)
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient__ctor_Submitter_SubmitterClient_System_String_ILogger_ArmoniK_Samples_HtcMock_Client_GridClient__
  commentId: M:ArmoniK.Samples.HtcMock.Client.SessionClient.#ctor(Submitter.SubmitterClient,System.String,ILogger{ArmoniK.Samples.HtcMock.Client.GridClient})
  name.vb: SessionClient(Submitter.SubmitterClient, String, ILogger(Of GridClient))
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.SessionClient(Submitter.SubmitterClient, System.String, ILogger<ArmoniK.Samples.HtcMock.Client.GridClient>)
  fullName.vb: ArmoniK.Samples.HtcMock.Client.SessionClient.SessionClient(Submitter.SubmitterClient, System.String, ILogger(Of ArmoniK.Samples.HtcMock.Client.GridClient))
  nameWithType: SessionClient.SessionClient(Submitter.SubmitterClient, String, ILogger<GridClient>)
  nameWithType.vb: SessionClient.SessionClient(Submitter.SubmitterClient, String, ILogger(Of GridClient))
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.#ctor*
  name: SessionClient
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient__ctor_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.SessionClient.#ctor
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.SessionClient
  nameWithType: SessionClient.SessionClient
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.Dispose
  name: Dispose()
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient_Dispose
  commentId: M:ArmoniK.Samples.HtcMock.Client.SessionClient.Dispose
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.Dispose()
  nameWithType: SessionClient.Dispose()
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.Dispose*
  name: Dispose
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient_Dispose_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.SessionClient.Dispose
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.Dispose
  nameWithType: SessionClient.Dispose
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.GetResult(System.String)
  name: GetResult(String)
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient_GetResult_System_String_
  commentId: M:ArmoniK.Samples.HtcMock.Client.SessionClient.GetResult(System.String)
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.GetResult(System.String)
  nameWithType: SessionClient.GetResult(String)
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.GetResult*
  name: GetResult
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient_GetResult_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.SessionClient.GetResult
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.GetResult
  nameWithType: SessionClient.GetResult
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.SubmitTasksWithDependencies(IEnumerable{Tuple{System.Byte[],IList{System.String}}})
  name: SubmitTasksWithDependencies(IEnumerable<Tuple<Byte[], IList<String>>>)
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient_SubmitTasksWithDependencies_IEnumerable_Tuple_System_Byte___IList_System_String____
  commentId: M:ArmoniK.Samples.HtcMock.Client.SessionClient.SubmitTasksWithDependencies(IEnumerable{Tuple{System.Byte[],IList{System.String}}})
  name.vb: SubmitTasksWithDependencies(IEnumerable(Of Tuple(Of Byte(), IList(Of String))))
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.SubmitTasksWithDependencies(IEnumerable<Tuple<System.Byte[], IList<System.String>>>)
  fullName.vb: ArmoniK.Samples.HtcMock.Client.SessionClient.SubmitTasksWithDependencies(IEnumerable(Of Tuple(Of System.Byte(), IList(Of System.String))))
  nameWithType: SessionClient.SubmitTasksWithDependencies(IEnumerable<Tuple<Byte[], IList<String>>>)
  nameWithType.vb: SessionClient.SubmitTasksWithDependencies(IEnumerable(Of Tuple(Of Byte(), IList(Of String))))
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.SubmitTasksWithDependencies*
  name: SubmitTasksWithDependencies
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient_SubmitTasksWithDependencies_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.SessionClient.SubmitTasksWithDependencies
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.SubmitTasksWithDependencies
  nameWithType: SessionClient.SubmitTasksWithDependencies
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.WaitSubtasksCompletion(System.String)
  name: WaitSubtasksCompletion(String)
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient_WaitSubtasksCompletion_System_String_
  commentId: M:ArmoniK.Samples.HtcMock.Client.SessionClient.WaitSubtasksCompletion(System.String)
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.WaitSubtasksCompletion(System.String)
  nameWithType: SessionClient.WaitSubtasksCompletion(String)
- uid: ArmoniK.Samples.HtcMock.Client.SessionClient.WaitSubtasksCompletion*
  name: WaitSubtasksCompletion
  href: api/ArmoniK.Samples.HtcMock.Client.SessionClient.html#ArmoniK_Samples_HtcMock_Client_SessionClient_WaitSubtasksCompletion_
  commentId: Overload:ArmoniK.Samples.HtcMock.Client.SessionClient.WaitSubtasksCompletion
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Client.SessionClient.WaitSubtasksCompletion
  nameWithType: SessionClient.WaitSubtasksCompletion
- uid: ArmoniK.Samples.HtcMock.GridWorker
  name: ArmoniK.Samples.HtcMock.GridWorker
  href: api/ArmoniK.Samples.HtcMock.GridWorker.html
  commentId: N:ArmoniK.Samples.HtcMock.GridWorker
  fullName: ArmoniK.Samples.HtcMock.GridWorker
  nameWithType: ArmoniK.Samples.HtcMock.GridWorker
- uid: ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager
  name: ApplicationLifeTimeManager
  href: api/ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.html
  commentId: T:ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager
  fullName: ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager
  nameWithType: ApplicationLifeTimeManager
- uid: ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.#ctor(ILogger{ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager},IHostApplicationLifetime)
  name: ApplicationLifeTimeManager(ILogger<ApplicationLifeTimeManager>, IHostApplicationLifetime)
  href: api/ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.html#ArmoniK_Samples_HtcMock_GridWorker_ApplicationLifeTimeManager__ctor_ILogger_ArmoniK_Samples_HtcMock_GridWorker_ApplicationLifeTimeManager__IHostApplicationLifetime_
  commentId: M:ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.#ctor(ILogger{ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager},IHostApplicationLifetime)
  name.vb: ApplicationLifeTimeManager(ILogger(Of ApplicationLifeTimeManager), IHostApplicationLifetime)
  fullName: ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger<ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager>, IHostApplicationLifetime)
  fullName.vb: ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger(Of ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager), IHostApplicationLifetime)
  nameWithType: ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger<ApplicationLifeTimeManager>, IHostApplicationLifetime)
  nameWithType.vb: ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger(Of ApplicationLifeTimeManager), IHostApplicationLifetime)
- uid: ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.#ctor*
  name: ApplicationLifeTimeManager
  href: api/ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.html#ArmoniK_Samples_HtcMock_GridWorker_ApplicationLifeTimeManager__ctor_
  commentId: Overload:ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.#ctor
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager.ApplicationLifeTimeManager
  nameWithType: ApplicationLifeTimeManager.ApplicationLifeTimeManager
- uid: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService
  name: SampleComputerService
  href: api/ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.html
  commentId: T:ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService
  fullName: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService
  nameWithType: SampleComputerService
- uid: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.#ctor(ILoggerFactory,ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager)
  name: SampleComputerService(ILoggerFactory, ApplicationLifeTimeManager)
  href: api/ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.html#ArmoniK_Samples_HtcMock_GridWorker_SampleComputerService__ctor_ILoggerFactory_ArmoniK_Samples_HtcMock_GridWorker_ApplicationLifeTimeManager_
  commentId: M:ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.#ctor(ILoggerFactory,ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager)
  fullName: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.SampleComputerService(ILoggerFactory, ArmoniK.Samples.HtcMock.GridWorker.ApplicationLifeTimeManager)
  nameWithType: SampleComputerService.SampleComputerService(ILoggerFactory, ApplicationLifeTimeManager)
- uid: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.#ctor*
  name: SampleComputerService
  href: api/ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.html#ArmoniK_Samples_HtcMock_GridWorker_SampleComputerService__ctor_
  commentId: Overload:ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.#ctor
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.SampleComputerService
  nameWithType: SampleComputerService.SampleComputerService
- uid: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  name: Process(ITaskHandler)
  href: api/ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.html#ArmoniK_Samples_HtcMock_GridWorker_SampleComputerService_Process_ArmoniK_Core_Common_Stream_Worker_ITaskHandler_
  commentId: M:ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  fullName: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.Process(ArmoniK.Core.Common.Stream.Worker.ITaskHandler)
  nameWithType: SampleComputerService.Process(ITaskHandler)
- uid: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.Process*
  name: Process
  href: api/ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.html#ArmoniK_Samples_HtcMock_GridWorker_SampleComputerService_Process_
  commentId: Overload:ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.Process
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.GridWorker.SampleComputerService.Process
  nameWithType: SampleComputerService.Process
- uid: ArmoniK.Samples.HtcMock.Server
  name: ArmoniK.Samples.HtcMock.Server
  href: api/ArmoniK.Samples.HtcMock.Server.html
  commentId: N:ArmoniK.Samples.HtcMock.Server
  fullName: ArmoniK.Samples.HtcMock.Server
  nameWithType: ArmoniK.Samples.HtcMock.Server
- uid: ArmoniK.Samples.HtcMock.Server.Program
  name: Program
  href: api/ArmoniK.Samples.HtcMock.Server.Program.html
  commentId: T:ArmoniK.Samples.HtcMock.Server.Program
  fullName: ArmoniK.Samples.HtcMock.Server.Program
  nameWithType: Program
- uid: ArmoniK.Samples.HtcMock.Server.Program.Main(System.String[])
  name: Main(String[])
  href: api/ArmoniK.Samples.HtcMock.Server.Program.html#ArmoniK_Samples_HtcMock_Server_Program_Main_System_String___
  commentId: M:ArmoniK.Samples.HtcMock.Server.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: ArmoniK.Samples.HtcMock.Server.Program.Main(System.String[])
  fullName.vb: ArmoniK.Samples.HtcMock.Server.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: ArmoniK.Samples.HtcMock.Server.Program.Main*
  name: Main
  href: api/ArmoniK.Samples.HtcMock.Server.Program.html#ArmoniK_Samples_HtcMock_Server_Program_Main_
  commentId: Overload:ArmoniK.Samples.HtcMock.Server.Program.Main
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMock.Server.Program.Main
  nameWithType: Program.Main
- uid: armonik_core_api
  name: Armonik.Core API
  href: api/index.html
