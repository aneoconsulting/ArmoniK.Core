version: '3.7'

services:

  database:
    image: mongo
    networks:
      - armonik-backend
    ports:
      - 27017:27017

  object:
    image: redis:bullseye
    command: redis-server
    networks:
      - armonik-backend
    expose:
      - 6379

  armonik.control.submitter:
    image: ${ARMONIK_SUBMITTER}
    depends_on:
      database:
        condition: service_started
      queue:
        condition: service_started
      object:
        condition: service_started
      fluentbit:
        condition: service_started
    networks:
      - armonik-net
      - armonik-backend
      - armonik-monitoring
    ports:
      - 5001:1080
      - 5011:1081
    environment:
      - Components__TableStorage=ArmoniK.Adapters.MongoDB.TableStorage
      - MongoDB__Host=database
      - MongoDB__Port=27017
      - MongoDB__DatabaseName=database
      - MongoDB__MaxConnectionPoolSize=500
      - MongoDB__TableStorage__PollingDelayMin=00:00:01
      - MongoDB__TableStorage__PollingDelayMax=00:00:01
      - Components__ObjectStorage=ArmoniK.Adapters.Redis.ObjectStorage
      - Redis__EndpointUrl=object:6379
      - Submitter__DefaultPartition=TestPartition0
      - Serilog__MinimumLevel=${LOGGING_LEVEL:-Information}
      - Zipkin__Uri=http://zipkin:9411/api/v2/spans
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    healthcheck:
      test:
        - "CMD"
        - "bash"
        - "-c"
        - |
          exec 3<>"/dev/tcp/localhost/1081"
          echo -e "GET /liveness HTTP/1.1\r\nHost: localhost:1081\r\nConnection: close\r\n\r\n">&3 &
          cat <&3 | grep Healthy || exit 1 && echo "$$?"
      interval: 5s
      timeout: 3s
      start_period: 10s
      retries: 5

  armonik.control.metrics:
    image: ${ARMONIK_METRICS}
    depends_on:
      - database
      - object
      - queue
      - fluentbit
    networks:
      - armonik-net
      - armonik-backend
      - armonik-monitoring
    ports:
      - 5002:1080
    environment:
      - Components__TableStorage=ArmoniK.Adapters.MongoDB.TableStorage
      - MongoDB__Host=database
      - MongoDB__Port=27017
      - MongoDB__DatabaseName=database
      - MongoDB__MaxConnectionPoolSize=500
      - MongoDB__TableStorage__PollingDelayMin=00:00:01
      - MongoDB__TableStorage__PollingDelayMax=00:00:10
      - Serilog__MinimumLevel=${LOGGING_LEVEL:-Information}
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  armonik.control.partitionmetrics:
    image: ${ARMONIK_PARTITIONMETRICS}
    depends_on:
      - database
      - object
      - queue
      - fluentbit
      - armonik.control.metrics
    networks:
      - armonik-net
      - armonik-backend
      - armonik-monitoring
    ports:
      - 5003:1080
    environment:
      - Components__TableStorage=ArmoniK.Adapters.MongoDB.TableStorage
      - MongoDB__Host=database
      - MongoDB__Port=27017
      - MongoDB__DatabaseName=database
      - MongoDB__MaxConnectionPoolSize=500
      - MongoDB__TableStorage__PollingDelayMin=00:00:01
      - MongoDB__TableStorage__PollingDelayMax=00:00:10
      - Serilog__MinimumLevel=${LOGGING_LEVEL:-Information}
      - MetricsExporter__Host=http://armonik.control.metrics
      - MetricsExporter__Port=1080
      - MetricsExporter__Path=/metrics
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  armonik.compute.pollingagent0: &armonik_compute_pollingagent_base
    image: ${ARMONIK_POLLINGAGENT}
    depends_on:
      database:
        condition: service_started
      queue:
        condition: service_started
      object:
        condition: service_started
      fluentbit:
        condition: service_started
      zipkin:
        condition: service_started
    networks:
      - armonik-backend
      - armonik-monitoring
    environment:
      - Components__TableStorage=ArmoniK.Adapters.MongoDB.TableStorage
      - MongoDB__Host=database
      - MongoDB__Port=27017
      - MongoDB__DatabaseName=database
      - MongoDB__MaxConnectionPoolSize=500
      - MongoDB__TableStorage__PollingDelayMin=00:00:01
      - MongoDB__TableStorage__PollingDelayMax=00:00:10
      - Components__ObjectStorage=ArmoniK.Adapters.Redis.ObjectStorage
      - Redis__EndpointUrl=object:6379
      - Pollster__MaxErrorAllowed=-1
      - InitWorker__WorkerCheckRetries=10
      - InitWorker__WorkerCheckDelay=00:00:10
      - Serilog__MinimumLevel=${LOGGING_LEVEL:-Information}
      - Zipkin__Uri=http://zipkin:9411/api/v2/spans
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224
    healthcheck:
      test:
        - "CMD"
        - "bash"
        - "-c"
        - |
          exec 3<>"/dev/tcp/localhost/1080"
          echo -e "GET /liveness HTTP/1.1\r\nHost: localhost:1080\r\nConnection: close\r\n\r\n">&3 &
          cat <&3 | grep Healthy || exit 1 && echo "$$?"
      interval: 5s
      timeout: 3s
      start_period: 10s
      retries: 5


    # deploy:
    #   resources:
    #     limits:
    #       cpus: '0.5'

  armonik.compute.pollingagent1:
    <<: *armonik_compute_pollingagent_base

  armonik.compute.pollingagent2:
    <<: *armonik_compute_pollingagent_base

  armonik.compute.worker0: &armonik_compute_worker_base
    image: ${ARMONIK_WORKER}
    # build:
    #   context: ..
    #   dockerfile: Tests/Stream/Server/Dockerfile
    networks:
      - armonik-net
      - armonik-monitoring
    depends_on:
      - fluentbit
    environment:
      - Serilog__Properties__Application=ArmoniK.Compute.Worker
      - Serilog__MinimumLevel=${LOGGING_LEVEL:-Information}
    logging:
      driver: fluentd
      options:
        fluentd-address: 127.0.0.1:24224

  armonik.compute.worker1:
    <<: *armonik_compute_worker_base

  armonik.compute.worker2:
    <<: *armonik_compute_worker_base

  fluentbit:
    image: fluent/fluent-bit:latest
    restart: always
    networks:
      - armonik-monitoring
    volumes:
      - ./fluent-bit/etc:/fluent-bit/etc
      - ./logs:/logs
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      - seq

  seq:
    image: datalust/seq:latest
    restart: always
    networks:
      - armonik-monitoring
    ports:
      - "80:80"
      - "5341:5341"
    environment:
      - ACCEPT_EULA=Y

  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9411:9411"
    networks:
      - armonik-monitoring

networks:
  armonik-net:
    name: armonik-net
  armonik-backend:
    name: armonik-backend
  armonik-monitoring:
    name: armonik-monitoring

volumes:
  socket_vol0: {}
  socket_vol1: {}
  socket_vol2: {}
